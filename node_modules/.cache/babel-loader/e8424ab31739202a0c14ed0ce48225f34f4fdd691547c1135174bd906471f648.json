{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmorrison/Code/narrativeforge/src/components/ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Send, Settings, Music, BookOpen, ScrollText } from 'lucide-react';\nimport RoleplayInstructions from './RoleplayInstructions';\nimport MobilePhoneUI from './MobilePhoneUI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  character,\n  scenario,\n  onSaveChat,\n  geminiService,\n  onReset\n}) => {\n  _s();\n  var _scenario$setting, _scenario$setting2, _scenario$setting3, _scenario$otherCharac;\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [messageType, setMessageType] = useState('dialogue'); // dialogue, action, thought\n  const [isPhoneMode, setIsPhoneMode] = useState(false); // State to track if we're in phone mode\n  const [showInstructionsEditor, setShowInstructionsEditor] = useState(false);\n  const [showSettingsPanel, setShowSettingsPanel] = useState(false);\n  const [showMusicPanel, setShowMusicPanel] = useState(false);\n  const [showScenarioInfo, setShowScenarioInfo] = useState(false);\n  const [roleplayInstructions, setRoleplayInstructions] = useState((scenario === null || scenario === void 0 ? void 0 : scenario.roleplayInstructions) || '');\n  const messagesEndRef = useRef(null);\n\n  // When scenario changes, update the roleplay instructions\n  useEffect(() => {\n    if (scenario && scenario.roleplayInstructions) {\n      setRoleplayInstructions(scenario.roleplayInstructions);\n    }\n  }, [scenario]);\n\n  // Initial system message when the scenario begins\n  useEffect(() => {\n    if (scenario && !messages.length) {\n      // Create day header\n      const dayHeader = {\n        id: Date.now() - 2,\n        type: 'system',\n        content: 'Day 1, Late-night',\n        timestamp: new Date()\n      };\n\n      // Create initial narrative message describing the scenario\n      const formattedContent = scenario.initialSituation.replace(/TikTok/g, '🎵 TikTok').replace(/Instagram/g, '📱 Instagram').replace(/YouTube/g, '▶️ YouTube').replace(/Twitter/g, '🐦 Twitter').replace(/@([\\w]+)/g, '@$1').replace(/girlfriend/g, 'girlfriend 💔').replace(/video call/g, 'video call 📱').replace(/guitar/g, 'guitar 🎸').replace(/notifications/g, 'notifications 🔔');\n      const initialMessage = {\n        id: Date.now() - 1,\n        type: 'social',\n        content: formattedContent,\n        timestamp: new Date()\n      };\n      setMessages([dayHeader, initialMessage]);\n\n      // If there are roleplay instructions, set them but DON'T add them as a visible message\n      if (scenario.roleplayInstructions) {\n        setRoleplayInstructions(scenario.roleplayInstructions);\n      }\n\n      // Simulate AI thinking and then responding to set the scene\n      handleAiResponse();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scenario]);\n\n  // Auto-scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // Save roleplay instructions\n  const saveRoleplayInstructions = instructions => {\n    setRoleplayInstructions(instructions);\n    setShowInstructionsEditor(false);\n\n    // Don't add to visible messages, but update the AI context\n    if (geminiService) {\n      geminiService.updateInstructions(instructions);\n    }\n  };\n\n  // Cancel editing instructions\n  const cancelEditInstructions = () => {\n    setShowInstructionsEditor(false);\n  };\n\n  // Send user message\n  const handleSendMessage = customText => {\n    // Use either the custom text or the inputValue\n    const messageText = customText || inputValue;\n\n    // Check that we have a valid string to work with\n    if (!messageText) return;\n\n    // Ensure messageText is a string before calling trim\n    if (typeof messageText === 'string') {\n      if (!messageText.trim()) return;\n\n      // Check for phone mode commands\n      // Ensure messageText is a string before calling toLowerCase\n      const lowerText = messageText.toLowerCase();\n      if (lowerText.includes('check my phone') || lowerText.includes('look at my phone') || lowerText.includes('check phone') || lowerText.includes('use my phone')) {\n        setIsPhoneMode(true);\n      } else if (lowerText.includes('put phone away') || lowerText.includes('stop using phone') || lowerText.includes('put away phone') || lowerText.includes('exit phone')) {\n        setIsPhoneMode(false);\n      }\n\n      // Detect message type based on content and chosen type\n      let detectedType = messageType;\n\n      // Detect social media messages\n      if (lowerText.includes('@') || lowerText.includes('#') || lowerText.includes('instagram') || lowerText.includes('tiktok') || lowerText.includes('youtube') || lowerText.includes('twitter') || lowerText.includes('followers') || lowerText.includes('likes') || lowerText.includes('message requests:')) {\n        detectedType = 'social';\n      }\n\n      // Add day header if this is the first message in a while\n      const now = new Date();\n      if (messages.length > 0) {\n        const lastMessageTime = messages[messages.length - 1].timestamp;\n        // If more than 3 hours since last message, add a timestamp header\n        if ((now - lastMessageTime) / (1000 * 60 * 60) > 3) {\n          const dayHeader = {\n            id: Date.now() - 1,\n            // Ensure unique ID\n            type: 'system',\n            content: getDayHeaderText(now),\n            timestamp: now\n          };\n          setMessages(prev => [...prev, dayHeader]);\n        }\n      }\n\n      // Create user message object\n      const userMessage = {\n        id: Date.now(),\n        sender: 'user',\n        type: detectedType,\n        content: messageText,\n        timestamp: now\n      };\n\n      // Add message to chat\n      setMessages(prev => [...prev, userMessage]);\n\n      // Clear input field\n      setInputValue('');\n\n      // Process with AI\n      handleAiResponse(userMessage.content, userMessage.type);\n    } else {\n      // Handle case where messageText is not a string\n      console.error('messageText is not a string:', messageText);\n    }\n  };\n\n  // Helper function to get appropriate day header text\n  const getDayHeaderText = date => {\n    const hours = date.getHours();\n    let timeOfDay = '';\n    if (hours >= 5 && hours < 12) {\n      timeOfDay = 'Morning';\n    } else if (hours >= 12 && hours < 17) {\n      timeOfDay = 'Afternoon';\n    } else if (hours >= 17 && hours < 22) {\n      timeOfDay = 'Evening';\n    } else {\n      timeOfDay = 'Late-night';\n    }\n    return `Day ${Math.floor(Math.random() * 5 + 1)}, ${timeOfDay}`;\n  };\n\n  // Handle key press (Enter to send)\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // Get AI response\n  const handleAiResponse = useCallback(async (userMessage, messageType) => {\n    setIsTyping(true);\n    try {\n      let responseContent;\n\n      // If we have a Gemini service, use it\n      if (geminiService) {\n        // For the first message, include roleplay instructions if they exist\n        if (!userMessage && roleplayInstructions) {\n          // Add it to the context for the AI but don't show it in chat\n          const initPrompt = `Initial scene: ${scenario === null || scenario === void 0 ? void 0 : scenario.initialSituation}\\n\\nRoleplay instructions:\\n${roleplayInstructions}\\n\\nPlease respond with an opening for this scene, following the roleplay instructions but without mentioning them directly.`;\n          responseContent = await geminiService.generateGeneric(initPrompt);\n        } else {\n          responseContent = await geminiService.generateResponse(userMessage, messageType);\n        }\n      } else {\n        // Fallback for development\n        await new Promise(resolve => setTimeout(resolve, 1500));\n        responseContent = \"This is a placeholder response. In the full implementation, this would be a response from Google's Gemini LLM, responding appropriately to your character's situation.\";\n      }\n\n      // Check if the AI response is implying phone interaction\n      const lowerResponse = responseContent.toLowerCase();\n      if (lowerResponse.includes('on your phone') || lowerResponse.includes('your phone shows') || lowerResponse.includes('on the screen of your phone')) {\n        // Activate phone mode if AI refers to phone content\n        setIsPhoneMode(true);\n      }\n\n      // Detect if this should be a social media response\n      let responseType = 'dialogue';\n      if (messageType === 'social' || responseContent && (responseContent.includes('@') || responseContent.includes('Instagram') || responseContent.includes('TikTok') || responseContent.includes('followers'))) {\n        responseType = 'social';\n      } else if (messageType === 'action') {\n        responseType = 'action';\n      } else if (messageType === 'thought') {\n        responseType = 'thought';\n      }\n      const aiMessage = {\n        id: Date.now(),\n        sender: 'ai',\n        type: responseType,\n        content: responseContent,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      console.error('Error getting AI response:', error);\n\n      // Add error message\n      const errorMessage = {\n        id: Date.now(),\n        sender: 'system',\n        type: 'error',\n        content: 'There was an error getting a response. Please try again.',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsTyping(false);\n    }\n  }, [geminiService, roleplayInstructions, scenario]);\n\n  // Format message based on type\n  const formatText = text => {\n    if (!text) return '';\n    if (typeof text !== 'string') return '';\n\n    // Ensure proper paragraph spacing by normalizing all line breaks\n    // First, normalize different line break styles\n    let normalizedText = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n\n    // Format social media messages with proper styling\n    if (normalizedText.includes('@') || normalizedText.includes('#') || normalizedText.includes('Instagram') || normalizedText.includes('TikTok')) {\n      // Add emoji and styling to social media content\n      const formattedText = normalizedText.replace(/Instagram/g, '📱 Instagram').replace(/TikTok/g, '🎵 TikTok').replace(/YouTube/g, '▶️ YouTube').replace(/Twitter/g, '🐦 Twitter').replace(/direct message/gi, 'DM 💬').replace(/@([\\w]+)/g, '<span class=\"handle\">@$1</span>').replace(/\"([^\"]+)\"/g, '<span class=\"quote\">\"$1\"</span>').replace(/\\bviral\\b/g, '<span class=\"highlight\">viral</span>').replace(/\\bfollowers\\b/g, 'followers 👥').replace(/\\blikes\\b/g, 'likes ❤️').replace(/\\bcomments\\b/g, 'comments 💬').replace(/\\bshares\\b/g, 'shares 🔄');\n\n      // Make sure we have proper paragraph breaks\n      // Split by double newlines (paragraphs) or ensure line breaks in longer text\n      const paragraphs = formattedText.split(/\\n\\s*\\n/);\n      if (paragraphs.length === 1 && paragraphs[0].length > 200) {\n        // Long single paragraph - try to break it at sentence boundaries\n        const sentences = paragraphs[0].split(/(?<=\\.)\\s+/);\n        // Group sentences into reasonable paragraphs\n        const groupedParagraphs = [];\n        let currentParagraph = '';\n        sentences.forEach(sentence => {\n          if (currentParagraph.length + sentence.length > 200) {\n            groupedParagraphs.push(currentParagraph);\n            currentParagraph = sentence;\n          } else {\n            currentParagraph += (currentParagraph ? ' ' : '') + sentence;\n          }\n        });\n        if (currentParagraph) {\n          groupedParagraphs.push(currentParagraph);\n        }\n        return groupedParagraphs.map((para, i) => {\n          const processedPara = para.replace(/\\n/g, '<br />');\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            dangerouslySetInnerHTML: {\n              __html: processedPara\n            }\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 18\n          }, this);\n        });\n      }\n      return paragraphs.map((para, i) => {\n        const processedPara = para.replace(/\\n/g, '<br />');\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          dangerouslySetInnerHTML: {\n            __html: processedPara\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 16\n        }, this);\n      });\n    }\n\n    // For message lists like the Instagram DM requests\n    if (normalizedText.includes('Instagram Message Requests:')) {\n      const sections = normalizedText.split(/\\n\\s*\\n/);\n      return sections.map((section, i) => {\n        if (section.includes('•')) {\n          // This is a list section\n          const listItems = section.split('•').filter(item => item.trim());\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-list\",\n            children: listItems.map((item, j) => {\n              // Check if this contains a username and message\n              const parts = item.split(/\\n/);\n              if (parts.length > 1) {\n                const username = parts[0].trim();\n                const messageText = parts.slice(1).join('\\n').trim();\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dm-message\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dm-username\",\n                    children: username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dm-content\",\n                    children: /*#__PURE__*/_jsxDEV(\"em\", {\n                      children: [\"\\\"\", messageText, \"\\\"\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 51\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 23\n                  }, this)]\n                }, j, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 21\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.trim()\n                }, j, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 26\n                }, this);\n              }\n            })\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this);\n        } else {\n          // Regular paragraph\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: section\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 18\n          }, this);\n        }\n      });\n    }\n\n    // Regular content - split by paragraphs\n    // First check if we need to add paragraph breaks to a long single paragraph\n    const paragraphs = normalizedText.split(/\\n\\s*\\n/);\n    if (paragraphs.length === 1 && paragraphs[0].length > 200) {\n      // Long single paragraph - try to break it at sentence boundaries\n      const sentences = paragraphs[0].split(/(?<=\\.)\\s+/);\n      // Group sentences into reasonable paragraphs\n      const groupedParagraphs = [];\n      let currentParagraph = '';\n      sentences.forEach(sentence => {\n        if (currentParagraph.length + sentence.length > 200) {\n          groupedParagraphs.push(currentParagraph);\n          currentParagraph = sentence;\n        } else {\n          currentParagraph += (currentParagraph ? ' ' : '') + sentence;\n        }\n      });\n      if (currentParagraph) {\n        groupedParagraphs.push(currentParagraph);\n      }\n      return groupedParagraphs.map((para, i) => {\n        // Replace single newlines with <br>\n        const formattedPara = para.replace(/\\n/g, '<br />');\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          dangerouslySetInnerHTML: {\n            __html: formattedPara\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 16\n        }, this);\n      });\n    }\n    return paragraphs.map((para, i) => {\n      // Replace single newlines with <br>\n      const formattedPara = para.replace(/\\n/g, '<br />');\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        dangerouslySetInnerHTML: {\n          __html: formattedPara\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  // Format message based on type\n  const formatMessage = message => {\n    // Create a timestamp element\n    const timestamp = /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"timestamp\",\n      children: message.timestamp.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 7\n    }, this);\n    switch (message.type) {\n      case 'system':\n        // For system messages like day headers\n        if (message.content.startsWith('Day ') || message.content.includes('Late-night')) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-header\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day-marker\",\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 13\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"system-message\",\n          children: formatText(message.content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 16\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 16\n        }, this);\n      case 'dialogue':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `dialogue-message ${message.sender}`,\n          children: [formatText(message.content), timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this);\n      case 'action':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `action-message ${message.sender}`,\n          children: [formatText(message.content), timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 11\n        }, this);\n      case 'thought':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `thought-message ${message.sender}`,\n          children: [formatText(message.content), timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 440,\n          columnNumber: 11\n        }, this);\n      case 'social':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `social-message ${message.sender}`,\n          children: [formatText(message.content), timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: [formatText(message.content), timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: (scenario === null || scenario === void 0 ? void 0 : scenario.title) || 'Untitled Scenario'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn reset-chat-btn\",\n          onClick: onReset,\n          title: \"Start Over\",\n          children: \"Start Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: () => setShowInstructionsEditor(true),\n          title: \"View/Edit Roleplay Instructions\",\n          children: /*#__PURE__*/_jsxDEV(ScrollText, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: () => setShowSettingsPanel(true),\n          title: \"Roleplay Settings\",\n          children: /*#__PURE__*/_jsxDEV(Settings, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: () => setShowMusicPanel(true),\n          title: \"Ambient Music\",\n          children: /*#__PURE__*/_jsxDEV(Music, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 490,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: () => setShowScenarioInfo(true),\n          title: \"View Scenario Details\",\n          children: /*#__PURE__*/_jsxDEV(BookOpen, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [isPhoneMode ? /*#__PURE__*/_jsxDEV(MobilePhoneUI, {\n        messages: messages,\n        onSendMessage: handleSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 11\n      }, this) : (/* Regular message display */\n      messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-wrapper ${message.sender}`,\n        children: [formatMessage(message), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timestamp\",\n          children: message.timestamp.toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 15\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 13\n      }, this))), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 530,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-type-selector\",\n      style: {\n        display: isPhoneMode ? 'none' : 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-type-help\",\n        title: \"Choose how you want to respond\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"type-help-text\",\n          children: \"Response type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 539,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 538,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `type-btn ${messageType === 'dialogue' ? 'active' : ''}`,\n        onClick: () => setMessageType('dialogue'),\n        title: \"What you say out loud to characters\",\n        children: \"Dialogue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `type-btn ${messageType === 'action' ? 'active' : ''}`,\n        onClick: () => setMessageType('action'),\n        title: \"Physical actions you take\",\n        children: \"Action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 548,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `type-btn ${messageType === 'thought' ? 'active' : ''}`,\n        onClick: () => setMessageType('thought'),\n        title: \"Your inner thoughts (not heard by others)\",\n        children: \"Thought\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `type-btn ${messageType === 'social' ? 'active' : ''}`,\n        onClick: () => setMessageType('social'),\n        title: \"Social media posts, DMs, notifications\",\n        children: \"Social\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 7\n    }, this), !isPhoneMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        onKeyDown: handleKeyPress,\n        placeholder: messageType === 'dialogue' ? 'Type your dialogue...' : messageType === 'action' ? 'Describe your action...' : messageType === 'thought' ? 'Share your thoughts...' : 'Type social media content, DMs, or notifications...',\n        rows: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-btn\",\n        onClick: handleSendMessage,\n        children: /*#__PURE__*/_jsxDEV(Send, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 573,\n      columnNumber: 9\n    }, this), isPhoneMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"phone-mode-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"exit-phone-btn\",\n        onClick: () => setIsPhoneMode(false),\n        children: \"Put Phone Away\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 9\n    }, this), showInstructionsEditor && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(RoleplayInstructions, {\n          instructions: roleplayInstructions,\n          onSave: saveRoleplayInstructions,\n          onCancel: cancelEditInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 9\n    }, this), showSettingsPanel && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Roleplay Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowSettingsPanel(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"AI Response Style\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Temperature:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0.3\",\n                  children: \"More Focused (0.3)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 626,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0.7\",\n                  selected: true,\n                  children: \"Balanced (0.7)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 627,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1.0\",\n                  children: \"More Creative (1.0)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 628,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"setting-description\",\n              children: \"Lower values make responses more predictable, higher values make them more creative.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Display Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-control\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 21\n                }, this), \" Dark Mode\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 637,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-control\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 643,\n                  columnNumber: 21\n                }, this), \" Show Timestamps\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-settings-btn\",\n            children: \"Save Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 648,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 615,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 9\n    }, this), showMusicPanel && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Ambient Music\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 659,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowMusicPanel(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 658,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose background music to enhance your roleplay experience:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"music-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"music-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Atmospheric\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 667,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Gentle Ambient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 668,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Dark Ambient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 669,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Space\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 670,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 666,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"music-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Emotional\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 674,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Melancholic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 675,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Hopeful\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 676,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Tense\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 677,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 673,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"music-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Location-based\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Nature Sounds\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Urban\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 683,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Rain & Thunder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 684,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"music-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Stop Music\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"volume-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Volume:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 691,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"0\",\n                max: \"100\",\n                value: \"70\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 690,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 688,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"music-note\",\n            children: \"Music feature coming soon! This is a placeholder interface.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 9\n    }, this), showScenarioInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Scenario Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 707,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowScenarioInfo(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 708,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-body scenario-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: (scenario === null || scenario === void 0 ? void 0 : scenario.title) || 'Untitled Scenario'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Setting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 20\n              }, this), \" \", (scenario === null || scenario === void 0 ? void 0 : (_scenario$setting = scenario.setting) === null || _scenario$setting === void 0 ? void 0 : _scenario$setting.location) || 'Not specified']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 20\n              }, this), \" \", (scenario === null || scenario === void 0 ? void 0 : (_scenario$setting2 = scenario.setting) === null || _scenario$setting2 === void 0 ? void 0 : _scenario$setting2.time) || 'Not specified']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Atmosphere:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 20\n              }, this), \" \", (scenario === null || scenario === void 0 ? void 0 : (_scenario$setting3 = scenario.setting) === null || _scenario$setting3 === void 0 ? void 0 : _scenario$setting3.atmosphere) || 'Not specified']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Your Character\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 20\n              }, this), \" \", (character === null || character === void 0 ? void 0 : character.name) || 'Unnamed']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 722,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Age:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 20\n              }, this), \" \", (character === null || character === void 0 ? void 0 : character.age) || 'Not specified']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Other Characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 17\n            }, this), (scenario === null || scenario === void 0 ? void 0 : (_scenario$otherCharac = scenario.otherCharacters) === null || _scenario$otherCharac === void 0 ? void 0 : _scenario$otherCharac.map((char, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"other-character\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: char.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 730,\n                  columnNumber: 24\n                }, this), \" (\", char.role, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 730,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: char.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 19\n            }, this))) || /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No other characters specified.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 726,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Narrative Goals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 737,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: (scenario === null || scenario === void 0 ? void 0 : scenario.narrativeGoals) || 'No specific goals set.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 736,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Tone & Themes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: (scenario === null || scenario === void 0 ? void 0 : scenario.toneAndThemes) || 'Not specified'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 741,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 704,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 465,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"3YJRRZX6JDrV92H89V7yW7aSigc=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Send","Settings","Music","BookOpen","ScrollText","RoleplayInstructions","MobilePhoneUI","jsxDEV","_jsxDEV","ChatInterface","character","scenario","onSaveChat","geminiService","onReset","_s","_scenario$setting","_scenario$setting2","_scenario$setting3","_scenario$otherCharac","messages","setMessages","inputValue","setInputValue","isTyping","setIsTyping","messageType","setMessageType","isPhoneMode","setIsPhoneMode","showInstructionsEditor","setShowInstructionsEditor","showSettingsPanel","setShowSettingsPanel","showMusicPanel","setShowMusicPanel","showScenarioInfo","setShowScenarioInfo","roleplayInstructions","setRoleplayInstructions","messagesEndRef","length","dayHeader","id","Date","now","type","content","timestamp","formattedContent","initialSituation","replace","initialMessage","handleAiResponse","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","saveRoleplayInstructions","instructions","updateInstructions","cancelEditInstructions","handleSendMessage","customText","messageText","trim","lowerText","toLowerCase","includes","detectedType","lastMessageTime","getDayHeaderText","prev","userMessage","sender","console","error","date","hours","getHours","timeOfDay","Math","floor","random","handleKeyPress","e","key","shiftKey","preventDefault","responseContent","initPrompt","generateGeneric","generateResponse","Promise","resolve","setTimeout","lowerResponse","responseType","aiMessage","errorMessage","formatText","text","normalizedText","formattedText","paragraphs","split","sentences","groupedParagraphs","currentParagraph","forEach","sentence","push","map","para","i","processedPara","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","sections","section","listItems","filter","item","className","children","j","parts","username","slice","join","formattedPara","formatMessage","message","toLocaleTimeString","hour","minute","startsWith","title","onClick","size","onSendMessage","ref","style","display","value","onChange","target","onKeyDown","placeholder","rows","onSave","onCancel","selected","checked","min","max","setting","location","time","atmosphere","name","age","otherCharacters","char","index","role","description","narrativeGoals","toneAndThemes","_c","$RefreshReg$"],"sources":["/Users/ryanmorrison/Code/narrativeforge/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Send, Settings, Music, BookOpen, ScrollText } from 'lucide-react';\nimport RoleplayInstructions from './RoleplayInstructions';\nimport MobilePhoneUI from './MobilePhoneUI';\n\nconst ChatInterface = ({ character, scenario, onSaveChat, geminiService, onReset }) => {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [messageType, setMessageType] = useState('dialogue'); // dialogue, action, thought\n  const [isPhoneMode, setIsPhoneMode] = useState(false); // State to track if we're in phone mode\n  const [showInstructionsEditor, setShowInstructionsEditor] = useState(false);\n  const [showSettingsPanel, setShowSettingsPanel] = useState(false);\n  const [showMusicPanel, setShowMusicPanel] = useState(false);\n  const [showScenarioInfo, setShowScenarioInfo] = useState(false);\n  const [roleplayInstructions, setRoleplayInstructions] = useState(scenario?.roleplayInstructions || '');\n  const messagesEndRef = useRef(null);\n  \n  // When scenario changes, update the roleplay instructions\n  useEffect(() => {\n    if (scenario && scenario.roleplayInstructions) {\n      setRoleplayInstructions(scenario.roleplayInstructions);\n    }\n  }, [scenario]);\n  \n  // Initial system message when the scenario begins\n  useEffect(() => {\n    if (scenario && !messages.length) {\n      // Create day header\n      const dayHeader = {\n        id: Date.now() - 2,\n        type: 'system',\n        content: 'Day 1, Late-night',\n        timestamp: new Date()\n      };\n      \n      // Create initial narrative message describing the scenario\n      const formattedContent = scenario.initialSituation\n        .replace(/TikTok/g, '🎵 TikTok')\n        .replace(/Instagram/g, '📱 Instagram')\n        .replace(/YouTube/g, '▶️ YouTube')\n        .replace(/Twitter/g, '🐦 Twitter')\n        .replace(/@([\\w]+)/g, '@$1')\n        .replace(/girlfriend/g, 'girlfriend 💔')\n        .replace(/video call/g, 'video call 📱')\n        .replace(/guitar/g, 'guitar 🎸')\n        .replace(/notifications/g, 'notifications 🔔');\n      \n      const initialMessage = {\n        id: Date.now() - 1,\n        type: 'social',\n        content: formattedContent,\n        timestamp: new Date()\n      };\n      \n      setMessages([dayHeader, initialMessage]);\n      \n      // If there are roleplay instructions, set them but DON'T add them as a visible message\n      if (scenario.roleplayInstructions) {\n        setRoleplayInstructions(scenario.roleplayInstructions);\n      }\n      \n      // Simulate AI thinking and then responding to set the scene\n      handleAiResponse();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scenario]);\n\n  // Auto-scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  // Save roleplay instructions\n  const saveRoleplayInstructions = (instructions) => {\n    setRoleplayInstructions(instructions);\n    setShowInstructionsEditor(false);\n    \n    // Don't add to visible messages, but update the AI context\n    if (geminiService) {\n      geminiService.updateInstructions(instructions);\n    }\n  };\n\n  // Cancel editing instructions\n  const cancelEditInstructions = () => {\n    setShowInstructionsEditor(false);\n  };\n\n  // Send user message\n  const handleSendMessage = (customText) => {\n    // Use either the custom text or the inputValue\n    const messageText = customText || inputValue;\n    \n    // Check that we have a valid string to work with\n    if (!messageText) return;\n    \n    // Ensure messageText is a string before calling trim\n    if (typeof messageText === 'string') {\n      if (!messageText.trim()) return;\n      \n      // Check for phone mode commands\n      // Ensure messageText is a string before calling toLowerCase\n      const lowerText = messageText.toLowerCase();\n      if (lowerText.includes('check my phone') || lowerText.includes('look at my phone') || \n          lowerText.includes('check phone') || lowerText.includes('use my phone')) {\n        setIsPhoneMode(true);\n      } else if (lowerText.includes('put phone away') || lowerText.includes('stop using phone') || \n                 lowerText.includes('put away phone') || lowerText.includes('exit phone')) {\n        setIsPhoneMode(false);\n      }\n      \n      // Detect message type based on content and chosen type\n      let detectedType = messageType;\n      \n      // Detect social media messages\n      if (lowerText.includes('@') || lowerText.includes('#') || \n          lowerText.includes('instagram') || lowerText.includes('tiktok') || \n          lowerText.includes('youtube') || lowerText.includes('twitter') ||\n          lowerText.includes('followers') || lowerText.includes('likes') ||\n          lowerText.includes('message requests:')) {\n        detectedType = 'social';\n      }\n      \n      // Add day header if this is the first message in a while\n      const now = new Date();\n      if (messages.length > 0) {\n        const lastMessageTime = messages[messages.length - 1].timestamp;\n        // If more than 3 hours since last message, add a timestamp header\n        if ((now - lastMessageTime) / (1000 * 60 * 60) > 3) {\n          const dayHeader = {\n            id: Date.now() - 1, // Ensure unique ID\n            type: 'system',\n            content: getDayHeaderText(now),\n            timestamp: now\n          };\n          setMessages(prev => [...prev, dayHeader]);\n        }\n      }\n      \n      // Create user message object\n      const userMessage = {\n        id: Date.now(),\n        sender: 'user',\n        type: detectedType,\n        content: messageText,\n        timestamp: now\n      };\n      \n      // Add message to chat\n      setMessages(prev => [...prev, userMessage]);\n      \n      // Clear input field\n      setInputValue('');\n      \n      // Process with AI\n      handleAiResponse(userMessage.content, userMessage.type);\n    } else {\n      // Handle case where messageText is not a string\n      console.error('messageText is not a string:', messageText);\n    }\n  };\n  \n  // Helper function to get appropriate day header text\n  const getDayHeaderText = (date) => {\n    const hours = date.getHours();\n    let timeOfDay = '';\n    \n    if (hours >= 5 && hours < 12) {\n      timeOfDay = 'Morning';\n    } else if (hours >= 12 && hours < 17) {\n      timeOfDay = 'Afternoon';\n    } else if (hours >= 17 && hours < 22) {\n      timeOfDay = 'Evening';\n    } else {\n      timeOfDay = 'Late-night';\n    }\n    \n    return `Day ${Math.floor(Math.random() * 5 + 1)}, ${timeOfDay}`;\n  };\n\n  // Handle key press (Enter to send)\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // Get AI response\n  const handleAiResponse = useCallback(async (userMessage, messageType) => {\n    setIsTyping(true);\n    \n    try {\n      let responseContent;\n      \n      // If we have a Gemini service, use it\n      if (geminiService) {\n        // For the first message, include roleplay instructions if they exist\n        if (!userMessage && roleplayInstructions) {\n          // Add it to the context for the AI but don't show it in chat\n          const initPrompt = `Initial scene: ${scenario?.initialSituation}\\n\\nRoleplay instructions:\\n${roleplayInstructions}\\n\\nPlease respond with an opening for this scene, following the roleplay instructions but without mentioning them directly.`;\n          responseContent = await geminiService.generateGeneric(initPrompt);\n        } else {\n          responseContent = await geminiService.generateResponse(userMessage, messageType);\n        }\n      } else {\n        // Fallback for development\n        await new Promise(resolve => setTimeout(resolve, 1500));\n        responseContent = \"This is a placeholder response. In the full implementation, this would be a response from Google's Gemini LLM, responding appropriately to your character's situation.\";\n      }\n      \n      // Check if the AI response is implying phone interaction\n      const lowerResponse = responseContent.toLowerCase();\n      if (lowerResponse.includes('on your phone') || \n          lowerResponse.includes('your phone shows') || \n          lowerResponse.includes('on the screen of your phone')) {\n        // Activate phone mode if AI refers to phone content\n        setIsPhoneMode(true);\n      }\n      \n      // Detect if this should be a social media response\n      let responseType = 'dialogue';\n      if (messageType === 'social' || \n          (responseContent && (responseContent.includes('@') || \n                             responseContent.includes('Instagram') || \n                             responseContent.includes('TikTok') || \n                             responseContent.includes('followers')))) {\n        responseType = 'social';\n      } else if (messageType === 'action') {\n        responseType = 'action';\n      } else if (messageType === 'thought') {\n        responseType = 'thought';\n      }\n      \n      const aiMessage = {\n        id: Date.now(),\n        sender: 'ai',\n        type: responseType,\n        content: responseContent,\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      console.error('Error getting AI response:', error);\n      \n      // Add error message\n      const errorMessage = {\n        id: Date.now(),\n        sender: 'system',\n        type: 'error',\n        content: 'There was an error getting a response. Please try again.',\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsTyping(false);\n    }\n  }, [geminiService, roleplayInstructions, scenario]);\n\n  // Format message based on type\n  const formatText = (text) => {\n    if (!text) return '';\n    if (typeof text !== 'string') return '';\n    \n    // Ensure proper paragraph spacing by normalizing all line breaks\n    // First, normalize different line break styles\n    let normalizedText = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n    \n    // Format social media messages with proper styling\n    if (normalizedText.includes('@') || normalizedText.includes('#') || normalizedText.includes('Instagram') || normalizedText.includes('TikTok')) {\n      // Add emoji and styling to social media content\n      const formattedText = normalizedText\n        .replace(/Instagram/g, '📱 Instagram')\n        .replace(/TikTok/g, '🎵 TikTok')\n        .replace(/YouTube/g, '▶️ YouTube')\n        .replace(/Twitter/g, '🐦 Twitter')\n        .replace(/direct message/gi, 'DM 💬')\n        .replace(/@([\\w]+)/g, '<span class=\"handle\">@$1</span>')\n        .replace(/\"([^\"]+)\"/g, '<span class=\"quote\">\"$1\"</span>')\n        .replace(/\\bviral\\b/g, '<span class=\"highlight\">viral</span>')\n        .replace(/\\bfollowers\\b/g, 'followers 👥')\n        .replace(/\\blikes\\b/g, 'likes ❤️')\n        .replace(/\\bcomments\\b/g, 'comments 💬')\n        .replace(/\\bshares\\b/g, 'shares 🔄');\n          \n      // Make sure we have proper paragraph breaks\n      // Split by double newlines (paragraphs) or ensure line breaks in longer text\n      const paragraphs = formattedText.split(/\\n\\s*\\n/);\n      if (paragraphs.length === 1 && paragraphs[0].length > 200) {\n        // Long single paragraph - try to break it at sentence boundaries\n        const sentences = paragraphs[0].split(/(?<=\\.)\\s+/);\n        // Group sentences into reasonable paragraphs\n        const groupedParagraphs = [];\n        let currentParagraph = '';\n        sentences.forEach(sentence => {\n          if (currentParagraph.length + sentence.length > 200) {\n            groupedParagraphs.push(currentParagraph);\n            currentParagraph = sentence;\n          } else {\n            currentParagraph += (currentParagraph ? ' ' : '') + sentence;\n          }\n        });\n        if (currentParagraph) {\n          groupedParagraphs.push(currentParagraph);\n        }\n        \n        return groupedParagraphs.map((para, i) => {\n          const processedPara = para.replace(/\\n/g, '<br />');\n          return <p key={i} dangerouslySetInnerHTML={{ __html: processedPara }} />;\n        });\n      }\n      \n      return paragraphs.map((para, i) => {\n        const processedPara = para.replace(/\\n/g, '<br />');\n        return <p key={i} dangerouslySetInnerHTML={{ __html: processedPara }} />;\n      });\n    }\n    \n    // For message lists like the Instagram DM requests\n    if (normalizedText.includes('Instagram Message Requests:')) {\n      const sections = normalizedText.split(/\\n\\s*\\n/);\n      \n      return sections.map((section, i) => {\n        if (section.includes('•')) {\n          // This is a list section\n          const listItems = section.split('•').filter(item => item.trim());\n          return (\n            <div key={i} className=\"message-list\">\n              {listItems.map((item, j) => {\n                // Check if this contains a username and message\n                const parts = item.split(/\\n/);\n                if (parts.length > 1) {\n                  const username = parts[0].trim();\n                  const messageText = parts.slice(1).join('\\n').trim();\n                  \n                  return (\n                    <div key={j} className=\"dm-message\">\n                      <div className=\"dm-username\">{username}</div>\n                      <div className=\"dm-content\"><em>\"{messageText}\"</em></div>\n                    </div>\n                  );\n                } else {\n                  return <p key={j}>{item.trim()}</p>;\n                }\n              })}\n            </div>\n          );\n        } else {\n          // Regular paragraph\n          return <p key={i}>{section}</p>;\n        }\n      });\n    }\n    \n    // Regular content - split by paragraphs\n    // First check if we need to add paragraph breaks to a long single paragraph\n    const paragraphs = normalizedText.split(/\\n\\s*\\n/);\n    \n    if (paragraphs.length === 1 && paragraphs[0].length > 200) {\n      // Long single paragraph - try to break it at sentence boundaries\n      const sentences = paragraphs[0].split(/(?<=\\.)\\s+/);\n      // Group sentences into reasonable paragraphs\n      const groupedParagraphs = [];\n      let currentParagraph = '';\n      sentences.forEach(sentence => {\n        if (currentParagraph.length + sentence.length > 200) {\n          groupedParagraphs.push(currentParagraph);\n          currentParagraph = sentence;\n        } else {\n          currentParagraph += (currentParagraph ? ' ' : '') + sentence;\n        }\n      });\n      if (currentParagraph) {\n        groupedParagraphs.push(currentParagraph);\n      }\n      \n      return groupedParagraphs.map((para, i) => {\n        // Replace single newlines with <br>\n        const formattedPara = para.replace(/\\n/g, '<br />');\n        return <p key={i} dangerouslySetInnerHTML={{ __html: formattedPara }} />;\n      });\n    }\n    \n    return paragraphs.map((para, i) => {\n      // Replace single newlines with <br>\n      const formattedPara = para.replace(/\\n/g, '<br />');\n      return <p key={i} dangerouslySetInnerHTML={{ __html: formattedPara }} />;\n    });\n  };\n    \n  // Format message based on type\n  const formatMessage = (message) => {\n    // Create a timestamp element\n    const timestamp = (\n      <span className=\"timestamp\">\n        {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n      </span>\n    );\n    \n    switch (message.type) {\n      case 'system':\n        // For system messages like day headers\n        if (message.content.startsWith('Day ') || message.content.includes('Late-night')) {\n          return (\n            <div className=\"day-header\">\n              <div className=\"day-marker\">{message.content}</div>\n            </div>\n          );\n        }\n        return <div className=\"system-message\">{formatText(message.content)}</div>;\n        \n      case 'error':\n        return <div className=\"error-message\">{message.content}</div>;\n        \n      case 'dialogue':\n        return (\n          <div className={`dialogue-message ${message.sender}`}>\n            {formatText(message.content)}\n            {timestamp}\n          </div>\n        );\n        \n      case 'action':\n        return (\n          <div className={`action-message ${message.sender}`}>\n            {formatText(message.content)}\n            {timestamp}\n          </div>\n        );\n        \n      case 'thought':\n        return (\n          <div className={`thought-message ${message.sender}`}>\n            {formatText(message.content)}\n            {timestamp}\n          </div>\n        );\n        \n      case 'social':\n        return (\n          <div className={`social-message ${message.sender}`}>\n            {formatText(message.content)}\n            {timestamp}\n          </div>\n        );\n        \n      default:\n        return (\n          <div className={`message ${message.sender}`}>\n            {formatText(message.content)}\n            {timestamp}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"chat-interface\">\n      <div className=\"chat-header\">\n        <h2>{scenario?.title || 'Untitled Scenario'}</h2>\n        <div className=\"chat-controls\">\n          <button \n            className=\"control-btn reset-chat-btn\" \n            onClick={onReset}\n            title=\"Start Over\"\n          >\n            Start Over\n          </button>\n          <button \n            className=\"control-btn\" \n            onClick={() => setShowInstructionsEditor(true)}\n            title=\"View/Edit Roleplay Instructions\"\n          >\n            <ScrollText size={18} />\n          </button>\n          <button \n            className=\"control-btn\"\n            onClick={() => setShowSettingsPanel(true)}\n            title=\"Roleplay Settings\"\n          >\n            <Settings size={18} />\n          </button>\n          <button \n            className=\"control-btn\"\n            onClick={() => setShowMusicPanel(true)}\n            title=\"Ambient Music\"\n          >\n            <Music size={18} />\n          </button>\n          <button \n            className=\"control-btn\"\n            onClick={() => setShowScenarioInfo(true)}\n            title=\"View Scenario Details\"\n          >\n            <BookOpen size={18} />\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"messages-container\">\n        {/* Mobile Phone UI when in phone mode */}\n        {isPhoneMode ? (\n          <MobilePhoneUI \n            messages={messages} \n            onSendMessage={handleSendMessage}\n          />\n        ) : (\n          /* Regular message display */\n          messages.map(message => (\n            <div key={message.id} className={`message-wrapper ${message.sender}`}>\n              {formatMessage(message)}\n              <span className=\"timestamp\">\n                {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n              </span>\n            </div>\n          ))\n        )}\n        \n        {isTyping && (\n          <div className=\"typing-indicator\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        )}\n        \n        <div ref={messagesEndRef} />\n      </div>\n      \n      <div className=\"message-type-selector\" style={{ display: isPhoneMode ? 'none' : 'flex' }}>\n        <div className=\"message-type-help\" title=\"Choose how you want to respond\">\n          <span className=\"type-help-text\">Response type:</span>\n        </div>\n        <button \n          className={`type-btn ${messageType === 'dialogue' ? 'active' : ''}`}\n          onClick={() => setMessageType('dialogue')}\n          title=\"What you say out loud to characters\"\n        >\n          Dialogue\n        </button>\n        <button \n          className={`type-btn ${messageType === 'action' ? 'active' : ''}`}\n          onClick={() => setMessageType('action')}\n          title=\"Physical actions you take\"\n        >\n          Action\n        </button>\n        <button \n          className={`type-btn ${messageType === 'thought' ? 'active' : ''}`}\n          onClick={() => setMessageType('thought')}\n          title=\"Your inner thoughts (not heard by others)\"\n        >\n          Thought\n        </button>\n        <button \n          className={`type-btn ${messageType === 'social' ? 'active' : ''}`}\n          onClick={() => setMessageType('social')}\n          title=\"Social media posts, DMs, notifications\"\n        >\n          Social\n        </button>\n      </div>\n      \n      {/* Regular input area - hidden in phone mode */}\n      {!isPhoneMode && (\n        <div className=\"input-area\">\n          <textarea \n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyDown={handleKeyPress}\n            placeholder={messageType === 'dialogue' ? 'Type your dialogue...' : \n                        messageType === 'action' ? 'Describe your action...' : \n                        messageType === 'thought' ? 'Share your thoughts...' :\n                        'Type social media content, DMs, or notifications...'}\n            rows={3}\n          />\n          <button className=\"send-btn\" onClick={handleSendMessage}>\n            <Send size={20} />\n          </button>\n        </div>\n      )}\n      \n      {/* Exit phone mode button - only shown in phone mode */}\n      {isPhoneMode && (\n        <div className=\"phone-mode-footer\">\n          <button className=\"exit-phone-btn\" onClick={() => setIsPhoneMode(false)}>\n            Put Phone Away\n          </button>\n        </div>\n      )}\n\n      {/* Roleplay Instructions Modal */}\n      {showInstructionsEditor && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <RoleplayInstructions \n              instructions={roleplayInstructions}\n              onSave={saveRoleplayInstructions}\n              onCancel={cancelEditInstructions}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Settings Panel */}\n      {showSettingsPanel && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"panel-header\">\n              <h3>Roleplay Settings</h3>\n              <button className=\"close-btn\" onClick={() => setShowSettingsPanel(false)}>×</button>\n            </div>\n            <div className=\"panel-body\">\n              <div className=\"settings-section\">\n                <h4>AI Response Style</h4>\n                <div className=\"setting-control\">\n                  <label>Temperature:</label>\n                  <select>\n                    <option value=\"0.3\">More Focused (0.3)</option>\n                    <option value=\"0.7\" selected>Balanced (0.7)</option>\n                    <option value=\"1.0\">More Creative (1.0)</option>\n                  </select>\n                </div>\n                <p className=\"setting-description\">Lower values make responses more predictable, higher values make them more creative.</p>\n              </div>\n              \n              <div className=\"settings-section\">\n                <h4>Display Settings</h4>\n                <div className=\"setting-control\">\n                  <label>\n                    <input type=\"checkbox\" /> Dark Mode\n                  </label>\n                </div>\n                <div className=\"setting-control\">\n                  <label>\n                    <input type=\"checkbox\" checked /> Show Timestamps\n                  </label>\n                </div>\n              </div>\n              \n              <button className=\"save-settings-btn\">Save Settings</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Music Panel */}\n      {showMusicPanel && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"panel-header\">\n              <h3>Ambient Music</h3>\n              <button className=\"close-btn\" onClick={() => setShowMusicPanel(false)}>×</button>\n            </div>\n            <div className=\"panel-body\">\n              <p>Choose background music to enhance your roleplay experience:</p>\n              \n              <div className=\"music-options\">\n                <div className=\"music-option\">\n                  <h4>Atmospheric</h4>\n                  <button className=\"play-btn\">▶️ Gentle Ambient</button>\n                  <button className=\"play-btn\">▶️ Dark Ambient</button>\n                  <button className=\"play-btn\">▶️ Space</button>\n                </div>\n                \n                <div className=\"music-option\">\n                  <h4>Emotional</h4>\n                  <button className=\"play-btn\">▶️ Melancholic</button>\n                  <button className=\"play-btn\">▶️ Hopeful</button>\n                  <button className=\"play-btn\">▶️ Tense</button>\n                </div>\n                \n                <div className=\"music-option\">\n                  <h4>Location-based</h4>\n                  <button className=\"play-btn\">▶️ Nature Sounds</button>\n                  <button className=\"play-btn\">▶️ Urban</button>\n                  <button className=\"play-btn\">▶️ Rain & Thunder</button>\n                </div>\n              </div>\n              \n              <div className=\"music-controls\">\n                <button>Stop Music</button>\n                <div className=\"volume-control\">\n                  <label>Volume:</label>\n                  <input type=\"range\" min=\"0\" max=\"100\" value=\"70\" />\n                </div>\n              </div>\n              \n              <p className=\"music-note\">Music feature coming soon! This is a placeholder interface.</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Scenario Info Panel */}\n      {showScenarioInfo && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"panel-header\">\n              <h3>Scenario Details</h3>\n              <button className=\"close-btn\" onClick={() => setShowScenarioInfo(false)}>×</button>\n            </div>\n            <div className=\"panel-body scenario-info\">\n              <h4>{scenario?.title || 'Untitled Scenario'}</h4>\n              \n              <div className=\"info-section\">\n                <h5>Setting</h5>\n                <p><strong>Location:</strong> {scenario?.setting?.location || 'Not specified'}</p>\n                <p><strong>Time:</strong> {scenario?.setting?.time || 'Not specified'}</p>\n                <p><strong>Atmosphere:</strong> {scenario?.setting?.atmosphere || 'Not specified'}</p>\n              </div>\n              \n              <div className=\"info-section\">\n                <h5>Your Character</h5>\n                <p><strong>Name:</strong> {character?.name || 'Unnamed'}</p>\n                <p><strong>Age:</strong> {character?.age || 'Not specified'}</p>\n              </div>\n              \n              <div className=\"info-section\">\n                <h5>Other Characters</h5>\n                {scenario?.otherCharacters?.map((char, index) => (\n                  <div key={index} className=\"other-character\">\n                    <p><strong>{char.name}</strong> ({char.role})</p>\n                    <p>{char.description}</p>\n                  </div>\n                )) || <p>No other characters specified.</p>}\n              </div>\n              \n              <div className=\"info-section\">\n                <h5>Narrative Goals</h5>\n                <p>{scenario?.narrativeGoals || 'No specific goals set.'}</p>\n              </div>\n              \n              <div className=\"info-section\">\n                <h5>Tone & Themes</h5>\n                <p>{scenario?.toneAndThemes || 'Not specified'}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}