{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmorrison/Code/narrativeforge/src/components/RoleplayInstructions.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoleplayInstructions = ({\n  instructions,\n  onSave,\n  onCancel\n}) => {\n  _s();\n  const [instructionsText, setInstructionsText] = useState(instructions || '');\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSave(instructionsText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"roleplay-instructions-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Roleplay Instructions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"instructions-description\",\n      children: \"Define the ground rules and expectations for your roleplay session. These instructions will guide the AI on how to respond and what roles each participant plays.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"instructions-textarea\",\n          value: instructionsText,\n          onChange: e => setInstructionsText(e.target.value),\n          rows: 15,\n          placeholder: `Enter your roleplay instructions here. For example:\n\nðŸ“œ** Roleplay Instructions for [Character Name] **\nYou are running a fully immersive, single-player roleplay. The player has just [describe starting situation].\n\n**Player Control:**\n* **I am [Character Name]. I control my actions, thoughts, dialogue, and decisions.**\n* **You control the environment, other characters, events, and opportunities.**\n* **Never invent the player's actions, thoughts, or decisions unless explicitly asked.**\n* **Wait for the player to choose an action at every key point.**\n\n[Additional specific instructions for this roleplay...]`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"instructions-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel-btn\",\n          onClick: onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"save-btn\",\n          children: \"Save Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_s(RoleplayInstructions, \"Hhs92jQkWEUUoPpqCXVE0+Bfd14=\");\n_c = RoleplayInstructions;\nexport default RoleplayInstructions;\nvar _c;\n$RefreshReg$(_c, \"RoleplayInstructions\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","RoleplayInstructions","instructions","onSave","onCancel","_s","instructionsText","setInstructionsText","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","rows","placeholder","type","onClick","_c","$RefreshReg$"],"sources":["/Users/ryanmorrison/Code/narrativeforge/src/components/RoleplayInstructions.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst RoleplayInstructions = ({ instructions, onSave, onCancel }) => {\n  const [instructionsText, setInstructionsText] = useState(instructions || '');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSave(instructionsText);\n  };\n\n  return (\n    <div className=\"roleplay-instructions-container\">\n      <h2>Roleplay Instructions</h2>\n      <p className=\"instructions-description\">\n        Define the ground rules and expectations for your roleplay session. \n        These instructions will guide the AI on how to respond and what roles each participant plays.\n      </p>\n      \n      <form onSubmit={handleSubmit}>\n        <div className=\"form-section\">\n          <textarea\n            className=\"instructions-textarea\"\n            value={instructionsText}\n            onChange={(e) => setInstructionsText(e.target.value)}\n            rows={15}\n            placeholder={`Enter your roleplay instructions here. For example:\n\nðŸ“œ** Roleplay Instructions for [Character Name] **\nYou are running a fully immersive, single-player roleplay. The player has just [describe starting situation].\n\n**Player Control:**\n* **I am [Character Name]. I control my actions, thoughts, dialogue, and decisions.**\n* **You control the environment, other characters, events, and opportunities.**\n* **Never invent the player's actions, thoughts, or decisions unless explicitly asked.**\n* **Wait for the player to choose an action at every key point.**\n\n[Additional specific instructions for this roleplay...]`}\n          />\n        </div>\n        \n        <div className=\"instructions-actions\">\n          <button type=\"button\" className=\"cancel-btn\" onClick={onCancel}>\n            Cancel\n          </button>\n          <button type=\"submit\" className=\"save-btn\">\n            Save Instructions\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default RoleplayInstructions;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,oBAAoB,GAAGA,CAAC;EAAEC,YAAY;EAAEC,MAAM;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAACI,YAAY,IAAI,EAAE,CAAC;EAE5E,MAAMM,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBP,MAAM,CAACG,gBAAgB,CAAC;EAC1B,CAAC;EAED,oBACEN,OAAA;IAAKW,SAAS,EAAC,iCAAiC;IAAAC,QAAA,gBAC9CZ,OAAA;MAAAY,QAAA,EAAI;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC9BhB,OAAA;MAAGW,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EAAC;IAGxC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAEJhB,OAAA;MAAMiB,QAAQ,EAAET,YAAa;MAAAI,QAAA,gBAC3BZ,OAAA;QAAKW,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3BZ,OAAA;UACEW,SAAS,EAAC,uBAAuB;UACjCO,KAAK,EAAEZ,gBAAiB;UACxBa,QAAQ,EAAGV,CAAC,IAAKF,mBAAmB,CAACE,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;UACrDG,IAAI,EAAE,EAAG;UACTC,WAAW,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;QAAyD;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENhB,OAAA;QAAKW,SAAS,EAAC,sBAAsB;QAAAC,QAAA,gBACnCZ,OAAA;UAAQuB,IAAI,EAAC,QAAQ;UAACZ,SAAS,EAAC,YAAY;UAACa,OAAO,EAAEpB,QAAS;UAAAQ,QAAA,EAAC;QAEhE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACThB,OAAA;UAAQuB,IAAI,EAAC,QAAQ;UAACZ,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAE3C;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACX,EAAA,CAjDIJ,oBAAoB;AAAAwB,EAAA,GAApBxB,oBAAoB;AAmD1B,eAAeA,oBAAoB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}