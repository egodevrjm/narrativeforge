{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmorrison/Code/narrativeforge/src/components/ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Send, Settings, Music, BookOpen, ScrollText, MessageSquare, MousePointer, Brain, Phone } from 'lucide-react';\nimport RoleplayInstructions from './RoleplayInstructions';\nimport MobilePhoneUI from './MobilePhoneUI';\nimport SocialMediaMessage from './SocialMediaMessage';\nimport { preprocessAIMessage, formatSocialMediaContent, detectMessageType } from '../utils/textFormatUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  character,\n  scenario,\n  onSaveChat,\n  geminiService,\n  onReset\n}) => {\n  _s();\n  var _scenario$setting, _scenario$setting2, _scenario$setting3, _scenario$otherCharac;\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [messageType, setMessageType] = useState('dialogue'); // dialogue, action, thought\n  const [isPhoneMode, setIsPhoneMode] = useState(false); // State to track if we're in phone mode\n  const [showInstructionsEditor, setShowInstructionsEditor] = useState(false);\n  const [showSettingsPanel, setShowSettingsPanel] = useState(false);\n  const [showMusicPanel, setShowMusicPanel] = useState(false);\n  const [showScenarioInfo, setShowScenarioInfo] = useState(false);\n  const [roleplayInstructions, setRoleplayInstructions] = useState((scenario === null || scenario === void 0 ? void 0 : scenario.roleplayInstructions) || '');\n  const [autoDetectMessageType, setAutoDetectMessageType] = useState(true); // New state for auto-detection toggle\n  const messagesEndRef = useRef(null);\n\n  // Watch for input changes to detect message type in real-time\n  const updateDetectedMessageType = useCallback(text => {\n    if (autoDetectMessageType && text) {\n      const detectedType = detectMessageType(text);\n      setMessageType(detectedType);\n    }\n  }, [autoDetectMessageType]);\n\n  // Update detected message type when input changes\n  useEffect(() => {\n    updateDetectedMessageType(inputValue);\n  }, [inputValue, updateDetectedMessageType]);\n\n  // When scenario changes, update the roleplay instructions\n  useEffect(() => {\n    if (scenario && scenario.roleplayInstructions) {\n      setRoleplayInstructions(scenario.roleplayInstructions);\n    }\n  }, [scenario]);\n\n  // Initial system message when the scenario begins\n  useEffect(() => {\n    if (scenario && !messages.length) {\n      // Create day header\n      const dayHeader = {\n        id: Date.now() - 2,\n        type: 'system',\n        content: 'Day 1, Late-night',\n        timestamp: new Date()\n      };\n\n      // Create initial narrative message describing the scenario\n      const formattedContent = scenario.initialSituation.replace(/TikTok/g, '🎵 TikTok').replace(/Instagram/g, '📱 Instagram').replace(/YouTube/g, '▶️ YouTube').replace(/Twitter/g, '🐦 Twitter').replace(/@([\\w]+)/g, '@$1').replace(/girlfriend/g, 'girlfriend 💔').replace(/video call/g, 'video call 📱').replace(/guitar/g, 'guitar 🎸').replace(/notifications/g, 'notifications 🔔');\n      const initialMessage = {\n        id: Date.now() - 1,\n        type: 'social',\n        content: formattedContent,\n        timestamp: new Date()\n      };\n      setMessages([dayHeader, initialMessage]);\n\n      // If there are roleplay instructions, set them but DON'T add them as a visible message\n      if (scenario.roleplayInstructions) {\n        setRoleplayInstructions(scenario.roleplayInstructions);\n      }\n\n      // Simulate AI thinking and then responding to set the scene\n      handleAiResponse();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scenario]);\n\n  // Auto-scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // Save roleplay instructions\n  const saveRoleplayInstructions = instructions => {\n    setRoleplayInstructions(instructions);\n    setShowInstructionsEditor(false);\n\n    // Don't add to visible messages, but update the AI context\n    if (geminiService) {\n      geminiService.updateInstructions(instructions);\n    }\n  };\n\n  // Cancel editing instructions\n  const cancelEditInstructions = () => {\n    setShowInstructionsEditor(false);\n  };\n\n  // Send user message\n  const handleSendMessage = customText => {\n    console.log('handleSendMessage called with:', customText || inputValue);\n    // Use either the custom text or the inputValue\n    const messageText = customText || inputValue;\n\n    // Check that we have a valid string to work with\n    if (!messageText) {\n      console.log('Empty message, returning');\n      return;\n    }\n\n    // Ensure messageText is a string before calling trim\n    if (typeof messageText === 'string') {\n      if (!messageText.trim()) {\n        console.log('Message contains only whitespace, returning');\n        return;\n      }\n      console.log('Processing valid message:', messageText);\n\n      // Check for phone mode commands\n      // Ensure messageText is a string before calling toLowerCase\n      const lowerText = messageText.toLowerCase();\n      if (lowerText.includes('check my phone') || lowerText.includes('look at my phone') || lowerText.includes('check phone') || lowerText.includes('use my phone')) {\n        setIsPhoneMode(true);\n      } else if (lowerText.includes('put phone away') || lowerText.includes('stop using phone') || lowerText.includes('put away phone') || lowerText.includes('exit phone')) {\n        setIsPhoneMode(false);\n      }\n\n      // Detect message type based on content and chosen type\n      let detectedType = messageType;\n\n      // If auto-detection is enabled, determine type from content\n      if (autoDetectMessageType) {\n        detectedType = detectMessageType(messageText);\n      }\n\n      // Add day header if this is the first message in a while\n      const now = new Date();\n      if (messages.length > 0) {\n        const lastMessageTime = messages[messages.length - 1].timestamp;\n        // If more than 3 hours since last message, add a timestamp header\n        if ((now - lastMessageTime) / (1000 * 60 * 60) > 3) {\n          const dayHeader = {\n            id: Date.now() - 1,\n            // Ensure unique ID\n            type: 'system',\n            content: getDayHeaderText(now),\n            timestamp: now\n          };\n          setMessages(prev => [...prev, dayHeader]);\n        }\n      }\n\n      // Create user message object\n      const userMessage = {\n        id: Date.now(),\n        sender: 'user',\n        type: detectedType,\n        content: messageText,\n        timestamp: now\n      };\n      console.log('Adding user message to chat:', userMessage);\n\n      // Add message to chat\n      setMessages(prev => [...prev, userMessage]);\n\n      // Clear input field\n      setInputValue('');\n\n      // Process with AI\n      handleAiResponse(userMessage.content, userMessage.type);\n    } else {\n      // Handle case where messageText is not a string\n      console.error('messageText is not a string:', messageText);\n    }\n  };\n\n  // Helper function to get appropriate day header text\n  const getDayHeaderText = date => {\n    const hours = date.getHours();\n    let timeOfDay = '';\n    if (hours >= 5 && hours < 12) {\n      timeOfDay = 'Morning';\n    } else if (hours >= 12 && hours < 17) {\n      timeOfDay = 'Afternoon';\n    } else if (hours >= 17 && hours < 22) {\n      timeOfDay = 'Evening';\n    } else {\n      timeOfDay = 'Late-night';\n    }\n    return `Day ${Math.floor(Math.random() * 5 + 1)}, ${timeOfDay}`;\n  };\n\n  // Handle key press (Enter to send)\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // Get AI response\n  const handleAiResponse = useCallback(async (userMessage, messageType) => {\n    setIsTyping(true);\n    try {\n      let responseContent;\n\n      // If we have a Gemini service, use it\n      if (geminiService) {\n        // For the first message, include roleplay instructions if they exist\n        if (!userMessage && roleplayInstructions) {\n          // Add it to the context for the AI but don't show it in chat\n          const initPrompt = `Initial scene: ${scenario === null || scenario === void 0 ? void 0 : scenario.initialSituation}\\n\\nRoleplay instructions:\\n${roleplayInstructions}\\n\\nPlease respond with an opening for this scene, following the roleplay instructions but without mentioning them directly. Make sure to use proper paragraph breaks and spacing for better readability.`;\n          responseContent = await geminiService.generateGeneric(initPrompt);\n\n          // Preprocess the response for better formatting\n          responseContent = preprocessAIMessage(responseContent);\n        } else {\n          responseContent = await geminiService.generateResponse(userMessage, messageType);\n\n          // Preprocess the response for better formatting\n          responseContent = preprocessAIMessage(responseContent);\n\n          // Additional formatting for social media content\n          if (messageType === 'social' || responseContent.includes('@') || responseContent.includes('Instagram') || responseContent.includes('TikTok')) {\n            responseContent = formatSocialMediaContent(responseContent);\n          }\n        }\n      } else {\n        // Fallback for development\n        await new Promise(resolve => setTimeout(resolve, 1500));\n        responseContent = \"This is a placeholder response. In the full implementation, this would be a response from Google's Gemini LLM, responding appropriately to your character's situation.\";\n      }\n\n      // Check if the AI response is implying phone interaction\n      const lowerResponse = responseContent.toLowerCase();\n      if (lowerResponse.includes('on your phone') || lowerResponse.includes('your phone shows') || lowerResponse.includes('on the screen of your phone')) {\n        // Activate phone mode if AI refers to phone content\n        setIsPhoneMode(true);\n      }\n\n      // Detect if this should be a social media response\n      let responseType = 'dialogue';\n      if (messageType === 'social' || responseContent && (responseContent.includes('@') || responseContent.includes('Instagram') || responseContent.includes('TikTok') || responseContent.includes('followers'))) {\n        responseType = 'social';\n      } else if (messageType === 'action') {\n        responseType = 'action';\n      } else if (messageType === 'thought') {\n        responseType = 'thought';\n      }\n      const aiMessage = {\n        id: Date.now(),\n        sender: 'ai',\n        type: responseType,\n        content: responseContent,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      console.error('Error getting AI response:', error);\n\n      // Add error message\n      const errorMessage = {\n        id: Date.now(),\n        sender: 'system',\n        type: 'error',\n        content: 'There was an error getting a response. Please try again.',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsTyping(false);\n    }\n  }, [geminiService, roleplayInstructions, scenario]);\n\n  // Format message based on type\n  const formatText = text => {\n    if (!text) return '';\n    if (typeof text !== 'string') return '';\n\n    // Ensure proper paragraph spacing by normalizing all line breaks\n    // First, normalize different line break styles\n    let normalizedText = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n\n    // Remove markdown bold formatting\n    normalizedText = normalizedText.replace(/\\*\\*([^*]+)\\*\\*/g, '$1');\n\n    // Enhance line break separation for social media platform headers\n    normalizedText = normalizedText.replace(/(📱 Instagram|🎵 TikTok|▶️ YouTube|🐦 Twitter|👻 Snapchat)/g, '\\n$1').replace(/\\n\\n(📱 Instagram|🎵 TikTok|▶️ YouTube|🐦 Twitter|👻 Snapchat)/g, '\\n\\n\\n$1');\n\n    // Format social media messages with proper styling\n    if (normalizedText.includes('@') || normalizedText.includes('#') || normalizedText.includes('Instagram') || normalizedText.includes('TikTok')) {\n      // Add emoji and styling to social media content\n      const formattedText = normalizedText.replace(/Instagram/g, '📱 Instagram').replace(/TikTok/g, '🎵 TikTok').replace(/YouTube/g, '▶️ YouTube').replace(/Twitter/g, '🐦 Twitter').replace(/direct message/gi, 'DM 💬').replace(/@([\\w]+)/g, '<span class=\"handle\">@$1</span>').replace(/\"([^\"]+)\"/g, '<span class=\"quote\">\"$1\"</span>').replace(/\\bviral\\b/g, '<span class=\"highlight\">viral</span>').replace(/\\bfollowers\\b/g, 'followers 👥').replace(/\\blikes\\b/g, 'likes ❤️').replace(/\\bcomments\\b/g, 'comments 💬').replace(/\\bshares\\b/g, 'shares 🔄');\n\n      // Make sure we have proper paragraph breaks\n      // Split by double newlines (paragraphs) or ensure line breaks in longer text\n      const paragraphs = formattedText.split(/\\n\\s*\\n/);\n      if (paragraphs.length === 1 && paragraphs[0].length > 200) {\n        // Long single paragraph - try to break it at sentence boundaries\n        const sentences = paragraphs[0].split(/(?<=\\.)\\s+/);\n        // Group sentences into reasonable paragraphs\n        const groupedParagraphs = [];\n        let currentParagraph = '';\n        sentences.forEach(sentence => {\n          if (currentParagraph.length + sentence.length > 200) {\n            groupedParagraphs.push(currentParagraph);\n            currentParagraph = sentence;\n          } else {\n            currentParagraph += (currentParagraph ? ' ' : '') + sentence;\n          }\n        });\n        if (currentParagraph) {\n          groupedParagraphs.push(currentParagraph);\n        }\n        return groupedParagraphs.map((para, i) => {\n          const processedPara = para.replace(/\\n/g, '<br />');\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            dangerouslySetInnerHTML: {\n              __html: processedPara\n            }\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 18\n          }, this);\n        });\n      }\n      return paragraphs.map((para, i) => {\n        const processedPara = para.replace(/\\n/g, '<br />');\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          dangerouslySetInnerHTML: {\n            __html: processedPara\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 16\n        }, this);\n      });\n    }\n\n    // For message lists like the Instagram DM requests\n    if (normalizedText.includes('Instagram Message Requests:')) {\n      const sections = normalizedText.split(/\\n\\s*\\n/);\n      return sections.map((section, i) => {\n        if (section.includes('•')) {\n          // This is a list section\n          const listItems = section.split('•').filter(item => item.trim());\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-list\",\n            children: listItems.map((item, j) => {\n              // Check if this contains a username and message\n              const parts = item.split(/\\n/);\n              if (parts.length > 1) {\n                const username = parts[0].trim();\n                const messageText = parts.slice(1).join('\\n').trim();\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dm-message\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dm-username\",\n                    children: username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dm-content\",\n                    children: /*#__PURE__*/_jsxDEV(\"em\", {\n                      children: [\"\\\"\", messageText, \"\\\"\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 51\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 23\n                  }, this)]\n                }, j, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 21\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.trim()\n                }, j, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 26\n                }, this);\n              }\n            })\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this);\n        } else {\n          // Regular paragraph\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: section\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 18\n          }, this);\n        }\n      });\n    }\n\n    // Regular content - split by paragraphs\n    // First check if we need to add paragraph breaks to a long single paragraph\n    const paragraphs = normalizedText.split(/\\n\\s*\\n/);\n    if (paragraphs.length === 1 && paragraphs[0].length > 200) {\n      // Long single paragraph - try to break it at sentence boundaries\n      const sentences = paragraphs[0].split(/(?<=\\.)\\s+/);\n      // Group sentences into reasonable paragraphs\n      const groupedParagraphs = [];\n      let currentParagraph = '';\n      sentences.forEach(sentence => {\n        if (currentParagraph.length + sentence.length > 200) {\n          groupedParagraphs.push(currentParagraph);\n          currentParagraph = sentence;\n        } else {\n          currentParagraph += (currentParagraph ? ' ' : '') + sentence;\n        }\n      });\n      if (currentParagraph) {\n        groupedParagraphs.push(currentParagraph);\n      }\n      return groupedParagraphs.map((para, i) => {\n        // Replace single newlines with <br>\n        const formattedPara = para.replace(/\\n/g, '<br />');\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          dangerouslySetInnerHTML: {\n            __html: formattedPara\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 16\n        }, this);\n      });\n    }\n    return paragraphs.map((para, i) => {\n      // Replace single newlines with <br>\n      const formattedPara = para.replace(/\\n/g, '<br />');\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        dangerouslySetInnerHTML: {\n          __html: formattedPara\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  // Format message based on type\n  const formatMessage = message => {\n    // Create a timestamp element\n    const timestamp = /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"timestamp\",\n      children: message.timestamp.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this);\n    switch (message.type) {\n      case 'system':\n        // For system messages like day headers\n        if (message.content.startsWith('Day ') || message.content.includes('Late-night')) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-header\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day-marker\",\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 13\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"system-message\",\n          children: formatText(message.content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 16\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 16\n        }, this);\n      case 'social':\n        // Use our specialized social media component for better notification display\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `social-message ${message.sender}`,\n          children: [/*#__PURE__*/_jsxDEV(SocialMediaMessage, {\n            content: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this), timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 468,\n          columnNumber: 11\n        }, this);\n      case 'dialogue':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `dialogue-message ${message.sender}`,\n          children: [formatText(message.content), timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this);\n      case 'action':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `action-message ${message.sender}`,\n          children: [formatText(message.content), timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }, this);\n      case 'thought':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `thought-message ${message.sender}`,\n          children: [formatText(message.content), timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: [formatText(message.content), timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: (scenario === null || scenario === void 0 ? void 0 : scenario.title) || 'Untitled Scenario'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn reset-chat-btn\",\n          onClick: onReset,\n          title: \"Start Over\",\n          children: \"Start Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: () => setShowInstructionsEditor(true),\n          title: \"View/Edit Roleplay Instructions\",\n          children: /*#__PURE__*/_jsxDEV(ScrollText, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: () => setShowSettingsPanel(true),\n          title: \"Roleplay Settings\",\n          children: /*#__PURE__*/_jsxDEV(Settings, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: () => setShowMusicPanel(true),\n          title: \"Ambient Music\",\n          children: /*#__PURE__*/_jsxDEV(Music, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: () => setShowScenarioInfo(true),\n          title: \"View Scenario Details\",\n          children: /*#__PURE__*/_jsxDEV(BookOpen, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 512,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 510,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auto-detect-toggle\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"toggle-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: autoDetectMessageType,\n          onChange: () => setAutoDetectMessageType(!autoDetectMessageType)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 11\n        }, this), \"Auto-detect message type based on content\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"type-explainer\",\n      children: autoDetectMessageType ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Automatically detected as: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"detected-type\",\n          children: messageType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 564,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Choose a response type: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Dialogue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 38\n        }, this), \" (speaking), \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 76\n        }, this), \" (doing), \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Thought\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 109\n        }, this), \" (thinking), or \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Social\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 149\n        }, this), \" (social media)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [isPhoneMode ? /*#__PURE__*/_jsxDEV(MobilePhoneUI, {\n        messages: messages,\n        onSendMessage: handleSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 11\n      }, this) : (/* Regular message display */\n      messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-wrapper ${message.sender}`,\n        children: [formatMessage(message), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timestamp\",\n          children: message.timestamp.toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 15\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 13\n      }, this))), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-type-selector\",\n      style: {\n        display: isPhoneMode ? 'none' : 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-type-help\",\n        title: \"Choose how you want to respond\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"type-help-text\",\n          children: autoDetectMessageType ? 'Detected type:' : 'Response type:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `type-btn ${messageType === 'dialogue' ? 'active' : ''}`,\n        onClick: () => setMessageType('dialogue'),\n        title: \"What you say out loud to characters\",\n        children: [/*#__PURE__*/_jsxDEV(MessageSquare, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 609,\n          columnNumber: 11\n        }, this), \"Dialogue\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `type-btn ${messageType === 'action' ? 'active' : ''}`,\n        onClick: () => setMessageType('action'),\n        title: \"Physical actions you take\",\n        children: [/*#__PURE__*/_jsxDEV(MousePointer, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 11\n        }, this), \"Action\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `type-btn ${messageType === 'thought' ? 'active' : ''}`,\n        onClick: () => setMessageType('thought'),\n        title: \"Your inner thoughts (not heard by others)\",\n        children: [/*#__PURE__*/_jsxDEV(Brain, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 625,\n          columnNumber: 11\n        }, this), \"Thought\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `type-btn ${messageType === 'social' ? 'active' : ''}`,\n        onClick: () => setMessageType('social'),\n        title: \"Social media posts, DMs, notifications\",\n        children: [/*#__PURE__*/_jsxDEV(Phone, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 11\n        }, this), \"Social\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 628,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 7\n    }, this), !isPhoneMode && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-area\",\n      onSubmit: e => {\n        e.preventDefault();\n        console.log('Form submitted');\n        handleSendMessage(inputValue);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyDown: handleKeyPress,\n          placeholder: messageType === 'dialogue' ? 'Type your dialogue...' : messageType === 'action' ? 'Describe your action...' : messageType === 'thought' ? 'Share your thoughts...' : 'Type social media content, DMs, or notifications...',\n          rows: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-helper\",\n          children: inputValue.length > 0 ? 'Press Enter to send or click the button' : 'Type your message'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 659,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-btn\",\n        children: /*#__PURE__*/_jsxDEV(Send, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 663,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 9\n    }, this), isPhoneMode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"phone-mode-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"exit-phone-btn\",\n        onClick: () => setIsPhoneMode(false),\n        children: \"Put Phone Away\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 674,\n      columnNumber: 9\n    }, this), showInstructionsEditor && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(RoleplayInstructions, {\n          instructions: roleplayInstructions,\n          onSave: saveRoleplayInstructions,\n          onCancel: cancelEditInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 684,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 683,\n      columnNumber: 9\n    }, this), showSettingsPanel && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Roleplay Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 699,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowSettingsPanel(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"AI Response Style\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Temperature:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 706,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0.3\",\n                  children: \"More Focused (0.3)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 708,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0.7\",\n                  selected: true,\n                  children: \"Balanced (0.7)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 709,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1.0\",\n                  children: \"More Creative (1.0)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 710,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 705,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"setting-description\",\n              children: \"Lower values make responses more predictable, higher values make them more creative.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 713,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 703,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Message Type Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: autoDetectMessageType,\n                  onChange: () => setAutoDetectMessageType(!autoDetectMessageType)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 720,\n                  columnNumber: 21\n                }, this), \"Auto-detect message type\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"setting-description\",\n                children: \"When enabled, the system will automatically detect if your message is dialogue, action, thought, or social media content.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 716,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Display Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-control\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 735,\n                  columnNumber: 21\n                }, this), \" Dark Mode\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 734,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 733,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-control\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 740,\n                  columnNumber: 21\n                }, this), \" Show Timestamps\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 739,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 738,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 731,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-settings-btn\",\n            children: \"Save Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 745,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 702,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 697,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 696,\n      columnNumber: 9\n    }, this), showMusicPanel && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Ambient Music\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowMusicPanel(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose background music to enhance your roleplay experience:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 760,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"music-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"music-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Atmospheric\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 764,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Gentle Ambient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 765,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Dark Ambient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 766,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Space\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 767,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"music-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Emotional\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 771,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Melancholic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Hopeful\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 773,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Tense\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 774,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"music-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Location-based\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 778,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Nature Sounds\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 779,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Urban\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 780,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Rain & Thunder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 781,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 777,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"music-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Stop Music\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"volume-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Volume:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 788,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"0\",\n                max: \"100\",\n                value: \"70\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 789,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"music-note\",\n            children: \"Music feature coming soon! This is a placeholder interface.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 753,\n      columnNumber: 9\n    }, this), showScenarioInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Scenario Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowScenarioInfo(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-body scenario-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: (scenario === null || scenario === void 0 ? void 0 : scenario.title) || 'Untitled Scenario'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Setting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 812,\n                columnNumber: 20\n              }, this), \" \", (scenario === null || scenario === void 0 ? void 0 : (_scenario$setting = scenario.setting) === null || _scenario$setting === void 0 ? void 0 : _scenario$setting.location) || 'Not specified']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 812,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 813,\n                columnNumber: 20\n              }, this), \" \", (scenario === null || scenario === void 0 ? void 0 : (_scenario$setting2 = scenario.setting) === null || _scenario$setting2 === void 0 ? void 0 : _scenario$setting2.time) || 'Not specified']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 813,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Atmosphere:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 814,\n                columnNumber: 20\n              }, this), \" \", (scenario === null || scenario === void 0 ? void 0 : (_scenario$setting3 = scenario.setting) === null || _scenario$setting3 === void 0 ? void 0 : _scenario$setting3.atmosphere) || 'Not specified']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 814,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 810,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Your Character\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 818,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 819,\n                columnNumber: 20\n              }, this), \" \", (character === null || character === void 0 ? void 0 : character.name) || 'Unnamed']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Age:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 820,\n                columnNumber: 20\n              }, this), \" \", (character === null || character === void 0 ? void 0 : character.age) || 'Not specified']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Other Characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 824,\n              columnNumber: 17\n            }, this), (scenario === null || scenario === void 0 ? void 0 : (_scenario$otherCharac = scenario.otherCharacters) === null || _scenario$otherCharac === void 0 ? void 0 : _scenario$otherCharac.map((char, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"other-character\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: char.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 827,\n                  columnNumber: 24\n                }, this), \" (\", char.role, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 827,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: char.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 828,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 826,\n              columnNumber: 19\n            }, this))) || /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No other characters specified.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 830,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Narrative Goals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 834,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: (scenario === null || scenario === void 0 ? void 0 : scenario.narrativeGoals) || 'No specific goals set.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 835,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 833,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Tone & Themes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: (scenario === null || scenario === void 0 ? void 0 : scenario.toneAndThemes) || 'Not specified'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 840,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 509,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"S/8Pp7qfC8CN3+h3mAppSHic/HI=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Send","Settings","Music","BookOpen","ScrollText","MessageSquare","MousePointer","Brain","Phone","RoleplayInstructions","MobilePhoneUI","SocialMediaMessage","preprocessAIMessage","formatSocialMediaContent","detectMessageType","jsxDEV","_jsxDEV","ChatInterface","character","scenario","onSaveChat","geminiService","onReset","_s","_scenario$setting","_scenario$setting2","_scenario$setting3","_scenario$otherCharac","messages","setMessages","inputValue","setInputValue","isTyping","setIsTyping","messageType","setMessageType","isPhoneMode","setIsPhoneMode","showInstructionsEditor","setShowInstructionsEditor","showSettingsPanel","setShowSettingsPanel","showMusicPanel","setShowMusicPanel","showScenarioInfo","setShowScenarioInfo","roleplayInstructions","setRoleplayInstructions","autoDetectMessageType","setAutoDetectMessageType","messagesEndRef","updateDetectedMessageType","text","detectedType","length","dayHeader","id","Date","now","type","content","timestamp","formattedContent","initialSituation","replace","initialMessage","handleAiResponse","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","saveRoleplayInstructions","instructions","updateInstructions","cancelEditInstructions","handleSendMessage","customText","console","log","messageText","trim","lowerText","toLowerCase","includes","lastMessageTime","getDayHeaderText","prev","userMessage","sender","error","date","hours","getHours","timeOfDay","Math","floor","random","handleKeyPress","e","key","shiftKey","preventDefault","responseContent","initPrompt","generateGeneric","generateResponse","Promise","resolve","setTimeout","lowerResponse","responseType","aiMessage","errorMessage","formatText","normalizedText","formattedText","paragraphs","split","sentences","groupedParagraphs","currentParagraph","forEach","sentence","push","map","para","i","processedPara","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","sections","section","listItems","filter","item","className","children","j","parts","username","slice","join","formattedPara","formatMessage","message","toLocaleTimeString","hour","minute","startsWith","title","onClick","size","checked","onChange","onSendMessage","ref","style","display","onSubmit","value","target","onKeyDown","placeholder","rows","onSave","onCancel","selected","min","max","setting","location","time","atmosphere","name","age","otherCharacters","char","index","role","description","narrativeGoals","toneAndThemes","_c","$RefreshReg$"],"sources":["/Users/ryanmorrison/Code/narrativeforge/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Send, Settings, Music, BookOpen, ScrollText, MessageSquare, MousePointer, Brain, Phone } from 'lucide-react';\nimport RoleplayInstructions from './RoleplayInstructions';\nimport MobilePhoneUI from './MobilePhoneUI';\nimport SocialMediaMessage from './SocialMediaMessage';\nimport { preprocessAIMessage, formatSocialMediaContent, detectMessageType } from '../utils/textFormatUtils';\n\nconst ChatInterface = ({ character, scenario, onSaveChat, geminiService, onReset }) => {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [messageType, setMessageType] = useState('dialogue'); // dialogue, action, thought\n  const [isPhoneMode, setIsPhoneMode] = useState(false); // State to track if we're in phone mode\n  const [showInstructionsEditor, setShowInstructionsEditor] = useState(false);\n  const [showSettingsPanel, setShowSettingsPanel] = useState(false);\n  const [showMusicPanel, setShowMusicPanel] = useState(false);\n  const [showScenarioInfo, setShowScenarioInfo] = useState(false);\n  const [roleplayInstructions, setRoleplayInstructions] = useState(scenario?.roleplayInstructions || '');\n  const [autoDetectMessageType, setAutoDetectMessageType] = useState(true); // New state for auto-detection toggle\n  const messagesEndRef = useRef(null);\n  \n  // Watch for input changes to detect message type in real-time\n  const updateDetectedMessageType = useCallback((text) => {\n    if (autoDetectMessageType && text) {\n      const detectedType = detectMessageType(text);\n      setMessageType(detectedType);\n    }\n  }, [autoDetectMessageType]);\n\n  // Update detected message type when input changes\n  useEffect(() => {\n    updateDetectedMessageType(inputValue);\n  }, [inputValue, updateDetectedMessageType]);\n  \n  // When scenario changes, update the roleplay instructions\n  useEffect(() => {\n    if (scenario && scenario.roleplayInstructions) {\n      setRoleplayInstructions(scenario.roleplayInstructions);\n    }\n  }, [scenario]);\n  \n  // Initial system message when the scenario begins\n  useEffect(() => {\n    if (scenario && !messages.length) {\n      // Create day header\n      const dayHeader = {\n        id: Date.now() - 2,\n        type: 'system',\n        content: 'Day 1, Late-night',\n        timestamp: new Date()\n      };\n      \n      // Create initial narrative message describing the scenario\n      const formattedContent = scenario.initialSituation\n        .replace(/TikTok/g, '🎵 TikTok')\n        .replace(/Instagram/g, '📱 Instagram')\n        .replace(/YouTube/g, '▶️ YouTube')\n        .replace(/Twitter/g, '🐦 Twitter')\n        .replace(/@([\\w]+)/g, '@$1')\n        .replace(/girlfriend/g, 'girlfriend 💔')\n        .replace(/video call/g, 'video call 📱')\n        .replace(/guitar/g, 'guitar 🎸')\n        .replace(/notifications/g, 'notifications 🔔');\n      \n      const initialMessage = {\n        id: Date.now() - 1,\n        type: 'social',\n        content: formattedContent,\n        timestamp: new Date()\n      };\n      \n      setMessages([dayHeader, initialMessage]);\n      \n      // If there are roleplay instructions, set them but DON'T add them as a visible message\n      if (scenario.roleplayInstructions) {\n        setRoleplayInstructions(scenario.roleplayInstructions);\n      }\n      \n      // Simulate AI thinking and then responding to set the scene\n      handleAiResponse();\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scenario]);\n\n  // Auto-scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  // Save roleplay instructions\n  const saveRoleplayInstructions = (instructions) => {\n    setRoleplayInstructions(instructions);\n    setShowInstructionsEditor(false);\n    \n    // Don't add to visible messages, but update the AI context\n    if (geminiService) {\n      geminiService.updateInstructions(instructions);\n    }\n  };\n\n  // Cancel editing instructions\n  const cancelEditInstructions = () => {\n    setShowInstructionsEditor(false);\n  };\n\n  // Send user message\n  const handleSendMessage = (customText) => {\n    console.log('handleSendMessage called with:', customText || inputValue);\n    // Use either the custom text or the inputValue\n    const messageText = customText || inputValue;\n    \n    // Check that we have a valid string to work with\n    if (!messageText) {\n      console.log('Empty message, returning');\n      return;\n    }\n    \n    // Ensure messageText is a string before calling trim\n    if (typeof messageText === 'string') {\n      if (!messageText.trim()) {\n        console.log('Message contains only whitespace, returning');\n        return;\n      }\n      \n      console.log('Processing valid message:', messageText);\n      \n      // Check for phone mode commands\n      // Ensure messageText is a string before calling toLowerCase\n      const lowerText = messageText.toLowerCase();\n      if (lowerText.includes('check my phone') || lowerText.includes('look at my phone') || \n          lowerText.includes('check phone') || lowerText.includes('use my phone')) {\n        setIsPhoneMode(true);\n      } else if (lowerText.includes('put phone away') || lowerText.includes('stop using phone') || \n                 lowerText.includes('put away phone') || lowerText.includes('exit phone')) {\n        setIsPhoneMode(false);\n      }\n      \n      // Detect message type based on content and chosen type\n      let detectedType = messageType;\n      \n      // If auto-detection is enabled, determine type from content\n      if (autoDetectMessageType) {\n        detectedType = detectMessageType(messageText);\n      }\n      \n      // Add day header if this is the first message in a while\n      const now = new Date();\n      if (messages.length > 0) {\n        const lastMessageTime = messages[messages.length - 1].timestamp;\n        // If more than 3 hours since last message, add a timestamp header\n        if ((now - lastMessageTime) / (1000 * 60 * 60) > 3) {\n          const dayHeader = {\n            id: Date.now() - 1, // Ensure unique ID\n            type: 'system',\n            content: getDayHeaderText(now),\n            timestamp: now\n          };\n          setMessages(prev => [...prev, dayHeader]);\n        }\n      }\n      \n      // Create user message object\n      const userMessage = {\n        id: Date.now(),\n        sender: 'user',\n        type: detectedType,\n        content: messageText,\n        timestamp: now\n      };\n      \n      console.log('Adding user message to chat:', userMessage);\n      \n      // Add message to chat\n      setMessages(prev => [...prev, userMessage]);\n      \n      // Clear input field\n      setInputValue('');\n      \n      // Process with AI\n      handleAiResponse(userMessage.content, userMessage.type);\n    } else {\n      // Handle case where messageText is not a string\n      console.error('messageText is not a string:', messageText);\n    }\n  };\n  \n  // Helper function to get appropriate day header text\n  const getDayHeaderText = (date) => {\n    const hours = date.getHours();\n    let timeOfDay = '';\n    \n    if (hours >= 5 && hours < 12) {\n      timeOfDay = 'Morning';\n    } else if (hours >= 12 && hours < 17) {\n      timeOfDay = 'Afternoon';\n    } else if (hours >= 17 && hours < 22) {\n      timeOfDay = 'Evening';\n    } else {\n      timeOfDay = 'Late-night';\n    }\n    \n    return `Day ${Math.floor(Math.random() * 5 + 1)}, ${timeOfDay}`;\n  };\n\n  // Handle key press (Enter to send)\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // Get AI response\n  const handleAiResponse = useCallback(async (userMessage, messageType) => {\n    setIsTyping(true);\n    \n    try {\n      let responseContent;\n      \n      // If we have a Gemini service, use it\n      if (geminiService) {\n        // For the first message, include roleplay instructions if they exist\n        if (!userMessage && roleplayInstructions) {\n          // Add it to the context for the AI but don't show it in chat\n          const initPrompt = `Initial scene: ${scenario?.initialSituation}\\n\\nRoleplay instructions:\\n${roleplayInstructions}\\n\\nPlease respond with an opening for this scene, following the roleplay instructions but without mentioning them directly. Make sure to use proper paragraph breaks and spacing for better readability.`;\n          responseContent = await geminiService.generateGeneric(initPrompt);\n          \n          // Preprocess the response for better formatting\n          responseContent = preprocessAIMessage(responseContent);\n        } else {\n          responseContent = await geminiService.generateResponse(userMessage, messageType);\n          \n          // Preprocess the response for better formatting\n          responseContent = preprocessAIMessage(responseContent);\n          \n          // Additional formatting for social media content\n          if (messageType === 'social' || responseContent.includes('@') || \n              responseContent.includes('Instagram') || responseContent.includes('TikTok')) {\n            responseContent = formatSocialMediaContent(responseContent);\n          }\n        }\n      } else {\n        // Fallback for development\n        await new Promise(resolve => setTimeout(resolve, 1500));\n        responseContent = \"This is a placeholder response. In the full implementation, this would be a response from Google's Gemini LLM, responding appropriately to your character's situation.\";\n      }\n      \n      // Check if the AI response is implying phone interaction\n      const lowerResponse = responseContent.toLowerCase();\n      if (lowerResponse.includes('on your phone') || \n          lowerResponse.includes('your phone shows') || \n          lowerResponse.includes('on the screen of your phone')) {\n        // Activate phone mode if AI refers to phone content\n        setIsPhoneMode(true);\n      }\n      \n      // Detect if this should be a social media response\n      let responseType = 'dialogue';\n      if (messageType === 'social' || \n          (responseContent && (responseContent.includes('@') || \n                             responseContent.includes('Instagram') || \n                             responseContent.includes('TikTok') || \n                             responseContent.includes('followers')))) {\n        responseType = 'social';\n      } else if (messageType === 'action') {\n        responseType = 'action';\n      } else if (messageType === 'thought') {\n        responseType = 'thought';\n      }\n      \n      const aiMessage = {\n        id: Date.now(),\n        sender: 'ai',\n        type: responseType,\n        content: responseContent,\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      console.error('Error getting AI response:', error);\n      \n      // Add error message\n      const errorMessage = {\n        id: Date.now(),\n        sender: 'system',\n        type: 'error',\n        content: 'There was an error getting a response. Please try again.',\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsTyping(false);\n    }\n  }, [geminiService, roleplayInstructions, scenario]);\n\n  // Format message based on type\n  const formatText = (text) => {\n    if (!text) return '';\n    if (typeof text !== 'string') return '';\n    \n    // Ensure proper paragraph spacing by normalizing all line breaks\n    // First, normalize different line break styles\n    let normalizedText = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n    \n    // Remove markdown bold formatting\n    normalizedText = normalizedText.replace(/\\*\\*([^*]+)\\*\\*/g, '$1');\n    \n    // Enhance line break separation for social media platform headers\n    normalizedText = normalizedText\n      .replace(/(📱 Instagram|🎵 TikTok|▶️ YouTube|🐦 Twitter|👻 Snapchat)/g, '\\n$1')  \n      .replace(/\\n\\n(📱 Instagram|🎵 TikTok|▶️ YouTube|🐦 Twitter|👻 Snapchat)/g, '\\n\\n\\n$1');\n    \n    // Format social media messages with proper styling\n    if (normalizedText.includes('@') || normalizedText.includes('#') || normalizedText.includes('Instagram') || normalizedText.includes('TikTok')) {\n      // Add emoji and styling to social media content\n      const formattedText = normalizedText\n        .replace(/Instagram/g, '📱 Instagram')\n        .replace(/TikTok/g, '🎵 TikTok')\n        .replace(/YouTube/g, '▶️ YouTube')\n        .replace(/Twitter/g, '🐦 Twitter')\n        .replace(/direct message/gi, 'DM 💬')\n        .replace(/@([\\w]+)/g, '<span class=\"handle\">@$1</span>')\n        .replace(/\"([^\"]+)\"/g, '<span class=\"quote\">\"$1\"</span>')\n        .replace(/\\bviral\\b/g, '<span class=\"highlight\">viral</span>')\n        .replace(/\\bfollowers\\b/g, 'followers 👥')\n        .replace(/\\blikes\\b/g, 'likes ❤️')\n        .replace(/\\bcomments\\b/g, 'comments 💬')\n        .replace(/\\bshares\\b/g, 'shares 🔄');\n          \n      // Make sure we have proper paragraph breaks\n      // Split by double newlines (paragraphs) or ensure line breaks in longer text\n      const paragraphs = formattedText.split(/\\n\\s*\\n/);\n      if (paragraphs.length === 1 && paragraphs[0].length > 200) {\n        // Long single paragraph - try to break it at sentence boundaries\n        const sentences = paragraphs[0].split(/(?<=\\.)\\s+/);\n        // Group sentences into reasonable paragraphs\n        const groupedParagraphs = [];\n        let currentParagraph = '';\n        sentences.forEach(sentence => {\n          if (currentParagraph.length + sentence.length > 200) {\n            groupedParagraphs.push(currentParagraph);\n            currentParagraph = sentence;\n          } else {\n            currentParagraph += (currentParagraph ? ' ' : '') + sentence;\n          }\n        });\n        if (currentParagraph) {\n          groupedParagraphs.push(currentParagraph);\n        }\n        \n        return groupedParagraphs.map((para, i) => {\n          const processedPara = para.replace(/\\n/g, '<br />');\n          return <p key={i} dangerouslySetInnerHTML={{ __html: processedPara }} />;\n        });\n      }\n      \n      return paragraphs.map((para, i) => {\n        const processedPara = para.replace(/\\n/g, '<br />');\n        return <p key={i} dangerouslySetInnerHTML={{ __html: processedPara }} />;\n      });\n    }\n    \n    // For message lists like the Instagram DM requests\n    if (normalizedText.includes('Instagram Message Requests:')) {\n      const sections = normalizedText.split(/\\n\\s*\\n/);\n      \n      return sections.map((section, i) => {\n        if (section.includes('•')) {\n          // This is a list section\n          const listItems = section.split('•').filter(item => item.trim());\n          return (\n            <div key={i} className=\"message-list\">\n              {listItems.map((item, j) => {\n                // Check if this contains a username and message\n                const parts = item.split(/\\n/);\n                if (parts.length > 1) {\n                  const username = parts[0].trim();\n                  const messageText = parts.slice(1).join('\\n').trim();\n                  \n                  return (\n                    <div key={j} className=\"dm-message\">\n                      <div className=\"dm-username\">{username}</div>\n                      <div className=\"dm-content\"><em>\"{messageText}\"</em></div>\n                    </div>\n                  );\n                } else {\n                  return <p key={j}>{item.trim()}</p>;\n                }\n              })}\n            </div>\n          );\n        } else {\n          // Regular paragraph\n          return <p key={i}>{section}</p>;\n        }\n      });\n    }\n    \n    // Regular content - split by paragraphs\n    // First check if we need to add paragraph breaks to a long single paragraph\n    const paragraphs = normalizedText.split(/\\n\\s*\\n/);\n    \n    if (paragraphs.length === 1 && paragraphs[0].length > 200) {\n      // Long single paragraph - try to break it at sentence boundaries\n      const sentences = paragraphs[0].split(/(?<=\\.)\\s+/);\n      // Group sentences into reasonable paragraphs\n      const groupedParagraphs = [];\n      let currentParagraph = '';\n      sentences.forEach(sentence => {\n        if (currentParagraph.length + sentence.length > 200) {\n          groupedParagraphs.push(currentParagraph);\n          currentParagraph = sentence;\n        } else {\n          currentParagraph += (currentParagraph ? ' ' : '') + sentence;\n        }\n      });\n      if (currentParagraph) {\n        groupedParagraphs.push(currentParagraph);\n      }\n      \n      return groupedParagraphs.map((para, i) => {\n        // Replace single newlines with <br>\n        const formattedPara = para.replace(/\\n/g, '<br />');\n        return <p key={i} dangerouslySetInnerHTML={{ __html: formattedPara }} />;\n      });\n    }\n    \n    return paragraphs.map((para, i) => {\n      // Replace single newlines with <br>\n      const formattedPara = para.replace(/\\n/g, '<br />');\n      return <p key={i} dangerouslySetInnerHTML={{ __html: formattedPara }} />;\n    });\n  };\n    \n  // Format message based on type\n  const formatMessage = (message) => {\n    // Create a timestamp element\n    const timestamp = (\n      <span className=\"timestamp\">\n        {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n      </span>\n    );\n    \n    switch (message.type) {\n      case 'system':\n        // For system messages like day headers\n        if (message.content.startsWith('Day ') || message.content.includes('Late-night')) {\n          return (\n            <div className=\"day-header\">\n              <div className=\"day-marker\">{message.content}</div>\n            </div>\n          );\n        }\n        return <div className=\"system-message\">{formatText(message.content)}</div>;\n        \n      case 'error':\n        return <div className=\"error-message\">{message.content}</div>;\n        \n      case 'social':\n        // Use our specialized social media component for better notification display\n        return (\n          <div className={`social-message ${message.sender}`}>\n            <SocialMediaMessage content={message.content} />\n            {timestamp}\n          </div>\n        );\n        \n      case 'dialogue':\n        return (\n          <div className={`dialogue-message ${message.sender}`}>\n            {formatText(message.content)}\n            {timestamp}\n          </div>\n        );\n        \n      case 'action':\n        return (\n          <div className={`action-message ${message.sender}`}>\n            {formatText(message.content)}\n            {timestamp}\n          </div>\n        );\n        \n      case 'thought':\n        return (\n          <div className={`thought-message ${message.sender}`}>\n            {formatText(message.content)}\n            {timestamp}\n          </div>\n        );\n        \n      default:\n        return (\n          <div className={`message ${message.sender}`}>\n            {formatText(message.content)}\n            {timestamp}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"chat-interface\">\n      <div className=\"chat-header\">\n        <h2>{scenario?.title || 'Untitled Scenario'}</h2>\n        <div className=\"chat-controls\">\n          <button \n            className=\"control-btn reset-chat-btn\" \n            onClick={onReset}\n            title=\"Start Over\"\n          >\n            Start Over\n          </button>\n          <button \n            className=\"control-btn\" \n            onClick={() => setShowInstructionsEditor(true)}\n            title=\"View/Edit Roleplay Instructions\"\n          >\n            <ScrollText size={18} />\n          </button>\n          <button \n            className=\"control-btn\"\n            onClick={() => setShowSettingsPanel(true)}\n            title=\"Roleplay Settings\"\n          >\n            <Settings size={18} />\n          </button>\n          <button \n            className=\"control-btn\"\n            onClick={() => setShowMusicPanel(true)}\n            title=\"Ambient Music\"\n          >\n            <Music size={18} />\n          </button>\n          <button \n            className=\"control-btn\"\n            onClick={() => setShowScenarioInfo(true)}\n            title=\"View Scenario Details\"\n          >\n            <BookOpen size={18} />\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"auto-detect-toggle\">\n        <label className=\"toggle-label\">\n          <input \n            type=\"checkbox\" \n            checked={autoDetectMessageType} \n            onChange={() => setAutoDetectMessageType(!autoDetectMessageType)}\n          />\n          Auto-detect message type based on content\n        </label>\n      </div>\n      \n      <div className=\"type-explainer\">\n        {autoDetectMessageType ? (\n          <p>Automatically detected as: <strong className=\"detected-type\">{messageType}</strong></p>\n        ) : (\n          <p>Choose a response type: <strong>Dialogue</strong> (speaking), <strong>Action</strong> (doing), <strong>Thought</strong> (thinking), or <strong>Social</strong> (social media)</p>\n        )}\n      </div>\n      \n      <div className=\"messages-container\">\n        {/* Mobile Phone UI when in phone mode */}\n        {isPhoneMode ? (\n          <MobilePhoneUI \n            messages={messages} \n            onSendMessage={handleSendMessage}\n          />\n        ) : (\n          /* Regular message display */\n          messages.map(message => (\n            <div key={message.id} className={`message-wrapper ${message.sender}`}>\n              {formatMessage(message)}\n              <span className=\"timestamp\">\n                {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n              </span>\n            </div>\n          ))\n        )}\n        \n        {isTyping && (\n          <div className=\"typing-indicator\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        )}\n        \n        <div ref={messagesEndRef} />\n      </div>\n      \n      <div className=\"message-type-selector\" style={{ display: isPhoneMode ? 'none' : 'flex' }}>\n        <div className=\"message-type-help\" title=\"Choose how you want to respond\">\n          <span className=\"type-help-text\">{autoDetectMessageType ? 'Detected type:' : 'Response type:'}</span>\n        </div>\n        <button \n          className={`type-btn ${messageType === 'dialogue' ? 'active' : ''}`}\n          onClick={() => setMessageType('dialogue')}\n          title=\"What you say out loud to characters\"\n        >\n          <MessageSquare size={16} />\n          Dialogue\n        </button>\n        <button \n          className={`type-btn ${messageType === 'action' ? 'active' : ''}`}\n          onClick={() => setMessageType('action')}\n          title=\"Physical actions you take\"\n        >\n          <MousePointer size={16} />\n          Action\n        </button>\n        <button \n          className={`type-btn ${messageType === 'thought' ? 'active' : ''}`}\n          onClick={() => setMessageType('thought')}\n          title=\"Your inner thoughts (not heard by others)\"\n        >\n          <Brain size={16} />\n          Thought\n        </button>\n        <button \n          className={`type-btn ${messageType === 'social' ? 'active' : ''}`}\n          onClick={() => setMessageType('social')}\n          title=\"Social media posts, DMs, notifications\"\n        >\n          <Phone size={16} />\n          Social\n        </button>\n      </div>\n      \n      {/* Regular input area - hidden in phone mode */}\n      {!isPhoneMode && (\n        <form \n          className=\"input-area\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            console.log('Form submitted');\n            handleSendMessage(inputValue);\n          }}\n        >\n          <div className=\"input-wrapper\">\n            <textarea \n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              onKeyDown={handleKeyPress}\n              placeholder={messageType === 'dialogue' ? 'Type your dialogue...' : \n                          messageType === 'action' ? 'Describe your action...' : \n                          messageType === 'thought' ? 'Share your thoughts...' :\n                          'Type social media content, DMs, or notifications...'}\n              rows={3}\n            />\n            <div className=\"input-helper\">\n              {inputValue.length > 0 ? 'Press Enter to send or click the button' : 'Type your message'}\n            </div>\n          </div>\n          <button \n            type=\"submit\"\n            className=\"send-btn\"\n          >\n            <Send size={20} />\n          </button>\n        </form>\n      )}\n      \n      {/* Exit phone mode button - only shown in phone mode */}\n      {isPhoneMode && (\n        <div className=\"phone-mode-footer\">\n          <button className=\"exit-phone-btn\" onClick={() => setIsPhoneMode(false)}>\n            Put Phone Away\n          </button>\n        </div>\n      )}\n\n      {/* Roleplay Instructions Modal */}\n      {showInstructionsEditor && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <RoleplayInstructions \n              instructions={roleplayInstructions}\n              onSave={saveRoleplayInstructions}\n              onCancel={cancelEditInstructions}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Settings Panel */}\n      {showSettingsPanel && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"panel-header\">\n              <h3>Roleplay Settings</h3>\n              <button className=\"close-btn\" onClick={() => setShowSettingsPanel(false)}>×</button>\n            </div>\n            <div className=\"panel-body\">\n              <div className=\"settings-section\">\n                <h4>AI Response Style</h4>\n                <div className=\"setting-control\">\n                  <label>Temperature:</label>\n                  <select>\n                    <option value=\"0.3\">More Focused (0.3)</option>\n                    <option value=\"0.7\" selected>Balanced (0.7)</option>\n                    <option value=\"1.0\">More Creative (1.0)</option>\n                  </select>\n                </div>\n                <p className=\"setting-description\">Lower values make responses more predictable, higher values make them more creative.</p>\n              </div>\n              \n              <div className=\"settings-section\">\n                <h4>Message Type Settings</h4>\n                <div className=\"setting-control\">\n                  <label>\n                    <input \n                      type=\"checkbox\" \n                      checked={autoDetectMessageType} \n                      onChange={() => setAutoDetectMessageType(!autoDetectMessageType)}\n                    /> \n                    Auto-detect message type\n                  </label>\n                  <p className=\"setting-description\">When enabled, the system will automatically detect if your message is dialogue, action, thought, or social media content.</p>\n                </div>\n              </div>\n              \n              <div className=\"settings-section\">\n                <h4>Display Settings</h4>\n                <div className=\"setting-control\">\n                  <label>\n                    <input type=\"checkbox\" /> Dark Mode\n                  </label>\n                </div>\n                <div className=\"setting-control\">\n                  <label>\n                    <input type=\"checkbox\" checked /> Show Timestamps\n                  </label>\n                </div>\n              </div>\n              \n              <button className=\"save-settings-btn\">Save Settings</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Music Panel */}\n      {showMusicPanel && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"panel-header\">\n              <h3>Ambient Music</h3>\n              <button className=\"close-btn\" onClick={() => setShowMusicPanel(false)}>×</button>\n            </div>\n            <div className=\"panel-body\">\n              <p>Choose background music to enhance your roleplay experience:</p>\n              \n              <div className=\"music-options\">\n                <div className=\"music-option\">\n                  <h4>Atmospheric</h4>\n                  <button className=\"play-btn\">▶️ Gentle Ambient</button>\n                  <button className=\"play-btn\">▶️ Dark Ambient</button>\n                  <button className=\"play-btn\">▶️ Space</button>\n                </div>\n                \n                <div className=\"music-option\">\n                  <h4>Emotional</h4>\n                  <button className=\"play-btn\">▶️ Melancholic</button>\n                  <button className=\"play-btn\">▶️ Hopeful</button>\n                  <button className=\"play-btn\">▶️ Tense</button>\n                </div>\n                \n                <div className=\"music-option\">\n                  <h4>Location-based</h4>\n                  <button className=\"play-btn\">▶️ Nature Sounds</button>\n                  <button className=\"play-btn\">▶️ Urban</button>\n                  <button className=\"play-btn\">▶️ Rain & Thunder</button>\n                </div>\n              </div>\n              \n              <div className=\"music-controls\">\n                <button>Stop Music</button>\n                <div className=\"volume-control\">\n                  <label>Volume:</label>\n                  <input type=\"range\" min=\"0\" max=\"100\" value=\"70\" />\n                </div>\n              </div>\n              \n              <p className=\"music-note\">Music feature coming soon! This is a placeholder interface.</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Scenario Info Panel */}\n      {showScenarioInfo && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"panel-header\">\n              <h3>Scenario Details</h3>\n              <button className=\"close-btn\" onClick={() => setShowScenarioInfo(false)}>×</button>\n            </div>\n            <div className=\"panel-body scenario-info\">\n              <h4>{scenario?.title || 'Untitled Scenario'}</h4>\n              \n              <div className=\"info-section\">\n                <h5>Setting</h5>\n                <p><strong>Location:</strong> {scenario?.setting?.location || 'Not specified'}</p>\n                <p><strong>Time:</strong> {scenario?.setting?.time || 'Not specified'}</p>\n                <p><strong>Atmosphere:</strong> {scenario?.setting?.atmosphere || 'Not specified'}</p>\n              </div>\n              \n              <div className=\"info-section\">\n                <h5>Your Character</h5>\n                <p><strong>Name:</strong> {character?.name || 'Unnamed'}</p>\n                <p><strong>Age:</strong> {character?.age || 'Not specified'}</p>\n              </div>\n              \n              <div className=\"info-section\">\n                <h5>Other Characters</h5>\n                {scenario?.otherCharacters?.map((char, index) => (\n                  <div key={index} className=\"other-character\">\n                    <p><strong>{char.name}</strong> ({char.role})</p>\n                    <p>{char.description}</p>\n                  </div>\n                )) || <p>No other characters specified.</p>}\n              </div>\n              \n              <div className=\"info-section\">\n                <h5>Narrative Goals</h5>\n                <p>{scenario?.narrativeGoals || 'No specific goals set.'}</p>\n              </div>\n              \n              <div className=\"info-section\">\n                <h5>Tone & Themes</h5>\n                <p>{scenario?.toneAndThemes || 'Not specified'}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}