{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmorrison/Code/narrativeforge/src/components/ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './ChatInterface.css';\nimport VoiceSelector from './VoiceSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  character,\n  scenario,\n  geminiService,\n  elevenLabsService,\n  isVoiceEnabled,\n  onSaveChat,\n  onReset\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [messageType, setMessageType] = useState('dialogue'); // dialogue, action, thought\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Voice-related state\n  const [selectedVoice, setSelectedVoice] = useState(null);\n  const [showVoiceSelector, setShowVoiceSelector] = useState(false);\n  const [isPlayingVoice, setIsPlayingVoice] = useState(false);\n  const [currentlyPlayingMessageIndex, setCurrentlyPlayingMessageIndex] = useState(null);\n\n  // Initialize with system message\n  useEffect(() => {\n    if (character && scenario) {\n      // Clear any existing messages to prevent story contamination\n      setMessages([]);\n\n      // Small timeout to ensure everything is reset\n      setTimeout(() => {\n        setMessages([{\n          role: 'system',\n          content: `Scenario initialized: ${scenario.title || 'Untitled'}. Character: ${character.name || 'Unnamed'}. Ready to begin roleplay.`,\n          timestamp: new Date().toISOString()\n        }]);\n\n        // Generate initial AI response if geminiService is available\n        if (geminiService) {\n          // Make sure the service is properly initialized\n          geminiService.reset();\n          geminiService.initialize(character, scenario);\n          handleAIResponse();\n        }\n      }, 200);\n    }\n  }, [character, scenario]);\n\n  // Scroll to bottom when messages update\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  const handleAIResponse = async () => {\n    if (!geminiService) return;\n    setIsLoading(true);\n    try {\n      // Provide a very explicit instruction to start the roleplay correctly\n      const scenarioTitle = (scenario === null || scenario === void 0 ? void 0 : scenario.title) || 'Untitled';\n      const initialSituation = (scenario === null || scenario === void 0 ? void 0 : scenario.initialSituation) || 'Not specified';\n      const response = await geminiService.generateResponse(`Begin a new roleplay for \"${scenarioTitle}\" with NO references to any other stories or narratives. Set the scene EXACTLY as described in this initial situation: \"${initialSituation}\". Start the narrative at precisely this moment with no previous events assumed. DO NOT introduce elements from any other stories, scenarios, or previous conversations.`, \"system\");\n      const assistantMessage = {\n        role: 'assistant',\n        content: response,\n        timestamp: new Date().toISOString()\n      };\n      setMessages(prev => [...prev, assistantMessage]);\n\n      // Generate and play voice if enabled\n      if (isVoiceEnabled && elevenLabsService && selectedVoice) {\n        try {\n          playMessageAudio(response, messages.length);\n        } catch (voiceError) {\n          console.error('Error generating voice:', voiceError);\n        }\n      }\n    } catch (error) {\n      console.error('Error getting AI response:', error);\n      setMessages(prev => [...prev, {\n        role: 'system',\n        content: 'Error: Could not generate AI response. Please check your API key or try again later.',\n        timestamp: new Date().toISOString(),\n        error: true\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isLoading || !geminiService) return;\n    const newMessage = {\n      role: 'user',\n      content: inputValue,\n      type: messageType,\n      timestamp: new Date().toISOString()\n    };\n    setMessages(prev => [...prev, newMessage]);\n    setInputValue('');\n    setIsLoading(true);\n    try {\n      const response = await geminiService.generateResponse(inputValue, messageType);\n      const assistantMessage = {\n        role: 'assistant',\n        content: response,\n        timestamp: new Date().toISOString()\n      };\n      const newMessages = [...messages, newMessage, assistantMessage];\n      setMessages(newMessages);\n\n      // Generate and play voice if enabled\n      if (isVoiceEnabled && elevenLabsService && selectedVoice) {\n        try {\n          playMessageAudio(response, newMessages.length - 1);\n        } catch (voiceError) {\n          console.error('Error generating voice:', voiceError);\n        }\n      }\n    } catch (error) {\n      console.error('Error getting AI response:', error);\n      setMessages(prev => [...prev, {\n        role: 'system',\n        content: 'Error: Could not generate AI response. Please try again.',\n        timestamp: new Date().toISOString(),\n        error: true\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // Load available voices when ElevenLabs service is initialized\n  useEffect(() => {\n    if (elevenLabsService && isVoiceEnabled) {\n      const loadVoices = async () => {\n        try {\n          const voices = await elevenLabsService.getVoices();\n          if (voices.length > 0 && !selectedVoice) {\n            // Default to first voice\n            setSelectedVoice(voices[0]);\n          }\n        } catch (error) {\n          console.error('Error loading voices:', error);\n        }\n      };\n      loadVoices();\n    }\n  }, [elevenLabsService, isVoiceEnabled]);\n\n  // Handle selecting a voice\n  const handleSelectVoice = voice => {\n    setSelectedVoice(voice);\n    setShowVoiceSelector(false);\n  };\n\n  // Add a function to play a specific message\n  const playMessageAudio = async (messageContent, messageIndex) => {\n    if (isPlayingVoice || !elevenLabsService || !selectedVoice || !isVoiceEnabled) return;\n    try {\n      setIsPlayingVoice(true);\n      setCurrentlyPlayingMessageIndex(messageIndex);\n      const audioBlob = await elevenLabsService.textToSpeech(messageContent, selectedVoice.voice_id);\n\n      // Set up an event listener for when audio ends\n      const handleAudioEnd = () => {\n        setIsPlayingVoice(false);\n        setCurrentlyPlayingMessageIndex(null);\n        if (elevenLabsService.currentAudio) {\n          elevenLabsService.currentAudio.removeEventListener('ended', handleAudioEnd);\n        }\n      };\n      const audio = elevenLabsService.playAudio(audioBlob);\n      audio.addEventListener('ended', handleAudioEnd);\n    } catch (error) {\n      console.error('Error playing message audio:', error);\n      setIsPlayingVoice(false);\n      setCurrentlyPlayingMessageIndex(null);\n    }\n  };\n\n  // Function to stop all audio playback\n  const stopAllAudio = () => {\n    if (elevenLabsService) {\n      elevenLabsService.stopAudio();\n      setIsPlayingVoice(false);\n      setCurrentlyPlayingMessageIndex(null);\n    }\n  };\n\n  // Stop any playing audio when component unmounts\n  useEffect(() => {\n    return () => {\n      if (elevenLabsService) {\n        elevenLabsService.stopAudio();\n      }\n    };\n  }, [elevenLabsService]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"character-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: (character === null || character === void 0 ? void 0 : character.name) || 'Unnamed Character'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"scenario-title\",\n          children: (scenario === null || scenario === void 0 ? void 0 : scenario.title) || 'Untitled Scenario'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-controls\",\n        children: [isVoiceEnabled && elevenLabsService && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `voice-btn ${isPlayingVoice ? 'voice-playing' : ''}`,\n          onClick: () => setShowVoiceSelector(!showVoiceSelector),\n          title: \"Voice Settings\",\n          type: \"button\",\n          children: [isPlayingVoice ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"voice-playing-indicator\",\n            children: \"\\uD83D\\uDD0A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uD83C\\uDFA4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 17\n          }, this), selectedVoice ? selectedVoice.name : 'Select Voice']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"save-btn\",\n          onClick: () => typeof onSaveChat === 'function' && onSaveChat(messages),\n          type: \"button\",\n          children: \"Save Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-btn\",\n          onClick: onReset,\n          type: \"button\",\n          children: \"Start Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), showVoiceSelector && elevenLabsService && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"voice-selector-modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"voice-selector-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"voice-selector-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Select Voice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-voice-selector\",\n            onClick: () => setShowVoiceSelector(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(VoiceSelector, {\n          elevenLabsApiKey: elevenLabsService.apiKey,\n          selectedVoice: selectedVoice,\n          onSelectVoice: handleSelectVoice,\n          isLoading: isPlayingVoice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.role === 'user' ? 'user-message' : message.role === 'assistant' ? 'ai-message' : 'system-message'} ${message.error ? 'error-message' : ''} ${currentlyPlayingMessageIndex === index ? 'currently-playing' : ''}`,\n        children: [message.role === 'user' && message.type && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-type-tag\",\n          children: message.type === 'dialogue' ? 'Dialogue' : message.type === 'action' ? 'Action' : message.type === 'thought' ? 'Thought' : 'Message'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), message.role === 'assistant' && isVoiceEnabled && elevenLabsService && selectedVoice && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-voice-control\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => playMessageAudio(message.content, index),\n            disabled: isPlayingVoice,\n            className: \"play-message-btn\",\n            title: \"Play message\",\n            children: currentlyPlayingMessageIndex === index ? '🔊 Playing...' : '🔊 Play'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-indicator\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"typing-indicator\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-type-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: `type-btn ${messageType === 'dialogue' ? 'active' : ''}`,\n            onClick: () => setMessageType('dialogue'),\n            children: \"Dialogue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: `type-btn ${messageType === 'action' ? 'active' : ''}`,\n            onClick: () => setMessageType('action'),\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: `type-btn ${messageType === 'thought' ? 'active' : ''}`,\n            onClick: () => setMessageType('thought'),\n            children: \"Thought\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), isVoiceEnabled && elevenLabsService && isPlayingVoice && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"stop-voice-btn\",\n          onClick: stopAllAudio,\n          title: \"Stop Voice\",\n          children: \"Stop Voice\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyDown: handleKeyPress,\n          placeholder: messageType === 'dialogue' ? 'Type your dialogue...' : messageType === 'action' ? 'Describe your action...' : messageType === 'thought' ? 'Share your thoughts...' : 'Type your message...',\n          rows: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-helper\",\n          children: inputValue.length > 0 ? 'Press Enter to send or click the button' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"send-btn\",\n        onClick: handleSendMessage,\n        disabled: isLoading || !inputValue.trim(),\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"un5tITWO1ilE7Cdl7Q1hC5v1O9g=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","VoiceSelector","jsxDEV","_jsxDEV","ChatInterface","character","scenario","geminiService","elevenLabsService","isVoiceEnabled","onSaveChat","onReset","_s","messages","setMessages","inputValue","setInputValue","messageType","setMessageType","isLoading","setIsLoading","messagesEndRef","selectedVoice","setSelectedVoice","showVoiceSelector","setShowVoiceSelector","isPlayingVoice","setIsPlayingVoice","currentlyPlayingMessageIndex","setCurrentlyPlayingMessageIndex","setTimeout","role","content","title","name","timestamp","Date","toISOString","reset","initialize","handleAIResponse","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","scenarioTitle","initialSituation","response","generateResponse","assistantMessage","prev","playMessageAudio","length","voiceError","console","error","handleSendMessage","trim","newMessage","type","newMessages","handleKeyPress","e","key","shiftKey","preventDefault","loadVoices","voices","getVoices","handleSelectVoice","voice","messageContent","messageIndex","audioBlob","textToSpeech","voice_id","handleAudioEnd","currentAudio","removeEventListener","audio","playAudio","addEventListener","stopAllAudio","stopAudio","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","elevenLabsApiKey","apiKey","onSelectVoice","map","message","index","disabled","ref","value","onChange","target","onKeyDown","placeholder","rows","_c","$RefreshReg$"],"sources":["/Users/ryanmorrison/Code/narrativeforge/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './ChatInterface.css';\nimport VoiceSelector from './VoiceSelector';\n\nconst ChatInterface = ({ character, scenario, geminiService, elevenLabsService, isVoiceEnabled, onSaveChat, onReset }) => {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [messageType, setMessageType] = useState('dialogue'); // dialogue, action, thought\n  const [isLoading, setIsLoading] = useState(false);\n  const messagesEndRef = useRef(null);\n  \n  // Voice-related state\n  const [selectedVoice, setSelectedVoice] = useState(null);\n  const [showVoiceSelector, setShowVoiceSelector] = useState(false);\n  const [isPlayingVoice, setIsPlayingVoice] = useState(false);\n  const [currentlyPlayingMessageIndex, setCurrentlyPlayingMessageIndex] = useState(null);\n\n  // Initialize with system message\n  useEffect(() => {\n    if (character && scenario) {\n      // Clear any existing messages to prevent story contamination\n      setMessages([]);\n      \n      // Small timeout to ensure everything is reset\n      setTimeout(() => {\n        setMessages([\n          {\n            role: 'system',\n            content: `Scenario initialized: ${scenario.title || 'Untitled'}. Character: ${character.name || 'Unnamed'}. Ready to begin roleplay.`,\n            timestamp: new Date().toISOString()\n          }\n        ]);\n        \n        // Generate initial AI response if geminiService is available\n        if (geminiService) {\n          // Make sure the service is properly initialized\n          geminiService.reset();\n          geminiService.initialize(character, scenario);\n          handleAIResponse();\n        }\n      }, 200);\n    }\n  }, [character, scenario]);\n\n  // Scroll to bottom when messages update\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  const handleAIResponse = async () => {\n    if (!geminiService) return;\n    \n    setIsLoading(true);\n    \n    try {\n      // Provide a very explicit instruction to start the roleplay correctly\n      const scenarioTitle = scenario?.title || 'Untitled';\n      const initialSituation = scenario?.initialSituation || 'Not specified';\n      \n      const response = await geminiService.generateResponse(\n        `Begin a new roleplay for \"${scenarioTitle}\" with NO references to any other stories or narratives. Set the scene EXACTLY as described in this initial situation: \"${initialSituation}\". Start the narrative at precisely this moment with no previous events assumed. DO NOT introduce elements from any other stories, scenarios, or previous conversations.`, \n        \"system\"\n      );\n      \n      const assistantMessage = {\n        role: 'assistant',\n        content: response,\n        timestamp: new Date().toISOString()\n      };\n      \n      setMessages(prev => [...prev, assistantMessage]);\n      \n      // Generate and play voice if enabled\n      if (isVoiceEnabled && elevenLabsService && selectedVoice) {\n        try {\n          playMessageAudio(response, messages.length);\n        } catch (voiceError) {\n          console.error('Error generating voice:', voiceError);\n        }\n      }\n    } catch (error) {\n      console.error('Error getting AI response:', error);\n      setMessages(prev => [...prev, {\n        role: 'system',\n        content: 'Error: Could not generate AI response. Please check your API key or try again later.',\n        timestamp: new Date().toISOString(),\n        error: true\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (!inputValue.trim() || isLoading || !geminiService) return;\n    \n    const newMessage = {\n      role: 'user',\n      content: inputValue,\n      type: messageType,\n      timestamp: new Date().toISOString()\n    };\n    \n    setMessages(prev => [...prev, newMessage]);\n    setInputValue('');\n    setIsLoading(true);\n    \n    try {\n      const response = await geminiService.generateResponse(inputValue, messageType);\n      \n      const assistantMessage = {\n        role: 'assistant',\n        content: response,\n        timestamp: new Date().toISOString()\n      };\n      \n      const newMessages = [...messages, newMessage, assistantMessage];\n      setMessages(newMessages);\n      \n      // Generate and play voice if enabled\n      if (isVoiceEnabled && elevenLabsService && selectedVoice) {\n        try {\n          playMessageAudio(response, newMessages.length - 1);\n        } catch (voiceError) {\n          console.error('Error generating voice:', voiceError);\n        }\n      }\n    } catch (error) {\n      console.error('Error getting AI response:', error);\n      setMessages(prev => [...prev, {\n        role: 'system',\n        content: 'Error: Could not generate AI response. Please try again.',\n        timestamp: new Date().toISOString(),\n        error: true\n      }]);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // Load available voices when ElevenLabs service is initialized\n  useEffect(() => {\n    if (elevenLabsService && isVoiceEnabled) {\n      const loadVoices = async () => {\n        try {\n          const voices = await elevenLabsService.getVoices();\n          if (voices.length > 0 && !selectedVoice) {\n            // Default to first voice\n            setSelectedVoice(voices[0]);\n          }\n        } catch (error) {\n          console.error('Error loading voices:', error);\n        }\n      };\n      \n      loadVoices();\n    }\n  }, [elevenLabsService, isVoiceEnabled]);\n  \n  // Handle selecting a voice\n  const handleSelectVoice = (voice) => {\n    setSelectedVoice(voice);\n    setShowVoiceSelector(false);\n  };\n  \n  // Add a function to play a specific message\n  const playMessageAudio = async (messageContent, messageIndex) => {\n    if (isPlayingVoice || !elevenLabsService || !selectedVoice || !isVoiceEnabled) return;\n    \n    try {\n      setIsPlayingVoice(true);\n      setCurrentlyPlayingMessageIndex(messageIndex);\n      \n      const audioBlob = await elevenLabsService.textToSpeech(messageContent, selectedVoice.voice_id);\n      \n      // Set up an event listener for when audio ends\n      const handleAudioEnd = () => {\n        setIsPlayingVoice(false);\n        setCurrentlyPlayingMessageIndex(null);\n        if (elevenLabsService.currentAudio) {\n          elevenLabsService.currentAudio.removeEventListener('ended', handleAudioEnd);\n        }\n      };\n      \n      const audio = elevenLabsService.playAudio(audioBlob);\n      audio.addEventListener('ended', handleAudioEnd);\n      \n    } catch (error) {\n      console.error('Error playing message audio:', error);\n      setIsPlayingVoice(false);\n      setCurrentlyPlayingMessageIndex(null);\n    }\n  };\n  \n  // Function to stop all audio playback\n  const stopAllAudio = () => {\n    if (elevenLabsService) {\n      elevenLabsService.stopAudio();\n      setIsPlayingVoice(false);\n      setCurrentlyPlayingMessageIndex(null);\n    }\n  };\n  \n  // Stop any playing audio when component unmounts\n  useEffect(() => {\n    return () => {\n      if (elevenLabsService) {\n        elevenLabsService.stopAudio();\n      }\n    };\n  }, [elevenLabsService]);\n  \n  return (\n    <div className=\"chat-interface\">\n      <div className=\"chat-header\">\n        <div className=\"character-info\">\n          <h2>{character?.name || 'Unnamed Character'}</h2>\n          <p className=\"scenario-title\">{scenario?.title || 'Untitled Scenario'}</p>\n        </div>\n        <div className=\"chat-controls\">\n          {isVoiceEnabled && elevenLabsService && (\n            <button \n              className={`voice-btn ${isPlayingVoice ? 'voice-playing' : ''}`}\n              onClick={() => setShowVoiceSelector(!showVoiceSelector)}\n              title=\"Voice Settings\"\n              type=\"button\"\n            >\n              {isPlayingVoice ? (\n                <span className=\"voice-playing-indicator\">🔊</span>\n              ) : (\n                <span>🎤</span>\n              )}\n              {selectedVoice ? selectedVoice.name : 'Select Voice'}\n            </button>\n          )}\n          <button \n            className=\"save-btn\" \n            onClick={() => typeof onSaveChat === 'function' && onSaveChat(messages)}\n            type=\"button\"\n          >\n            Save Chat\n          </button>\n          <button \n            className=\"reset-btn\" \n            onClick={onReset}\n            type=\"button\"\n          >\n            Start Over\n          </button>\n        </div>\n      </div>\n      \n      {showVoiceSelector && elevenLabsService && (\n        <div className=\"voice-selector-modal\">\n          <div className=\"voice-selector-content\">\n            <div className=\"voice-selector-header\">\n              <h3>Select Voice</h3>\n              <button \n                className=\"close-voice-selector\" \n                onClick={() => setShowVoiceSelector(false)}\n              >\n                ×\n              </button>\n            </div>\n            <VoiceSelector\n              elevenLabsApiKey={elevenLabsService.apiKey}\n              selectedVoice={selectedVoice}\n              onSelectVoice={handleSelectVoice}\n              isLoading={isPlayingVoice}\n            />\n          </div>\n        </div>\n      )}\n      \n      <div className=\"chat-messages\">\n        {messages.map((message, index) => (\n          <div \n            key={index} \n            className={`message ${message.role === 'user' ? 'user-message' : message.role === 'assistant' ? 'ai-message' : 'system-message'} ${message.error ? 'error-message' : ''} ${currentlyPlayingMessageIndex === index ? 'currently-playing' : ''}`}\n          >\n            {message.role === 'user' && message.type && (\n              <div className=\"message-type-tag\">\n                {message.type === 'dialogue' ? 'Dialogue' : \n                message.type === 'action' ? 'Action' : \n                message.type === 'thought' ? 'Thought' : 'Message'}\n              </div>\n            )}\n            <div className=\"message-content\">{message.content}</div>\n            \n            {message.role === 'assistant' && isVoiceEnabled && elevenLabsService && selectedVoice && (\n              <div className=\"message-voice-control\">\n                <button \n                  onClick={() => playMessageAudio(message.content, index)}\n                  disabled={isPlayingVoice}\n                  className=\"play-message-btn\"\n                  title=\"Play message\"\n                >\n                  {currentlyPlayingMessageIndex === index ? '🔊 Playing...' : '🔊 Play'}\n                </button>\n              </div>\n            )}\n          </div>\n        ))}\n        \n        {isLoading && (\n          <div className=\"loading-indicator\">\n            <div className=\"typing-indicator\">\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n          </div>\n        )}\n        \n        <div ref={messagesEndRef} />\n      </div>\n      \n      <div className=\"chat-input\">\n        <div className=\"chat-input-controls\">\n          <div className=\"message-type-selector\">\n            <button \n              type=\"button\"\n              className={`type-btn ${messageType === 'dialogue' ? 'active' : ''}`}\n              onClick={() => setMessageType('dialogue')}\n            >\n              Dialogue\n            </button>\n            <button \n              type=\"button\"\n              className={`type-btn ${messageType === 'action' ? 'active' : ''}`}\n              onClick={() => setMessageType('action')}\n            >\n              Action\n            </button>\n            <button \n              type=\"button\"\n              className={`type-btn ${messageType === 'thought' ? 'active' : ''}`}\n              onClick={() => setMessageType('thought')}\n            >\n              Thought\n            </button>\n          </div>\n          \n          {isVoiceEnabled && elevenLabsService && isPlayingVoice && (\n            <button \n              type=\"button\"\n              className=\"stop-voice-btn\"\n              onClick={stopAllAudio}\n              title=\"Stop Voice\"\n            >\n              Stop Voice\n            </button>\n          )}\n        </div>\n        \n        <div className=\"input-wrapper\">\n          <textarea \n            value={inputValue}\n            onChange={(e) => setInputValue(e.target.value)}\n            onKeyDown={handleKeyPress}\n            placeholder={messageType === 'dialogue' ? 'Type your dialogue...' : \n                        messageType === 'action' ? 'Describe your action...' : \n                        messageType === 'thought' ? 'Share your thoughts...' :\n                        'Type your message...'}\n            rows={3}\n          />\n          <div className=\"input-helper\">\n            {inputValue.length > 0 ? 'Press Enter to send or click the button' : ''}\n          </div>\n        </div>\n        \n        <button \n          type=\"button\"\n          className=\"send-btn\"\n          onClick={handleSendMessage}\n          disabled={isLoading || !inputValue.trim()}\n        >\n          Send\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}