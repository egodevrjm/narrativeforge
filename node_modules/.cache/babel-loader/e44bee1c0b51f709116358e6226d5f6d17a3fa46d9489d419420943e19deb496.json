{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmorrison/Code/narrativeforge/src/components/CharacterProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { RefreshCw, Wand2 } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CharacterProfile = ({\n  onSave,\n  initialData,\n  geminiService\n}) => {\n  _s();\n  const [characterData, setCharacterData] = useState(initialData || {\n    name: '',\n    age: '',\n    physicalDescription: '',\n    background: '',\n    personality: '',\n    relationships: [],\n    additionalNotes: ''\n  });\n\n  // States for tracking generation process\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [generatingAttribute, setGeneratingAttribute] = useState(null);\n\n  // Generate random character using Gemini\n  const generateRandomCharacter = async () => {\n    try {\n      // Show loading state\n      setIsGenerating(true);\n\n      // If we have Gemini service, use it\n      if (geminiService) {\n        const prompt = `Create a detailed fictional character profile with the following information:\n        - Age (between 18-80)\n        - Detailed physical description (at least 3 paragraphs)\n        - Background and history (at least 3 paragraphs, include childhood, family, and major life events)\n        - Personality traits (include both strengths and flaws)\n        - One key relationship with another character\n        \n        Make the character complex, nuanced, and interesting with a strong narrative potential. Include some unique or unexpected elements.\n        Format your response as a JSON object with the following structure:\n        {\n          \"name\": \"Character's name\",\n          \"age\": \"Character's age\",\n          \"physicalDescription\": \"Detailed physical description\",\n          \"background\": \"Background and history\",\n          \"personality\": \"Personality description\",\n          \"relationships\": [\n            {\n              \"name\": \"Name of related character\",\n              \"relationshipType\": \"Type of relationship\",\n              \"description\": \"Description of the relationship\"\n            }\n          ],\n          \"additionalNotes\": \"Any additional details\"\n        }`;\n\n        // Call Gemini API\n        const response = await geminiService.generateGeneric(prompt);\n\n        // Parse the response as JSON (it should be a JSON string)\n        try {\n          // Extract JSON from the response if needed\n          let jsonString = response;\n          // Find the first occurrence of '{' and the last occurrence of '}'\n          const startIndex = response.indexOf('{');\n          const endIndex = response.lastIndexOf('}') + 1;\n          if (startIndex !== -1 && endIndex !== -1) {\n            jsonString = response.substring(startIndex, endIndex);\n          }\n          const characterData = JSON.parse(jsonString);\n          setCharacterData(characterData);\n        } catch (parseError) {\n          console.error('Error parsing Gemini response:', parseError);\n          alert('Failed to parse the AI-generated character. Please try again.');\n        }\n      } else {\n        // Fallback for when Gemini service is not available\n        // Just use some placeholder data\n        const placeholderCharacter = {\n          name: \"Alex Rivera\",\n          age: \"34\",\n          physicalDescription: \"Tall with a lanky build, Alex has olive skin and expressive hazel eyes that crinkle at the corners when they smile. Their dark curly hair is often pulled back in a messy bun, with a few rebellious strands framing a face marked by a prominent nose and a small scar above the left eyebrow from a childhood accident. Alex's hands are those of an artist - long fingers stained with various pigments that never quite wash away completely.\",\n          background: \"Raised in a coastal town by their grandmother after their parents' divorce, Alex found solace in art from an early age. The seaside landscapes became their first subjects, evolving into more abstract expressions as they studied at a small art college on scholarship. After graduation, a series of odd jobs and a brief stint in corporate design led to burnout, prompting Alex to move to a rural area where they converted an old barn into a studio.\",\n          personality: \"Introspective and thoughtful, Alex can appear aloof to strangers but shows deep loyalty to their small circle of friends. They struggle with perfectionism in their art and have periods of intense creativity followed by self-doubt. While generally even-tempered, they can be stubbornly principled about matters of artistic integrity.\",\n          relationships: [{\n            name: \"Jordan Chen\",\n            relationshipType: \"Former partner, now close friend\",\n            description: \"Met in art school, dated for three years before amicably separating. Jordan now runs a gallery in the city and occasionally features Alex's work. Their friendship survived the romantic breakup and evolved into a supportive professional relationship.\"\n          }],\n          additionalNotes: \"Currently working on a series of installations exploring memory and place. Keeps unusual hours, often working through the night when inspiration strikes. Has a rescue cat named Palette who has one blue eye and one green eye.\"\n        };\n        setCharacterData(placeholderCharacter);\n      }\n    } catch (error) {\n      console.error('Error generating character:', error);\n      alert(`Failed to generate a random character: ${error.message}. Please try again.`);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  // Generate specific attribute using Gemini\n  const generateAttribute = async (attribute, currentValue) => {\n    try {\n      // Show loading for this specific attribute\n      setGeneratingAttribute(attribute);\n\n      // If we have Gemini service, use it\n      if (geminiService) {\n        let prompt;\n        switch (attribute) {\n          case 'physicalDescription':\n            prompt = `Expand and enhance this physical description of a character: \"${currentValue || 'No current description'}\". \n            Write a detailed 2-3 paragraph physical description that includes appearance, clothing style, and distinctive features. \n            If the current description is empty or minimal, create a rich and detailed physical description that would be interesting for a roleplaying character.`;\n            break;\n          case 'background':\n            prompt = `Expand and enhance this character background: \"${currentValue || 'No current background'}\". \n            Write a detailed 3-4 paragraph background that includes childhood, key life events, traumas or achievements, and how these shaped the character. \n            Make it nuanced, emotionally resonant, and with narrative potential. \n            If the current background is empty or minimal, create a rich and detailed backstory that would be interesting for a roleplaying character.`;\n            break;\n          case 'personality':\n            prompt = `Expand and enhance this character personality description: \"${currentValue || 'No current personality'}\". \n            Write a detailed paragraph about the character's personality traits, including both strengths and flaws, emotional tendencies, how they relate to others, and what drives them. \n            If the current description is empty or minimal, create a complex and nuanced personality that would be interesting for a roleplaying character.`;\n            break;\n          default:\n            prompt = `Enhance this text for a character profile: \"${currentValue || 'No current text'}\". \n            Make it more detailed, nuanced, and interesting for a roleplaying character.`;\n        }\n\n        // Call Gemini API\n        const response = await geminiService.generateGeneric(prompt);\n\n        // Update the specific attribute\n        setCharacterData(prev => ({\n          ...prev,\n          [attribute]: response\n        }));\n      } else {\n        // Fallback for when Gemini service is not available\n        alert('AI service is not available. Please check your API key or refresh the page to try again.');\n      }\n    } catch (error) {\n      console.error(`Error generating ${attribute}:`, error);\n      alert(`Failed to generate ${attribute}: ${error.message}. Please try again.`);\n    } finally {\n      setGeneratingAttribute(null);\n    }\n  };\n\n  // Add a new relationship field\n  const addRelationship = () => {\n    setCharacterData({\n      ...characterData,\n      relationships: [...characterData.relationships, {\n        name: '',\n        relationshipType: '',\n        description: ''\n      }]\n    });\n  };\n\n  // Update relationship field\n  const updateRelationship = (index, field, value) => {\n    const updatedRelationships = [...characterData.relationships];\n    updatedRelationships[index] = {\n      ...updatedRelationships[index],\n      [field]: value\n    };\n    setCharacterData({\n      ...characterData,\n      relationships: updatedRelationships\n    });\n  };\n\n  // Remove a relationship field\n  const removeRelationship = index => {\n    const updatedRelationships = characterData.relationships.filter((_, i) => i !== index);\n    setCharacterData({\n      ...characterData,\n      relationships: updatedRelationships\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSave(characterData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"character-profile-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Character Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"generation-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"generate-btn\",\n        onClick: generateRandomCharacter,\n        disabled: isGenerating,\n        children: [isGenerating ? 'Generating...' : 'Generate Random Character', /*#__PURE__*/_jsxDEV(RefreshCw, {\n          size: 18,\n          className: isGenerating ? 'spinning' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Basic Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: characterData.name,\n            onChange: e => setCharacterData({\n              ...characterData,\n              name: e.target.value\n            }),\n            placeholder: \"Character's name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: characterData.age,\n            onChange: e => setCharacterData({\n              ...characterData,\n              age: e.target.value\n            }),\n            placeholder: \"Character's age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Physical Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"textarea-with-generate\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: 5,\n            value: characterData.physicalDescription,\n            onChange: e => setCharacterData({\n              ...characterData,\n              physicalDescription: e.target.value\n            }),\n            placeholder: \"Describe your character's physical appearance...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"attribute-generate-btn\",\n            onClick: () => generateAttribute('physicalDescription', characterData.physicalDescription),\n            disabled: generatingAttribute === 'physicalDescription',\n            title: \"Enhance this description using AI\",\n            children: generatingAttribute === 'physicalDescription' ? '...' : /*#__PURE__*/_jsxDEV(Wand2, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 72\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Background & History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"textarea-with-generate\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: 6,\n            value: characterData.background,\n            onChange: e => setCharacterData({\n              ...characterData,\n              background: e.target.value\n            }),\n            placeholder: \"Detail your character's background, upbringing, significant events...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"attribute-generate-btn\",\n            onClick: () => generateAttribute('background', characterData.background),\n            disabled: generatingAttribute === 'background',\n            title: \"Enhance this background using AI\",\n            children: generatingAttribute === 'background' ? '...' : /*#__PURE__*/_jsxDEV(Wand2, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 63\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Personality\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"textarea-with-generate\",\n          children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n            rows: 4,\n            value: characterData.personality,\n            onChange: e => setCharacterData({\n              ...characterData,\n              personality: e.target.value\n            }),\n            placeholder: \"Describe your character's personality traits, fears, desires...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"attribute-generate-btn\",\n            onClick: () => generateAttribute('personality', characterData.personality),\n            disabled: generatingAttribute === 'personality',\n            title: \"Enhance this personality description using AI\",\n            children: generatingAttribute === 'personality' ? '...' : /*#__PURE__*/_jsxDEV(Wand2, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 64\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Key Relationships\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), characterData.relationships.map((relationship, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relationship-entry\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: relationship.name,\n              onChange: e => updateRelationship(index, 'name', e.target.value),\n              placeholder: \"Person's name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Relationship Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: relationship.relationshipType,\n              onChange: e => updateRelationship(index, 'relationshipType', e.target.value),\n              placeholder: \"e.g., Friend, Lover, Family\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              rows: 3,\n              value: relationship.description,\n              onChange: e => updateRelationship(index, 'description', e.target.value),\n              placeholder: \"Details about this relationship...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"remove-btn\",\n            onClick: () => removeRelationship(index),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"add-btn\",\n          onClick: addRelationship,\n          children: \"Add Relationship\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Additional Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: 4,\n          value: characterData.additionalNotes,\n          onChange: e => setCharacterData({\n            ...characterData,\n            additionalNotes: e.target.value\n          }),\n          placeholder: \"Any other important details about your character...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"save-btn\",\n        children: \"Save Character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(CharacterProfile, \"q+CSgFBHQoL7hqTkWQc5Y9Q6oeg=\");\n_c = CharacterProfile;\nexport default CharacterProfile;\nvar _c;\n$RefreshReg$(_c, \"CharacterProfile\");","map":{"version":3,"names":["React","useState","RefreshCw","Wand2","jsxDEV","_jsxDEV","CharacterProfile","onSave","initialData","geminiService","_s","characterData","setCharacterData","name","age","physicalDescription","background","personality","relationships","additionalNotes","isGenerating","setIsGenerating","generatingAttribute","setGeneratingAttribute","generateRandomCharacter","prompt","response","generateGeneric","jsonString","startIndex","indexOf","endIndex","lastIndexOf","substring","JSON","parse","parseError","console","error","alert","placeholderCharacter","relationshipType","description","message","generateAttribute","attribute","currentValue","prev","addRelationship","updateRelationship","index","field","value","updatedRelationships","removeRelationship","filter","_","i","handleSubmit","e","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","disabled","size","onSubmit","onChange","target","placeholder","rows","title","map","relationship","_c","$RefreshReg$"],"sources":["/Users/ryanmorrison/Code/narrativeforge/src/components/CharacterProfile.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { RefreshCw, Wand2 } from 'lucide-react';\n\nconst CharacterProfile = ({ onSave, initialData, geminiService }) => {\n  const [characterData, setCharacterData] = useState(initialData || {\n    name: '',\n    age: '',\n    physicalDescription: '',\n    background: '',\n    personality: '',\n    relationships: [],\n    additionalNotes: '',\n  });\n\n  // States for tracking generation process\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [generatingAttribute, setGeneratingAttribute] = useState(null);\n\n  // Generate random character using Gemini\n  const generateRandomCharacter = async () => {\n    try {\n      // Show loading state\n      setIsGenerating(true);\n      \n      // If we have Gemini service, use it\n      if (geminiService) {\n        const prompt = `Create a detailed fictional character profile with the following information:\n        - Age (between 18-80)\n        - Detailed physical description (at least 3 paragraphs)\n        - Background and history (at least 3 paragraphs, include childhood, family, and major life events)\n        - Personality traits (include both strengths and flaws)\n        - One key relationship with another character\n        \n        Make the character complex, nuanced, and interesting with a strong narrative potential. Include some unique or unexpected elements.\n        Format your response as a JSON object with the following structure:\n        {\n          \"name\": \"Character's name\",\n          \"age\": \"Character's age\",\n          \"physicalDescription\": \"Detailed physical description\",\n          \"background\": \"Background and history\",\n          \"personality\": \"Personality description\",\n          \"relationships\": [\n            {\n              \"name\": \"Name of related character\",\n              \"relationshipType\": \"Type of relationship\",\n              \"description\": \"Description of the relationship\"\n            }\n          ],\n          \"additionalNotes\": \"Any additional details\"\n        }`;\n        \n        // Call Gemini API\n        const response = await geminiService.generateGeneric(prompt);\n        \n        // Parse the response as JSON (it should be a JSON string)\n        try {\n          // Extract JSON from the response if needed\n          let jsonString = response;\n          // Find the first occurrence of '{' and the last occurrence of '}'\n          const startIndex = response.indexOf('{');\n          const endIndex = response.lastIndexOf('}') + 1;\n          \n          if (startIndex !== -1 && endIndex !== -1) {\n            jsonString = response.substring(startIndex, endIndex);\n          }\n          \n          const characterData = JSON.parse(jsonString);\n          setCharacterData(characterData);\n        } catch (parseError) {\n          console.error('Error parsing Gemini response:', parseError);\n          alert('Failed to parse the AI-generated character. Please try again.');\n        }\n      } else {\n        // Fallback for when Gemini service is not available\n        // Just use some placeholder data\n        const placeholderCharacter = {\n          name: \"Alex Rivera\",\n          age: \"34\",\n          physicalDescription: \"Tall with a lanky build, Alex has olive skin and expressive hazel eyes that crinkle at the corners when they smile. Their dark curly hair is often pulled back in a messy bun, with a few rebellious strands framing a face marked by a prominent nose and a small scar above the left eyebrow from a childhood accident. Alex's hands are those of an artist - long fingers stained with various pigments that never quite wash away completely.\",\n          background: \"Raised in a coastal town by their grandmother after their parents' divorce, Alex found solace in art from an early age. The seaside landscapes became their first subjects, evolving into more abstract expressions as they studied at a small art college on scholarship. After graduation, a series of odd jobs and a brief stint in corporate design led to burnout, prompting Alex to move to a rural area where they converted an old barn into a studio.\",\n          personality: \"Introspective and thoughtful, Alex can appear aloof to strangers but shows deep loyalty to their small circle of friends. They struggle with perfectionism in their art and have periods of intense creativity followed by self-doubt. While generally even-tempered, they can be stubbornly principled about matters of artistic integrity.\",\n          relationships: [\n            {\n              name: \"Jordan Chen\",\n              relationshipType: \"Former partner, now close friend\",\n              description: \"Met in art school, dated for three years before amicably separating. Jordan now runs a gallery in the city and occasionally features Alex's work. Their friendship survived the romantic breakup and evolved into a supportive professional relationship.\"\n            }\n          ],\n          additionalNotes: \"Currently working on a series of installations exploring memory and place. Keeps unusual hours, often working through the night when inspiration strikes. Has a rescue cat named Palette who has one blue eye and one green eye.\"\n        };\n        \n        setCharacterData(placeholderCharacter);\n      }\n    } catch (error) {\n      console.error('Error generating character:', error);\n      alert(`Failed to generate a random character: ${error.message}. Please try again.`);\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n  \n  // Generate specific attribute using Gemini\n  const generateAttribute = async (attribute, currentValue) => {\n    try {\n      // Show loading for this specific attribute\n      setGeneratingAttribute(attribute);\n      \n      // If we have Gemini service, use it\n      if (geminiService) {\n        let prompt;\n        \n        switch(attribute) {\n          case 'physicalDescription':\n            prompt = `Expand and enhance this physical description of a character: \"${currentValue || 'No current description'}\". \n            Write a detailed 2-3 paragraph physical description that includes appearance, clothing style, and distinctive features. \n            If the current description is empty or minimal, create a rich and detailed physical description that would be interesting for a roleplaying character.`;\n            break;\n            \n          case 'background':\n            prompt = `Expand and enhance this character background: \"${currentValue || 'No current background'}\". \n            Write a detailed 3-4 paragraph background that includes childhood, key life events, traumas or achievements, and how these shaped the character. \n            Make it nuanced, emotionally resonant, and with narrative potential. \n            If the current background is empty or minimal, create a rich and detailed backstory that would be interesting for a roleplaying character.`;\n            break;\n            \n          case 'personality':\n            prompt = `Expand and enhance this character personality description: \"${currentValue || 'No current personality'}\". \n            Write a detailed paragraph about the character's personality traits, including both strengths and flaws, emotional tendencies, how they relate to others, and what drives them. \n            If the current description is empty or minimal, create a complex and nuanced personality that would be interesting for a roleplaying character.`;\n            break;\n            \n          default:\n            prompt = `Enhance this text for a character profile: \"${currentValue || 'No current text'}\". \n            Make it more detailed, nuanced, and interesting for a roleplaying character.`;\n        }\n        \n        // Call Gemini API\n        const response = await geminiService.generateGeneric(prompt);\n        \n        // Update the specific attribute\n        setCharacterData(prev => ({\n          ...prev,\n          [attribute]: response\n        }));\n      } else {\n        // Fallback for when Gemini service is not available\n        alert('AI service is not available. Please check your API key or refresh the page to try again.');\n      }\n    } catch (error) {\n      console.error(`Error generating ${attribute}:`, error);\n      alert(`Failed to generate ${attribute}: ${error.message}. Please try again.`);\n    } finally {\n      setGeneratingAttribute(null);\n    }\n  };\n\n  // Add a new relationship field\n  const addRelationship = () => {\n    setCharacterData({\n      ...characterData,\n      relationships: [\n        ...characterData.relationships,\n        { name: '', relationshipType: '', description: '' }\n      ]\n    });\n  };\n\n  // Update relationship field\n  const updateRelationship = (index, field, value) => {\n    const updatedRelationships = [...characterData.relationships];\n    updatedRelationships[index] = {\n      ...updatedRelationships[index],\n      [field]: value\n    };\n    \n    setCharacterData({\n      ...characterData,\n      relationships: updatedRelationships\n    });\n  };\n\n  // Remove a relationship field\n  const removeRelationship = (index) => {\n    const updatedRelationships = characterData.relationships.filter((_, i) => i !== index);\n    setCharacterData({\n      ...characterData,\n      relationships: updatedRelationships\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSave(characterData);\n  };\n\n  return (\n    <div className=\"character-profile-container\">\n      <h2>Character Profile</h2>\n      \n      {/* Random Character Generation */}\n      <div className=\"generation-controls\">\n        <button \n          type=\"button\" \n          className=\"generate-btn\" \n          onClick={generateRandomCharacter}\n          disabled={isGenerating}\n        >\n          {isGenerating ? 'Generating...' : 'Generate Random Character'}\n          <RefreshCw size={18} className={isGenerating ? 'spinning' : ''} />\n        </button>\n      </div>\n      \n      <form onSubmit={handleSubmit}>\n        {/* Basic Info */}\n        <div className=\"form-section\">\n          <h3>Basic Information</h3>\n          <div className=\"form-group\">\n            <label>Name</label>\n            <input\n              type=\"text\"\n              value={characterData.name}\n              onChange={(e) => setCharacterData({...characterData, name: e.target.value})}\n              placeholder=\"Character's name\"\n            />\n          </div>\n          \n          <div className=\"form-group\">\n            <label>Age</label>\n            <input\n              type=\"text\"\n              value={characterData.age}\n              onChange={(e) => setCharacterData({...characterData, age: e.target.value})}\n              placeholder=\"Character's age\"\n            />\n          </div>\n        </div>\n\n        {/* Physical Description */}\n        <div className=\"form-section\">\n          <h3>Physical Description</h3>\n          <div className=\"textarea-with-generate\">\n            <textarea\n              rows={5}\n              value={characterData.physicalDescription}\n              onChange={(e) => setCharacterData({...characterData, physicalDescription: e.target.value})}\n              placeholder=\"Describe your character's physical appearance...\"\n            />\n            <button \n              type=\"button\" \n              className=\"attribute-generate-btn\" \n              onClick={() => generateAttribute('physicalDescription', characterData.physicalDescription)}\n              disabled={generatingAttribute === 'physicalDescription'}\n              title=\"Enhance this description using AI\"\n            >\n              {generatingAttribute === 'physicalDescription' ? '...' : <Wand2 size={16} />}\n            </button>\n          </div>\n        </div>\n\n        {/* Background */}\n        <div className=\"form-section\">\n          <h3>Background & History</h3>\n          <div className=\"textarea-with-generate\">\n            <textarea\n              rows={6}\n              value={characterData.background}\n              onChange={(e) => setCharacterData({...characterData, background: e.target.value})}\n              placeholder=\"Detail your character's background, upbringing, significant events...\"\n            />\n            <button \n              type=\"button\" \n              className=\"attribute-generate-btn\" \n              onClick={() => generateAttribute('background', characterData.background)}\n              disabled={generatingAttribute === 'background'}\n              title=\"Enhance this background using AI\"\n            >\n              {generatingAttribute === 'background' ? '...' : <Wand2 size={16} />}\n            </button>\n          </div>\n        </div>\n\n        {/* Personality */}\n        <div className=\"form-section\">\n          <h3>Personality</h3>\n          <div className=\"textarea-with-generate\">\n            <textarea\n              rows={4}\n              value={characterData.personality}\n              onChange={(e) => setCharacterData({...characterData, personality: e.target.value})}\n              placeholder=\"Describe your character's personality traits, fears, desires...\"\n            />\n            <button \n              type=\"button\" \n              className=\"attribute-generate-btn\" \n              onClick={() => generateAttribute('personality', characterData.personality)}\n              disabled={generatingAttribute === 'personality'}\n              title=\"Enhance this personality description using AI\"\n            >\n              {generatingAttribute === 'personality' ? '...' : <Wand2 size={16} />}\n            </button>\n          </div>\n        </div>\n\n        {/* Relationships */}\n        <div className=\"form-section\">\n          <h3>Key Relationships</h3>\n          {characterData.relationships.map((relationship, index) => (\n            <div className=\"relationship-entry\" key={index}>\n              <div className=\"form-group\">\n                <label>Name</label>\n                <input\n                  type=\"text\"\n                  value={relationship.name}\n                  onChange={(e) => updateRelationship(index, 'name', e.target.value)}\n                  placeholder=\"Person's name\"\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>Relationship Type</label>\n                <input\n                  type=\"text\"\n                  value={relationship.relationshipType}\n                  onChange={(e) => updateRelationship(index, 'relationshipType', e.target.value)}\n                  placeholder=\"e.g., Friend, Lover, Family\"\n                />\n              </div>\n              \n              <div className=\"form-group\">\n                <label>Description</label>\n                <textarea\n                  rows={3}\n                  value={relationship.description}\n                  onChange={(e) => updateRelationship(index, 'description', e.target.value)}\n                  placeholder=\"Details about this relationship...\"\n                />\n              </div>\n              \n              <button \n                type=\"button\" \n                className=\"remove-btn\"\n                onClick={() => removeRelationship(index)}\n              >\n                Remove\n              </button>\n            </div>\n          ))}\n          \n          <button type=\"button\" className=\"add-btn\" onClick={addRelationship}>\n            Add Relationship\n          </button>\n        </div>\n\n        {/* Additional Notes */}\n        <div className=\"form-section\">\n          <h3>Additional Notes</h3>\n          <textarea\n            rows={4}\n            value={characterData.additionalNotes}\n            onChange={(e) => setCharacterData({...characterData, additionalNotes: e.target.value})}\n            placeholder=\"Any other important details about your character...\"\n          />\n        </div>\n\n        <button type=\"submit\" className=\"save-btn\">Save Character</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CharacterProfile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}