{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmorrison/Code/narrativeforge/src/components/SetupWizard/SetupWizard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ArrowLeft, ArrowRight, Sparkles, User, Map, Wand2, CheckCircle } from 'lucide-react';\nimport './SetupWizard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SetupWizard = ({\n  onSave,\n  geminiService,\n  onReset\n}) => {\n  _s();\n  // Steps in the wizard\n  const STEPS = {\n    WELCOME: 'welcome',\n    CHARACTER_BASIC: 'character_basic',\n    CHARACTER_DETAIL: 'character_detail',\n    CHARACTER_RELATIONSHIPS: 'character_relationships',\n    SCENARIO_BASIC: 'scenario_basic',\n    SCENARIO_SETTING: 'scenario_setting',\n    SCENARIO_CHARACTERS: 'scenario_characters',\n    SCENARIO_GOALS: 'scenario_goals',\n    REVIEW: 'review'\n  };\n\n  // Main state\n  const [currentStep, setCurrentStep] = useState(STEPS.WELCOME);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [generatingField, setGeneratingField] = useState(null);\n\n  // State for character and scenario data\n  const [characterData, setCharacterData] = useState({\n    name: '',\n    age: '',\n    physicalDescription: '',\n    background: '',\n    personality: '',\n    relationships: [],\n    additionalNotes: ''\n  });\n  const [scenarioData, setScenarioData] = useState({\n    title: '',\n    setting: {\n      location: '',\n      time: '',\n      atmosphere: ''\n    },\n    initialSituation: '',\n    otherCharacters: [],\n    narrativeGoals: '',\n    toneAndThemes: '',\n    roleplayInstructions: ''\n  });\n\n  // Generate a random character\n  const generateRandomCharacter = async () => {\n    try {\n      setIsGenerating(true);\n      if (!geminiService) {\n        alert('AI service is not available. Please check your API key in settings.');\n        return;\n      }\n      const prompt = `Create a detailed fictional character profile with the following information:\n      - Name (full name)\n      - Age (between 18-80)\n      - Detailed physical description (at least 2 paragraphs)\n      - Background and history (at least 2 paragraphs, include childhood, family, and major life events)\n      - Personality traits (include both strengths and flaws)\n      - One key relationship with another character\n      \n      Make the character complex, nuanced, and interesting with strong narrative potential.\n      \n      IMPORTANT: Return ONLY a valid JSON object with NO additional text, following this structure:\n      {\n        \"name\": \"Character's name\",\n        \"age\": \"Character's age (as a number)\",\n        \"physicalDescription\": \"Detailed physical description\",\n        \"background\": \"Background and history\",\n        \"personality\": \"Personality description\",\n        \"relationships\": [\n          {\n            \"name\": \"Name of related character\",\n            \"relationshipType\": \"Type of relationship\",\n            \"description\": \"Description of the relationship\"\n          }\n        ],\n        \"additionalNotes\": \"Any additional details\"\n      }`;\n      const response = await geminiService.generateGeneric(prompt);\n      try {\n        // Try to parse the JSON directly first\n        let jsonData;\n        try {\n          jsonData = JSON.parse(response.trim());\n        } catch (e) {\n          // Fallback to regex extraction if direct parsing fails\n          const jsonRegex = /\\{[\\s\\S]*\\}/g;\n          const matches = response.match(jsonRegex);\n          if (matches && matches.length > 0) {\n            const jsonString = matches[0];\n            jsonData = JSON.parse(jsonString);\n          } else {\n            throw new Error('Could not extract valid JSON from response');\n          }\n        }\n\n        // Ensure relationships is an array\n        if (!Array.isArray(jsonData.relationships)) {\n          jsonData.relationships = [];\n        }\n\n        // Verify name exists, set a default if missing\n        if (!jsonData.name || jsonData.name.trim() === '') {\n          jsonData.name = \"Unnamed Character\";\n        }\n        setCharacterData(jsonData);\n      } catch (error) {\n        console.error('Error processing character data:', error);\n        console.log('Raw response:', response);\n        alert('Could not process AI-generated character. Please try again or create manually.');\n      }\n    } catch (error) {\n      console.error('Error generating character:', error);\n      alert('Could not generate character. Please try again or continue with manual entry.');\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  // Generate a random scenario\n  const generateRandomScenario = async () => {\n    try {\n      setIsGenerating(true);\n      if (!geminiService) {\n        alert('AI service is not available. Please check your API key in settings.');\n        return;\n      }\n      const prompt = `Create a detailed roleplay scenario with the following information:\n      - Title (creative and evocative)\n      - Setting (including location, time period, and atmosphere)\n      - Initial situation (the starting point for the roleplay)\n      - Other characters (at least 1-2 characters with descriptions)\n      - Narrative goals (what the scenario aims to explore)\n      - Tone and themes (emotional tone and thematic elements)\n      \n      Make the scenario compelling, rich with potential for character development, and interesting to explore.\n      \n      IMPORTANT: Return ONLY a valid JSON object with NO additional text, following this structure:\n      {\n        \"title\": \"Scenario title\",\n        \"setting\": {\n          \"location\": \"Description of the location\",\n          \"time\": \"Time period or specific time\",\n          \"atmosphere\": \"Mood and atmosphere of the setting\"\n        },\n        \"initialSituation\": \"Detailed description of the starting situation\",\n        \"otherCharacters\": [\n          {\n            \"name\": \"Character name\",\n            \"role\": \"Character's role in the scenario\",\n            \"description\": \"Physical and personality description\",\n            \"relationship\": \"Relationship to the protagonist\"\n          }\n        ],\n        \"narrativeGoals\": \"What the scenario aims to explore or accomplish\",\n        \"toneAndThemes\": \"Emotional tone and thematic elements\"\n      }`;\n      const response = await geminiService.generateGeneric(prompt);\n      try {\n        // Try to parse the JSON directly first\n        let jsonData;\n        try {\n          jsonData = JSON.parse(response.trim());\n        } catch (e) {\n          // Fallback to regex extraction if direct parsing fails\n          const jsonRegex = /\\{[\\s\\S]*\\}/g;\n          const matches = response.match(jsonRegex);\n          if (matches && matches.length > 0) {\n            const jsonString = matches[0];\n            jsonData = JSON.parse(jsonString);\n          } else {\n            throw new Error('Could not extract valid JSON from response');\n          }\n        }\n\n        // Ensure required fields exist\n        if (!jsonData.setting || typeof jsonData.setting !== 'object') {\n          jsonData.setting = {\n            location: '',\n            time: '',\n            atmosphere: ''\n          };\n        }\n        if (!Array.isArray(jsonData.otherCharacters)) {\n          jsonData.otherCharacters = [];\n        }\n\n        // Verify title exists, set a default if missing\n        if (!jsonData.title || jsonData.title.trim() === '') {\n          jsonData.title = \"Untitled Scenario\";\n        }\n        setScenarioData(jsonData);\n      } catch (error) {\n        console.error('Error processing scenario data:', error);\n        console.log('Raw response:', response);\n        alert('Could not process AI-generated scenario. Please try again or create manually.');\n      }\n    } catch (error) {\n      console.error('Error generating scenario:', error);\n      alert('Could not generate scenario. Please try again or continue with manual entry.');\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  // Generate a specific field using AI\n  const generateField = async (type, field, currentValue = '') => {\n    var _scenarioData$setting, _scenarioData$setting2;\n    try {\n      setGeneratingField(field);\n      if (!geminiService) {\n        alert('AI service is not available. Please check your API key in settings.');\n        return;\n      }\n      let prompt;\n      switch (field) {\n        case 'physical_description':\n          prompt = `Write a detailed 2-paragraph physical description for a character named ${characterData.name || 'the protagonist'}.\n          Include appearance, style, distinctive features, and mannerisms.\n          Return only the description with no introduction or explanation.`;\n          break;\n        case 'background':\n          prompt = `Write a detailed 2-paragraph background for a character named ${characterData.name || 'the protagonist'}, age ${characterData.age || 'adult'}.\n          Include childhood, key life events, education, career, and formative experiences.\n          Return only the background with no introduction or explanation.`;\n          break;\n        case 'personality':\n          prompt = `Write a detailed paragraph about the personality of a character named ${characterData.name || 'the protagonist'}.\n          Include traits, strengths, flaws, values, and behaviors.\n          Return only the personality description with no introduction or explanation.`;\n          break;\n        case 'initial_situation':\n          prompt = `Write a detailed paragraph about the initial situation for a scenario called \"${scenarioData.title || 'The Scenario'}\".\n          The location is ${((_scenarioData$setting = scenarioData.setting) === null || _scenarioData$setting === void 0 ? void 0 : _scenarioData$setting.location) || 'unspecified'} and the time is ${((_scenarioData$setting2 = scenarioData.setting) === null || _scenarioData$setting2 === void 0 ? void 0 : _scenarioData$setting2.time) || 'present day'}.\n          Describe what is happening at the start of the roleplay, the protagonist's current state, and the immediate dramatic situation.\n          Return only the initial situation with no introduction or explanation.`;\n          break;\n        case 'narrative_goals':\n          prompt = `Write a paragraph about the narrative goals for a scenario called \"${scenarioData.title || 'The Scenario'}\".\n          What is the protagonist trying to achieve? What themes will be explored? What character development might occur?\n          Return only the narrative goals with no introduction or explanation.`;\n          break;\n        default:\n          prompt = `Enhance this text for a roleplay scenario: \"${currentValue || 'No current text'}\"\n          Make it more detailed, engaging, and dramatically interesting.\n          Return only the enhanced text with no introduction or explanation.`;\n      }\n      const response = await geminiService.generateGeneric(prompt);\n\n      // Clean up the response - remove any AI explanations\n      const cleanedResponse = response.replace(/^(here('s| is) (the |an |a )?(expanded|enhanced|detailed|improved).*?:\\s*)/i, '').replace(/^(I('ve| have) (expanded|enhanced|created).*?:\\s*)/i, '').replace(/^(As requested.*?:\\s*)/i, '').trim();\n\n      // Update the appropriate state\n      if (type === 'character') {\n        setCharacterData(prev => {\n          const newData = {\n            ...prev\n          };\n          switch (field) {\n            case 'physical_description':\n              newData.physicalDescription = cleanedResponse;\n              break;\n            case 'background':\n              newData.background = cleanedResponse;\n              break;\n            case 'personality':\n              newData.personality = cleanedResponse;\n              break;\n            default:\n              break;\n          }\n          return newData;\n        });\n      } else if (type === 'scenario') {\n        setScenarioData(prev => {\n          const newData = {\n            ...prev\n          };\n          switch (field) {\n            case 'initial_situation':\n              newData.initialSituation = cleanedResponse;\n              break;\n            case 'narrative_goals':\n              newData.narrativeGoals = cleanedResponse;\n              break;\n            default:\n              break;\n          }\n          return newData;\n        });\n      }\n    } catch (error) {\n      console.error(`Error generating ${field}:`, error);\n      alert(`Could not generate ${field}. Please try again or continue with manual entry.`);\n    } finally {\n      setGeneratingField(null);\n    }\n  };\n\n  // Add a relationship to the character\n  const addRelationship = () => {\n    setCharacterData(prev => {\n      const relationships = Array.isArray(prev.relationships) ? [...prev.relationships] : [];\n      relationships.push({\n        name: '',\n        relationshipType: '',\n        description: ''\n      });\n      return {\n        ...prev,\n        relationships\n      };\n    });\n  };\n\n  // Update a relationship\n  const updateRelationship = (index, field, value) => {\n    setCharacterData(prev => {\n      const relationships = Array.isArray(prev.relationships) ? [...prev.relationships] : [];\n      if (relationships[index]) {\n        relationships[index] = {\n          ...relationships[index],\n          [field]: value\n        };\n      }\n      return {\n        ...prev,\n        relationships\n      };\n    });\n  };\n\n  // Remove a relationship\n  const removeRelationship = index => {\n    setCharacterData(prev => {\n      const relationships = Array.isArray(prev.relationships) ? [...prev.relationships] : [];\n      return {\n        ...prev,\n        relationships: relationships.filter((_, i) => i !== index)\n      };\n    });\n  };\n\n  // Add a character to the scenario\n  const addScenarioCharacter = () => {\n    setScenarioData(prev => {\n      const characters = Array.isArray(prev.otherCharacters) ? [...prev.otherCharacters] : [];\n      characters.push({\n        name: '',\n        role: '',\n        description: '',\n        relationship: ''\n      });\n      return {\n        ...prev,\n        otherCharacters: characters\n      };\n    });\n  };\n\n  // Update a scenario character\n  const updateScenarioCharacter = (index, field, value) => {\n    setScenarioData(prev => {\n      const characters = Array.isArray(prev.otherCharacters) ? [...prev.otherCharacters] : [];\n      if (characters[index]) {\n        characters[index] = {\n          ...characters[index],\n          [field]: value\n        };\n      }\n      return {\n        ...prev,\n        otherCharacters: characters\n      };\n    });\n  };\n\n  // Remove a scenario character\n  const removeScenarioCharacter = index => {\n    setScenarioData(prev => {\n      const characters = Array.isArray(prev.otherCharacters) ? [...prev.otherCharacters] : [];\n      return {\n        ...prev,\n        otherCharacters: characters.filter((_, i) => i !== index)\n      };\n    });\n  };\n\n  // Move to the next step\n  const nextStep = () => {\n    switch (currentStep) {\n      case STEPS.WELCOME:\n        setCurrentStep(STEPS.CHARACTER_BASIC);\n        break;\n      case STEPS.CHARACTER_BASIC:\n        setCurrentStep(STEPS.CHARACTER_DETAIL);\n        break;\n      case STEPS.CHARACTER_DETAIL:\n        setCurrentStep(STEPS.CHARACTER_RELATIONSHIPS);\n        break;\n      case STEPS.CHARACTER_RELATIONSHIPS:\n        setCurrentStep(STEPS.SCENARIO_BASIC);\n        break;\n      case STEPS.SCENARIO_BASIC:\n        setCurrentStep(STEPS.SCENARIO_SETTING);\n        break;\n      case STEPS.SCENARIO_SETTING:\n        setCurrentStep(STEPS.SCENARIO_CHARACTERS);\n        break;\n      case STEPS.SCENARIO_CHARACTERS:\n        setCurrentStep(STEPS.SCENARIO_GOALS);\n        break;\n      case STEPS.SCENARIO_GOALS:\n        setCurrentStep(STEPS.REVIEW);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Move to the previous step\n  const prevStep = () => {\n    switch (currentStep) {\n      case STEPS.CHARACTER_BASIC:\n        setCurrentStep(STEPS.WELCOME);\n        break;\n      case STEPS.CHARACTER_DETAIL:\n        setCurrentStep(STEPS.CHARACTER_BASIC);\n        break;\n      case STEPS.CHARACTER_RELATIONSHIPS:\n        setCurrentStep(STEPS.CHARACTER_DETAIL);\n        break;\n      case STEPS.SCENARIO_BASIC:\n        setCurrentStep(STEPS.CHARACTER_RELATIONSHIPS);\n        break;\n      case STEPS.SCENARIO_SETTING:\n        setCurrentStep(STEPS.SCENARIO_BASIC);\n        break;\n      case STEPS.SCENARIO_CHARACTERS:\n        setCurrentStep(STEPS.SCENARIO_SETTING);\n        break;\n      case STEPS.SCENARIO_GOALS:\n        setCurrentStep(STEPS.SCENARIO_CHARACTERS);\n        break;\n      case STEPS.REVIEW:\n        setCurrentStep(STEPS.SCENARIO_GOALS);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Complete the wizard and save data\n  const completeWizard = () => {\n    if (typeof onSave === 'function') {\n      onSave(characterData, scenarioData);\n    } else {\n      console.error('onSave function not provided');\n    }\n  };\n\n  // Check if current step is valid and can proceed\n  const canProceed = () => {\n    switch (currentStep) {\n      case STEPS.CHARACTER_BASIC:\n        return Boolean(characterData.name && characterData.age);\n      case STEPS.SCENARIO_BASIC:\n        return Boolean(scenarioData.title);\n      default:\n        return true;\n    }\n  };\n\n  // Render the welcome step\n  const renderWelcomeStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wizard-step-content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-welcome\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Character & Scenario Creation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to the guided setup process! We'll walk you through creating your character and scenario step by step.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wizard-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Start from Scratch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Create your character and scenario step by step with our guided process.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 472,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"wizard-option-btn\",\n            onClick: nextStep,\n            type: \"button\",\n            children: [\"Start Fresh \", /*#__PURE__*/_jsxDEV(ArrowRight, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wizard-option-separator\",\n          children: \"OR\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wizard-option\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Generate with AI\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Let AI create a complete character and scenario for you to customize.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wizard-option-buttons\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"wizard-option-btn wizard-generate-btn\",\n              onClick: () => {\n                generateRandomCharacter();\n                generateRandomScenario();\n                setCurrentStep(STEPS.REVIEW);\n              },\n              disabled: isGenerating,\n              type: \"button\",\n              children: [isGenerating ? 'Generating...' : 'Generate Both', /*#__PURE__*/_jsxDEV(Sparkles, {\n                size: 16,\n                className: isGenerating ? 'spinning' : ''\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 495,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 483,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 464,\n    columnNumber: 5\n  }, this);\n\n  // Render the character basic info step\n  const renderCharacterBasicStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wizard-step-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Basic Character Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"character-name\",\n        children: \"Character Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 510,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"character-name\",\n        type: \"text\",\n        value: characterData.name || '',\n        onChange: e => setCharacterData({\n          ...characterData,\n          name: e.target.value\n        }),\n        placeholder: \"Enter your character's name\",\n        className: \"wizard-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 511,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"character-age\",\n        children: \"Character Age\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 522,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"character-age\",\n        type: \"text\",\n        value: characterData.age || '',\n        onChange: e => setCharacterData({\n          ...characterData,\n          age: e.target.value\n        }),\n        placeholder: \"How old is your character?\",\n        className: \"wizard-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 521,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-ai-suggestion\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"wizard-ai-btn\",\n        onClick: generateRandomCharacter,\n        disabled: isGenerating,\n        type: \"button\",\n        children: [/*#__PURE__*/_jsxDEV(Wand2, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 11\n        }, this), \"Generate Random Character\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"AI will create a complete character profile that you can customize.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 533,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 506,\n    columnNumber: 5\n  }, this);\n\n  // Render the character details step\n  const renderCharacterDetailStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wizard-step-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Character Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 551,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-label-with-ai\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"physical-description\",\n          children: \"Physical Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"wizard-generate-field\",\n          onClick: () => generateField('character', 'physical_description', characterData.physicalDescription),\n          disabled: generatingField === 'physical_description',\n          type: \"button\",\n          children: generatingField === 'physical_description' ? 'Generating...' : /*#__PURE__*/_jsxDEV(Wand2, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 77\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"physical-description\",\n        rows: 3,\n        value: characterData.physicalDescription || '',\n        onChange: e => setCharacterData({\n          ...characterData,\n          physicalDescription: e.target.value\n        }),\n        placeholder: \"Describe your character's appearance, style, and physical traits...\",\n        className: \"wizard-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 565,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 553,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-label-with-ai\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"background\",\n          children: \"Background & History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"wizard-generate-field\",\n          onClick: () => generateField('character', 'background', characterData.background),\n          disabled: generatingField === 'background',\n          type: \"button\",\n          children: generatingField === 'background' ? 'Generating...' : /*#__PURE__*/_jsxDEV(Wand2, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"background\",\n        rows: 4,\n        value: characterData.background || '',\n        onChange: e => setCharacterData({\n          ...characterData,\n          background: e.target.value\n        }),\n        placeholder: \"Describe your character's background, history, and key life events...\",\n        className: \"wizard-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-label-with-ai\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"personality\",\n          children: \"Personality\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"wizard-generate-field\",\n          onClick: () => generateField('character', 'personality', characterData.personality),\n          disabled: generatingField === 'personality',\n          type: \"button\",\n          children: generatingField === 'personality' ? 'Generating...' : /*#__PURE__*/_jsxDEV(Wand2, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 68\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"personality\",\n        rows: 3,\n        value: characterData.personality || '',\n        onChange: e => setCharacterData({\n          ...characterData,\n          personality: e.target.value\n        }),\n        placeholder: \"Describe your character's personality traits, flaws, and behaviors...\",\n        className: \"wizard-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 550,\n    columnNumber: 5\n  }, this);\n\n  // Render the character relationships step\n  const renderCharacterRelationshipsStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wizard-step-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Character Relationships\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"wizard-step-description\",\n      children: \"Define key relationships that will impact your character in the scenario.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 7\n    }, this), (!characterData.relationships || characterData.relationships.length === 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-empty-state\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No relationships added yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 630,\n      columnNumber: 9\n    }, this), characterData.relationships && characterData.relationships.map((relationship, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-relationship-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: relationship.name || '',\n          onChange: e => updateRelationship(index, 'name', e.target.value),\n          placeholder: \"Person's name\",\n          className: \"wizard-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Relationship Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 649,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: relationship.relationshipType || '',\n          onChange: e => updateRelationship(index, 'relationshipType', e.target.value),\n          placeholder: \"e.g., Friend, Lover, Family, Rival\",\n          className: \"wizard-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 650,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 648,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: 2,\n          value: relationship.description || '',\n          onChange: e => updateRelationship(index, 'description', e.target.value),\n          placeholder: \"Details about this relationship...\",\n          className: \"wizard-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 661,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 659,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"wizard-remove-btn\",\n        onClick: () => removeRelationship(index),\n        type: \"button\",\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 636,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"wizard-add-btn\",\n      onClick: addRelationship,\n      type: \"button\",\n      children: \"Add Relationship\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 623,\n    columnNumber: 5\n  }, this);\n\n  // Render the scenario basic info step\n  const renderScenarioBasicStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wizard-step-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Basic Scenario Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"scenario-title\",\n        children: \"Scenario Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"scenario-title\",\n        type: \"text\",\n        value: scenarioData.title || '',\n        onChange: e => setScenarioData({\n          ...scenarioData,\n          title: e.target.value\n        }),\n        placeholder: \"Give your scenario a meaningful title\",\n        className: \"wizard-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 693,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 691,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-label-with-ai\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"initial-situation\",\n          children: \"Initial Situation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 705,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"wizard-generate-field\",\n          onClick: () => generateField('scenario', 'initial_situation', scenarioData.initialSituation),\n          disabled: generatingField === 'initial_situation',\n          type: \"button\",\n          children: generatingField === 'initial_situation' ? 'Generating...' : /*#__PURE__*/_jsxDEV(Wand2, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 74\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 704,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"initial-situation\",\n        rows: 4,\n        value: scenarioData.initialSituation || '',\n        onChange: e => setScenarioData({\n          ...scenarioData,\n          initialSituation: e.target.value\n        }),\n        placeholder: \"Describe the situation at the start of your scenario. What has just happened? What state is your character in?\",\n        className: \"wizard-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-ai-suggestion\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"wizard-ai-btn\",\n        onClick: generateRandomScenario,\n        disabled: isGenerating,\n        type: \"button\",\n        children: [/*#__PURE__*/_jsxDEV(Wand2, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 732,\n          columnNumber: 11\n        }, this), \"Generate Random Scenario\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        children: \"AI will create a complete scenario that you can customize.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 688,\n    columnNumber: 5\n  }, this);\n\n  // Render the scenario setting step\n  const renderScenarioSettingStep = () => {\n    // Safely access setting properties\n    const setting = scenarioData.setting || {};\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-step-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Scenario Setting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"setting-location\",\n          children: \"Location\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"setting-location\",\n          type: \"text\",\n          value: setting.location || '',\n          onChange: e => setScenarioData({\n            ...scenarioData,\n            setting: {\n              ...setting,\n              location: e.target.value\n            }\n          }),\n          placeholder: \"Where does the scenario take place?\",\n          className: \"wizard-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 751,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"setting-time\",\n          children: \"Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 765,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"setting-time\",\n          type: \"text\",\n          value: setting.time || '',\n          onChange: e => setScenarioData({\n            ...scenarioData,\n            setting: {\n              ...setting,\n              time: e.target.value\n            }\n          }),\n          placeholder: \"When does the scenario take place? (time of day, year, era)\",\n          className: \"wizard-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 766,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"setting-atmosphere\",\n          children: \"Atmosphere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"setting-atmosphere\",\n          type: \"text\",\n          value: setting.atmosphere || '',\n          onChange: e => setScenarioData({\n            ...scenarioData,\n            setting: {\n              ...setting,\n              atmosphere: e.target.value\n            }\n          }),\n          placeholder: \"Describe the mood/atmosphere of the setting\",\n          className: \"wizard-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 781,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 746,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Render the scenario characters step\n  const renderScenarioCharactersStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wizard-step-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Other Characters in Scenario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 800,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"wizard-step-description\",\n      children: \"Define other characters that will appear in your scenario.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 7\n    }, this), (!scenarioData.otherCharacters || scenarioData.otherCharacters.length === 0) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-empty-state\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No additional characters added yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 806,\n      columnNumber: 9\n    }, this), scenarioData.otherCharacters && scenarioData.otherCharacters.map((character, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-character-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: character.name || '',\n          onChange: e => updateScenarioCharacter(index, 'name', e.target.value),\n          placeholder: \"Character's name\",\n          className: \"wizard-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Role\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: character.role || '',\n          onChange: e => updateScenarioCharacter(index, 'role', e.target.value),\n          placeholder: \"e.g., Antagonist, Ally, Mentor\",\n          className: \"wizard-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: 2,\n          value: character.description || '',\n          onChange: e => updateScenarioCharacter(index, 'description', e.target.value),\n          placeholder: \"Physical and personality description...\",\n          className: \"wizard-textarea\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 837,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Relationship to Main Character\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: character.relationship || '',\n          onChange: e => updateScenarioCharacter(index, 'relationship', e.target.value),\n          placeholder: \"How do they relate to your character?\",\n          className: \"wizard-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"wizard-remove-btn\",\n        onClick: () => removeScenarioCharacter(index),\n        type: \"button\",\n        children: \"Remove\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"wizard-add-btn\",\n      onClick: addScenarioCharacter,\n      type: \"button\",\n      children: \"Add Character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 867,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 799,\n    columnNumber: 5\n  }, this);\n\n  // Render the scenario goals step\n  const renderScenarioGoalsStep = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wizard-step-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Narrative Goals & Themes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 876,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-label-with-ai\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"narrative-goals\",\n          children: \"Narrative Goals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"wizard-generate-field\",\n          onClick: () => generateField('scenario', 'narrative_goals', scenarioData.narrativeGoals),\n          disabled: generatingField === 'narrative_goals',\n          type: \"button\",\n          children: generatingField === 'narrative_goals' ? 'Generating...' : /*#__PURE__*/_jsxDEV(Wand2, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 72\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 879,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"narrative-goals\",\n        rows: 3,\n        value: scenarioData.narrativeGoals || '',\n        onChange: e => setScenarioData({\n          ...scenarioData,\n          narrativeGoals: e.target.value\n        }),\n        placeholder: \"What are you hoping to explore in this scenario? What character development or themes are you interested in?\",\n        className: \"wizard-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 890,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 878,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"tone-themes\",\n        children: \"Tone and Themes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"tone-themes\",\n        rows: 3,\n        value: scenarioData.toneAndThemes || '',\n        onChange: e => setScenarioData({\n          ...scenarioData,\n          toneAndThemes: e.target.value\n        }),\n        placeholder: \"What is the emotional tone of this scenario? What themes should be emphasized?\",\n        className: \"wizard-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"roleplay-instructions\",\n        children: \"Roleplay Instructions (Optional)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"roleplay-instructions\",\n        rows: 3,\n        value: scenarioData.roleplayInstructions || '',\n        onChange: e => setScenarioData({\n          ...scenarioData,\n          roleplayInstructions: e.target.value\n        }),\n        placeholder: \"Any specific instructions for the AI in this roleplay? (Optional)\",\n        className: \"wizard-textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 914,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 875,\n    columnNumber: 5\n  }, this);\n\n  // Render the review step\n  const renderReviewStep = () => {\n    // Safely access setting properties\n    const setting = scenarioData.setting || {};\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-step-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Review Your Setup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"wizard-step-description\",\n        children: \"Review your character and scenario details before starting your roleplay.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-review-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"wizard-review-heading\",\n          children: [/*#__PURE__*/_jsxDEV(User, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 940,\n            columnNumber: 13\n          }, this), \"Character: \", characterData.name || 'Unnamed']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 939,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wizard-review-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Age:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 944,\n              columnNumber: 16\n            }, this), \" \", characterData.age || 'Not specified']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 944,\n            columnNumber: 13\n          }, this), characterData.physicalDescription && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wizard-review-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Physical Description:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 948,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"wizard-review-text\",\n              children: characterData.physicalDescription\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 949,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 947,\n            columnNumber: 15\n          }, this), characterData.background && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wizard-review-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Background:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 955,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"wizard-review-text\",\n              children: characterData.background\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 956,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 954,\n            columnNumber: 15\n          }, this), characterData.personality && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wizard-review-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Personality:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 962,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"wizard-review-text\",\n              children: characterData.personality\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 963,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 961,\n            columnNumber: 15\n          }, this), characterData.relationships && characterData.relationships.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wizard-review-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Relationships:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 969,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"wizard-review-list\",\n              children: characterData.relationships.map((relationship, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: relationship.name || 'Unnamed'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 973,\n                  columnNumber: 23\n                }, this), relationship.relationshipType ? ` (${relationship.relationshipType})` : '', \":\", relationship.description || 'No description']\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 972,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wizard-regenerate-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"wizard-regenerate-btn\",\n              onClick: generateRandomCharacter,\n              disabled: isGenerating,\n              type: \"button\",\n              children: [isGenerating ? 'Regenerating...' : 'Regenerate Character', isGenerating && /*#__PURE__*/_jsxDEV(RefreshCw, {\n                size: 16,\n                className: \"spinning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 990,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 983,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 938,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-review-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"wizard-review-heading\",\n          children: [/*#__PURE__*/_jsxDEV(Map, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 998,\n            columnNumber: 13\n          }, this), \"Scenario: \", scenarioData.title || 'Untitled']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 997,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wizard-review-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wizard-review-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Setting:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1003,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [setting.location && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Location:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1006,\n                  columnNumber: 25\n                }, this), \" \", setting.location, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1006,\n                columnNumber: 19\n              }, this), setting.time && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Time:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1009,\n                  columnNumber: 25\n                }, this), \" \", setting.time, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1009,\n                columnNumber: 19\n              }, this), setting.atmosphere && /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Atmosphere:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1012,\n                  columnNumber: 25\n                }, this), \" \", setting.atmosphere]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1012,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1004,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1002,\n            columnNumber: 13\n          }, this), scenarioData.initialSituation && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wizard-review-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Initial Situation:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1019,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"wizard-review-text\",\n              children: scenarioData.initialSituation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1020,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1018,\n            columnNumber: 15\n          }, this), scenarioData.otherCharacters && scenarioData.otherCharacters.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wizard-review-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Other Characters:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1026,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"wizard-review-list\",\n              children: scenarioData.otherCharacters.map((character, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: character.name || 'Unnamed'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1030,\n                  columnNumber: 23\n                }, this), character.role ? ` (${character.role})` : '', \":\", character.description || 'No description']\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1029,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1027,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 15\n          }, this), scenarioData.narrativeGoals && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wizard-review-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Narrative Goals:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1041,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"wizard-review-text\",\n              children: scenarioData.narrativeGoals\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1042,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1040,\n            columnNumber: 15\n          }, this), scenarioData.toneAndThemes && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wizard-review-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Tone and Themes:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1048,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"wizard-review-text\",\n              children: scenarioData.toneAndThemes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1049,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1047,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wizard-regenerate-actions\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"wizard-regenerate-btn\",\n              onClick: generateRandomScenario,\n              disabled: isGenerating,\n              type: \"button\",\n              children: [isGenerating ? 'Regenerating...' : 'Regenerate Scenario', isGenerating && /*#__PURE__*/_jsxDEV(RefreshCw, {\n                size: 16,\n                className: \"spinning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1061,\n                columnNumber: 34\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1054,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1053,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1001,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 996,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-complete\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"wizard-complete-btn\",\n          onClick: completeWizard,\n          type: \"button\",\n          children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1069,\n            columnNumber: 13\n          }, this), \"Start Roleplay\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1068,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1067,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 932,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Get the content for the current step\n  const getStepContent = () => {\n    switch (currentStep) {\n      case STEPS.WELCOME:\n        return renderWelcomeStep();\n      case STEPS.CHARACTER_BASIC:\n        return renderCharacterBasicStep();\n      case STEPS.CHARACTER_DETAIL:\n        return renderCharacterDetailStep();\n      case STEPS.CHARACTER_RELATIONSHIPS:\n        return renderCharacterRelationshipsStep();\n      case STEPS.SCENARIO_BASIC:\n        return renderScenarioBasicStep();\n      case STEPS.SCENARIO_SETTING:\n        return renderScenarioSettingStep();\n      case STEPS.SCENARIO_CHARACTERS:\n        return renderScenarioCharactersStep();\n      case STEPS.SCENARIO_GOALS:\n        return renderScenarioGoalsStep();\n      case STEPS.REVIEW:\n        return renderReviewStep();\n      default:\n        return null;\n    }\n  };\n\n  // Get the progress percentage\n  const getProgressPercentage = () => {\n    const stepsCount = Object.keys(STEPS).length;\n    let currentStepIndex = 1; // Default to first step\n\n    // Find the current step index\n    Object.values(STEPS).forEach((step, index) => {\n      if (step === currentStep) {\n        currentStepIndex = index + 1;\n      }\n    });\n    return currentStepIndex / stepsCount * 100;\n  };\n\n  // Get the step label\n  const getStepLabel = () => {\n    switch (currentStep) {\n      case STEPS.WELCOME:\n        return 'Welcome';\n      case STEPS.CHARACTER_BASIC:\n        return 'Character Basics';\n      case STEPS.CHARACTER_DETAIL:\n        return 'Character Details';\n      case STEPS.CHARACTER_RELATIONSHIPS:\n        return 'Character Relationships';\n      case STEPS.SCENARIO_BASIC:\n        return 'Scenario Basics';\n      case STEPS.SCENARIO_SETTING:\n        return 'Scenario Setting';\n      case STEPS.SCENARIO_CHARACTERS:\n        return 'Scenario Characters';\n      case STEPS.SCENARIO_GOALS:\n        return 'Narrative Goals';\n      case STEPS.REVIEW:\n        return 'Review';\n      default:\n        return '';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"setup-wizard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-btn\",\n        onClick: onReset,\n        type: \"button\",\n        children: \"Start Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wizard-progress\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wizard-progress-label\",\n          children: getStepLabel()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wizard-progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wizard-progress-fill\",\n            style: {\n              width: `${getProgressPercentage()}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1157,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-container\",\n      children: getStepContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1165,\n      columnNumber: 7\n    }, this), currentStep !== STEPS.WELCOME && currentStep !== STEPS.REVIEW && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wizard-navigation\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"wizard-nav-btn wizard-prev-btn\",\n        onClick: prevStep,\n        type: \"button\",\n        children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1176,\n          columnNumber: 13\n        }, this), \"Previous\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"wizard-nav-btn wizard-next-btn\",\n        onClick: nextStep,\n        disabled: !canProceed(),\n        type: \"button\",\n        children: [\"Next\", /*#__PURE__*/_jsxDEV(ArrowRight, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1180,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1170,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1145,\n    columnNumber: 5\n  }, this);\n};\n_s(SetupWizard, \"1uF4JHLJ8RlgDkVeuk7sjl41rcI=\");\n_c = SetupWizard;\nexport default SetupWizard;\nvar _c;\n$RefreshReg$(_c, \"SetupWizard\");","map":{"version":3,"names":["React","useState","ArrowLeft","ArrowRight","Sparkles","User","Map","Wand2","CheckCircle","jsxDEV","_jsxDEV","SetupWizard","onSave","geminiService","onReset","_s","STEPS","WELCOME","CHARACTER_BASIC","CHARACTER_DETAIL","CHARACTER_RELATIONSHIPS","SCENARIO_BASIC","SCENARIO_SETTING","SCENARIO_CHARACTERS","SCENARIO_GOALS","REVIEW","currentStep","setCurrentStep","isGenerating","setIsGenerating","generatingField","setGeneratingField","characterData","setCharacterData","name","age","physicalDescription","background","personality","relationships","additionalNotes","scenarioData","setScenarioData","title","setting","location","time","atmosphere","initialSituation","otherCharacters","narrativeGoals","toneAndThemes","roleplayInstructions","generateRandomCharacter","alert","prompt","response","generateGeneric","jsonData","JSON","parse","trim","e","jsonRegex","matches","match","length","jsonString","Error","Array","isArray","error","console","log","generateRandomScenario","generateField","type","field","currentValue","_scenarioData$setting","_scenarioData$setting2","cleanedResponse","replace","prev","newData","addRelationship","push","relationshipType","description","updateRelationship","index","value","removeRelationship","filter","_","i","addScenarioCharacter","characters","role","relationship","updateScenarioCharacter","removeScenarioCharacter","nextStep","prevStep","completeWizard","canProceed","Boolean","renderWelcomeStep","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","disabled","renderCharacterBasicStep","htmlFor","id","onChange","target","placeholder","renderCharacterDetailStep","rows","renderCharacterRelationshipsStep","map","renderScenarioBasicStep","renderScenarioSettingStep","renderScenarioCharactersStep","character","renderScenarioGoalsStep","renderReviewStep","RefreshCw","getStepContent","getProgressPercentage","stepsCount","Object","keys","currentStepIndex","values","forEach","step","getStepLabel","style","width","_c","$RefreshReg$"],"sources":["/Users/ryanmorrison/Code/narrativeforge/src/components/SetupWizard/SetupWizard.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ArrowLeft, ArrowRight, Sparkles, User, Map, Wand2, CheckCircle } from 'lucide-react';\nimport './SetupWizard.css';\n\nconst SetupWizard = ({ onSave, geminiService, onReset }) => {\n  // Steps in the wizard\n  const STEPS = {\n    WELCOME: 'welcome',\n    CHARACTER_BASIC: 'character_basic',\n    CHARACTER_DETAIL: 'character_detail',\n    CHARACTER_RELATIONSHIPS: 'character_relationships',\n    SCENARIO_BASIC: 'scenario_basic',\n    SCENARIO_SETTING: 'scenario_setting',\n    SCENARIO_CHARACTERS: 'scenario_characters',\n    SCENARIO_GOALS: 'scenario_goals',\n    REVIEW: 'review'\n  };\n\n  // Main state\n  const [currentStep, setCurrentStep] = useState(STEPS.WELCOME);\n  const [isGenerating, setIsGenerating] = useState(false);\n  const [generatingField, setGeneratingField] = useState(null);\n  \n  // State for character and scenario data\n  const [characterData, setCharacterData] = useState({\n    name: '',\n    age: '',\n    physicalDescription: '',\n    background: '',\n    personality: '',\n    relationships: [],\n    additionalNotes: ''\n  });\n  \n  const [scenarioData, setScenarioData] = useState({\n    title: '',\n    setting: {\n      location: '',\n      time: '',\n      atmosphere: ''\n    },\n    initialSituation: '',\n    otherCharacters: [],\n    narrativeGoals: '',\n    toneAndThemes: '',\n    roleplayInstructions: ''\n  });\n\n  // Generate a random character\n  const generateRandomCharacter = async () => {\n    try {\n      setIsGenerating(true);\n      \n      if (!geminiService) {\n        alert('AI service is not available. Please check your API key in settings.');\n        return;\n      }\n      \n      const prompt = `Create a detailed fictional character profile with the following information:\n      - Name (full name)\n      - Age (between 18-80)\n      - Detailed physical description (at least 2 paragraphs)\n      - Background and history (at least 2 paragraphs, include childhood, family, and major life events)\n      - Personality traits (include both strengths and flaws)\n      - One key relationship with another character\n      \n      Make the character complex, nuanced, and interesting with strong narrative potential.\n      \n      IMPORTANT: Return ONLY a valid JSON object with NO additional text, following this structure:\n      {\n        \"name\": \"Character's name\",\n        \"age\": \"Character's age (as a number)\",\n        \"physicalDescription\": \"Detailed physical description\",\n        \"background\": \"Background and history\",\n        \"personality\": \"Personality description\",\n        \"relationships\": [\n          {\n            \"name\": \"Name of related character\",\n            \"relationshipType\": \"Type of relationship\",\n            \"description\": \"Description of the relationship\"\n          }\n        ],\n        \"additionalNotes\": \"Any additional details\"\n      }`;\n      \n      const response = await geminiService.generateGeneric(prompt);\n      \n      try {\n        // Try to parse the JSON directly first\n        let jsonData;\n        try {\n          jsonData = JSON.parse(response.trim());\n        } catch (e) {\n          // Fallback to regex extraction if direct parsing fails\n          const jsonRegex = /\\{[\\s\\S]*\\}/g;\n          const matches = response.match(jsonRegex);\n          \n          if (matches && matches.length > 0) {\n            const jsonString = matches[0];\n            jsonData = JSON.parse(jsonString);\n          } else {\n            throw new Error('Could not extract valid JSON from response');\n          }\n        }\n        \n        // Ensure relationships is an array\n        if (!Array.isArray(jsonData.relationships)) {\n          jsonData.relationships = [];\n        }\n        \n        // Verify name exists, set a default if missing\n        if (!jsonData.name || jsonData.name.trim() === '') {\n          jsonData.name = \"Unnamed Character\";\n        }\n        \n        setCharacterData(jsonData);\n      } catch (error) {\n        console.error('Error processing character data:', error);\n        console.log('Raw response:', response);\n        alert('Could not process AI-generated character. Please try again or create manually.');\n      }\n    } catch (error) {\n      console.error('Error generating character:', error);\n      alert('Could not generate character. Please try again or continue with manual entry.');\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  // Generate a random scenario\n  const generateRandomScenario = async () => {\n    try {\n      setIsGenerating(true);\n      \n      if (!geminiService) {\n        alert('AI service is not available. Please check your API key in settings.');\n        return;\n      }\n      \n      const prompt = `Create a detailed roleplay scenario with the following information:\n      - Title (creative and evocative)\n      - Setting (including location, time period, and atmosphere)\n      - Initial situation (the starting point for the roleplay)\n      - Other characters (at least 1-2 characters with descriptions)\n      - Narrative goals (what the scenario aims to explore)\n      - Tone and themes (emotional tone and thematic elements)\n      \n      Make the scenario compelling, rich with potential for character development, and interesting to explore.\n      \n      IMPORTANT: Return ONLY a valid JSON object with NO additional text, following this structure:\n      {\n        \"title\": \"Scenario title\",\n        \"setting\": {\n          \"location\": \"Description of the location\",\n          \"time\": \"Time period or specific time\",\n          \"atmosphere\": \"Mood and atmosphere of the setting\"\n        },\n        \"initialSituation\": \"Detailed description of the starting situation\",\n        \"otherCharacters\": [\n          {\n            \"name\": \"Character name\",\n            \"role\": \"Character's role in the scenario\",\n            \"description\": \"Physical and personality description\",\n            \"relationship\": \"Relationship to the protagonist\"\n          }\n        ],\n        \"narrativeGoals\": \"What the scenario aims to explore or accomplish\",\n        \"toneAndThemes\": \"Emotional tone and thematic elements\"\n      }`;\n      \n      const response = await geminiService.generateGeneric(prompt);\n      \n      try {\n        // Try to parse the JSON directly first\n        let jsonData;\n        try {\n          jsonData = JSON.parse(response.trim());\n        } catch (e) {\n          // Fallback to regex extraction if direct parsing fails\n          const jsonRegex = /\\{[\\s\\S]*\\}/g;\n          const matches = response.match(jsonRegex);\n          \n          if (matches && matches.length > 0) {\n            const jsonString = matches[0];\n            jsonData = JSON.parse(jsonString);\n          } else {\n            throw new Error('Could not extract valid JSON from response');\n          }\n        }\n        \n        // Ensure required fields exist\n        if (!jsonData.setting || typeof jsonData.setting !== 'object') {\n          jsonData.setting = { location: '', time: '', atmosphere: '' };\n        }\n        \n        if (!Array.isArray(jsonData.otherCharacters)) {\n          jsonData.otherCharacters = [];\n        }\n\n        // Verify title exists, set a default if missing\n        if (!jsonData.title || jsonData.title.trim() === '') {\n          jsonData.title = \"Untitled Scenario\";\n        }\n        \n        setScenarioData(jsonData);\n      } catch (error) {\n        console.error('Error processing scenario data:', error);\n        console.log('Raw response:', response);\n        alert('Could not process AI-generated scenario. Please try again or create manually.');\n      }\n    } catch (error) {\n      console.error('Error generating scenario:', error);\n      alert('Could not generate scenario. Please try again or continue with manual entry.');\n    } finally {\n      setIsGenerating(false);\n    }\n  };\n\n  // Generate a specific field using AI\n  const generateField = async (type, field, currentValue = '') => {\n    try {\n      setGeneratingField(field);\n      \n      if (!geminiService) {\n        alert('AI service is not available. Please check your API key in settings.');\n        return;\n      }\n      \n      let prompt;\n      \n      switch (field) {\n        case 'physical_description':\n          prompt = `Write a detailed 2-paragraph physical description for a character named ${characterData.name || 'the protagonist'}.\n          Include appearance, style, distinctive features, and mannerisms.\n          Return only the description with no introduction or explanation.`;\n          break;\n          \n        case 'background':\n          prompt = `Write a detailed 2-paragraph background for a character named ${characterData.name || 'the protagonist'}, age ${characterData.age || 'adult'}.\n          Include childhood, key life events, education, career, and formative experiences.\n          Return only the background with no introduction or explanation.`;\n          break;\n          \n        case 'personality':\n          prompt = `Write a detailed paragraph about the personality of a character named ${characterData.name || 'the protagonist'}.\n          Include traits, strengths, flaws, values, and behaviors.\n          Return only the personality description with no introduction or explanation.`;\n          break;\n          \n        case 'initial_situation':\n          prompt = `Write a detailed paragraph about the initial situation for a scenario called \"${scenarioData.title || 'The Scenario'}\".\n          The location is ${scenarioData.setting?.location || 'unspecified'} and the time is ${scenarioData.setting?.time || 'present day'}.\n          Describe what is happening at the start of the roleplay, the protagonist's current state, and the immediate dramatic situation.\n          Return only the initial situation with no introduction or explanation.`;\n          break;\n          \n        case 'narrative_goals':\n          prompt = `Write a paragraph about the narrative goals for a scenario called \"${scenarioData.title || 'The Scenario'}\".\n          What is the protagonist trying to achieve? What themes will be explored? What character development might occur?\n          Return only the narrative goals with no introduction or explanation.`;\n          break;\n          \n        default:\n          prompt = `Enhance this text for a roleplay scenario: \"${currentValue || 'No current text'}\"\n          Make it more detailed, engaging, and dramatically interesting.\n          Return only the enhanced text with no introduction or explanation.`;\n      }\n      \n      const response = await geminiService.generateGeneric(prompt);\n      \n      // Clean up the response - remove any AI explanations\n      const cleanedResponse = response\n        .replace(/^(here('s| is) (the |an |a )?(expanded|enhanced|detailed|improved).*?:\\s*)/i, '')\n        .replace(/^(I('ve| have) (expanded|enhanced|created).*?:\\s*)/i, '')\n        .replace(/^(As requested.*?:\\s*)/i, '')\n        .trim();\n      \n      // Update the appropriate state\n      if (type === 'character') {\n        setCharacterData(prev => {\n          const newData = { ...prev };\n          switch (field) {\n            case 'physical_description':\n              newData.physicalDescription = cleanedResponse;\n              break;\n            case 'background':\n              newData.background = cleanedResponse;\n              break;\n            case 'personality':\n              newData.personality = cleanedResponse;\n              break;\n            default:\n              break;\n          }\n          return newData;\n        });\n      } else if (type === 'scenario') {\n        setScenarioData(prev => {\n          const newData = { ...prev };\n          switch (field) {\n            case 'initial_situation':\n              newData.initialSituation = cleanedResponse;\n              break;\n            case 'narrative_goals':\n              newData.narrativeGoals = cleanedResponse;\n              break;\n            default:\n              break;\n          }\n          return newData;\n        });\n      }\n    } catch (error) {\n      console.error(`Error generating ${field}:`, error);\n      alert(`Could not generate ${field}. Please try again or continue with manual entry.`);\n    } finally {\n      setGeneratingField(null);\n    }\n  };\n\n  // Add a relationship to the character\n  const addRelationship = () => {\n    setCharacterData(prev => {\n      const relationships = Array.isArray(prev.relationships) ? [...prev.relationships] : [];\n      relationships.push({ name: '', relationshipType: '', description: '' });\n      return { ...prev, relationships };\n    });\n  };\n\n  // Update a relationship\n  const updateRelationship = (index, field, value) => {\n    setCharacterData(prev => {\n      const relationships = Array.isArray(prev.relationships) ? [...prev.relationships] : [];\n      if (relationships[index]) {\n        relationships[index] = { ...relationships[index], [field]: value };\n      }\n      return { ...prev, relationships };\n    });\n  };\n\n  // Remove a relationship\n  const removeRelationship = (index) => {\n    setCharacterData(prev => {\n      const relationships = Array.isArray(prev.relationships) ? [...prev.relationships] : [];\n      return { ...prev, relationships: relationships.filter((_, i) => i !== index) };\n    });\n  };\n\n  // Add a character to the scenario\n  const addScenarioCharacter = () => {\n    setScenarioData(prev => {\n      const characters = Array.isArray(prev.otherCharacters) ? [...prev.otherCharacters] : [];\n      characters.push({ name: '', role: '', description: '', relationship: '' });\n      return { ...prev, otherCharacters: characters };\n    });\n  };\n\n  // Update a scenario character\n  const updateScenarioCharacter = (index, field, value) => {\n    setScenarioData(prev => {\n      const characters = Array.isArray(prev.otherCharacters) ? [...prev.otherCharacters] : [];\n      if (characters[index]) {\n        characters[index] = { ...characters[index], [field]: value };\n      }\n      return { ...prev, otherCharacters: characters };\n    });\n  };\n\n  // Remove a scenario character\n  const removeScenarioCharacter = (index) => {\n    setScenarioData(prev => {\n      const characters = Array.isArray(prev.otherCharacters) ? [...prev.otherCharacters] : [];\n      return { ...prev, otherCharacters: characters.filter((_, i) => i !== index) };\n    });\n  };\n\n  // Move to the next step\n  const nextStep = () => {\n    switch (currentStep) {\n      case STEPS.WELCOME:\n        setCurrentStep(STEPS.CHARACTER_BASIC);\n        break;\n      case STEPS.CHARACTER_BASIC:\n        setCurrentStep(STEPS.CHARACTER_DETAIL);\n        break;\n      case STEPS.CHARACTER_DETAIL:\n        setCurrentStep(STEPS.CHARACTER_RELATIONSHIPS);\n        break;\n      case STEPS.CHARACTER_RELATIONSHIPS:\n        setCurrentStep(STEPS.SCENARIO_BASIC);\n        break;\n      case STEPS.SCENARIO_BASIC:\n        setCurrentStep(STEPS.SCENARIO_SETTING);\n        break;\n      case STEPS.SCENARIO_SETTING:\n        setCurrentStep(STEPS.SCENARIO_CHARACTERS);\n        break;\n      case STEPS.SCENARIO_CHARACTERS:\n        setCurrentStep(STEPS.SCENARIO_GOALS);\n        break;\n      case STEPS.SCENARIO_GOALS:\n        setCurrentStep(STEPS.REVIEW);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Move to the previous step\n  const prevStep = () => {\n    switch (currentStep) {\n      case STEPS.CHARACTER_BASIC:\n        setCurrentStep(STEPS.WELCOME);\n        break;\n      case STEPS.CHARACTER_DETAIL:\n        setCurrentStep(STEPS.CHARACTER_BASIC);\n        break;\n      case STEPS.CHARACTER_RELATIONSHIPS:\n        setCurrentStep(STEPS.CHARACTER_DETAIL);\n        break;\n      case STEPS.SCENARIO_BASIC:\n        setCurrentStep(STEPS.CHARACTER_RELATIONSHIPS);\n        break;\n      case STEPS.SCENARIO_SETTING:\n        setCurrentStep(STEPS.SCENARIO_BASIC);\n        break;\n      case STEPS.SCENARIO_CHARACTERS:\n        setCurrentStep(STEPS.SCENARIO_SETTING);\n        break;\n      case STEPS.SCENARIO_GOALS:\n        setCurrentStep(STEPS.SCENARIO_CHARACTERS);\n        break;\n      case STEPS.REVIEW:\n        setCurrentStep(STEPS.SCENARIO_GOALS);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Complete the wizard and save data\n  const completeWizard = () => {\n    if (typeof onSave === 'function') {\n      onSave(characterData, scenarioData);\n    } else {\n      console.error('onSave function not provided');\n    }\n  };\n\n  // Check if current step is valid and can proceed\n  const canProceed = () => {\n    switch (currentStep) {\n      case STEPS.CHARACTER_BASIC:\n        return Boolean(characterData.name && characterData.age);\n      case STEPS.SCENARIO_BASIC:\n        return Boolean(scenarioData.title);\n      default:\n        return true;\n    }\n  };\n\n  // Render the welcome step\n  const renderWelcomeStep = () => (\n    <div className=\"wizard-step-content\">\n      <div className=\"wizard-welcome\">\n        <h3>Character & Scenario Creation</h3>\n        <p>Welcome to the guided setup process! We'll walk you through creating your character and scenario step by step.</p>\n        \n        <div className=\"wizard-options\">\n          <div className=\"wizard-option\">\n            <h4>Start from Scratch</h4>\n            <p>Create your character and scenario step by step with our guided process.</p>\n            <button className=\"wizard-option-btn\" onClick={nextStep} type=\"button\">\n              Start Fresh <ArrowRight size={16} />\n            </button>\n          </div>\n          \n          <div className=\"wizard-option-separator\">OR</div>\n          \n          <div className=\"wizard-option\">\n            <h4>Generate with AI</h4>\n            <p>Let AI create a complete character and scenario for you to customize.</p>\n            <div className=\"wizard-option-buttons\">\n              <button \n                className=\"wizard-option-btn wizard-generate-btn\" \n                onClick={() => {\n                  generateRandomCharacter();\n                  generateRandomScenario();\n                  setCurrentStep(STEPS.REVIEW);\n                }}\n                disabled={isGenerating}\n                type=\"button\"\n              >\n                {isGenerating ? 'Generating...' : 'Generate Both'}\n                <Sparkles size={16} className={isGenerating ? 'spinning' : ''} />\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  // Render the character basic info step\n  const renderCharacterBasicStep = () => (\n    <div className=\"wizard-step-content\">\n      <h3>Basic Character Information</h3>\n      \n      <div className=\"wizard-form-group\">\n        <label htmlFor=\"character-name\">Character Name</label>\n        <input\n          id=\"character-name\"\n          type=\"text\"\n          value={characterData.name || ''}\n          onChange={(e) => setCharacterData({...characterData, name: e.target.value})}\n          placeholder=\"Enter your character's name\"\n          className=\"wizard-input\"\n        />\n      </div>\n      \n      <div className=\"wizard-form-group\">\n        <label htmlFor=\"character-age\">Character Age</label>\n        <input\n          id=\"character-age\"\n          type=\"text\"\n          value={characterData.age || ''}\n          onChange={(e) => setCharacterData({...characterData, age: e.target.value})}\n          placeholder=\"How old is your character?\"\n          className=\"wizard-input\"\n        />\n      </div>\n      \n      <div className=\"wizard-ai-suggestion\">\n        <button \n          className=\"wizard-ai-btn\"\n          onClick={generateRandomCharacter}\n          disabled={isGenerating}\n          type=\"button\"\n        >\n          <Wand2 size={16} />\n          Generate Random Character\n        </button>\n        <small>AI will create a complete character profile that you can customize.</small>\n      </div>\n    </div>\n  );\n\n  // Render the character details step\n  const renderCharacterDetailStep = () => (\n    <div className=\"wizard-step-content\">\n      <h3>Character Details</h3>\n      \n      <div className=\"wizard-form-group\">\n        <div className=\"wizard-label-with-ai\">\n          <label htmlFor=\"physical-description\">Physical Description</label>\n          <button \n            className=\"wizard-generate-field\"\n            onClick={() => generateField('character', 'physical_description', characterData.physicalDescription)}\n            disabled={generatingField === 'physical_description'}\n            type=\"button\"\n          >\n            {generatingField === 'physical_description' ? 'Generating...' : <Wand2 size={14} />}\n          </button>\n        </div>\n        <textarea\n          id=\"physical-description\"\n          rows={3}\n          value={characterData.physicalDescription || ''}\n          onChange={(e) => setCharacterData({...characterData, physicalDescription: e.target.value})}\n          placeholder=\"Describe your character's appearance, style, and physical traits...\"\n          className=\"wizard-textarea\"\n        />\n      </div>\n      \n      <div className=\"wizard-form-group\">\n        <div className=\"wizard-label-with-ai\">\n          <label htmlFor=\"background\">Background & History</label>\n          <button \n            className=\"wizard-generate-field\"\n            onClick={() => generateField('character', 'background', characterData.background)}\n            disabled={generatingField === 'background'}\n            type=\"button\"\n          >\n            {generatingField === 'background' ? 'Generating...' : <Wand2 size={14} />}\n          </button>\n        </div>\n        <textarea\n          id=\"background\"\n          rows={4}\n          value={characterData.background || ''}\n          onChange={(e) => setCharacterData({...characterData, background: e.target.value})}\n          placeholder=\"Describe your character's background, history, and key life events...\"\n          className=\"wizard-textarea\"\n        />\n      </div>\n      \n      <div className=\"wizard-form-group\">\n        <div className=\"wizard-label-with-ai\">\n          <label htmlFor=\"personality\">Personality</label>\n          <button \n            className=\"wizard-generate-field\"\n            onClick={() => generateField('character', 'personality', characterData.personality)}\n            disabled={generatingField === 'personality'}\n            type=\"button\"\n          >\n            {generatingField === 'personality' ? 'Generating...' : <Wand2 size={14} />}\n          </button>\n        </div>\n        <textarea\n          id=\"personality\"\n          rows={3}\n          value={characterData.personality || ''}\n          onChange={(e) => setCharacterData({...characterData, personality: e.target.value})}\n          placeholder=\"Describe your character's personality traits, flaws, and behaviors...\"\n          className=\"wizard-textarea\"\n        />\n      </div>\n    </div>\n  );\n\n  // Render the character relationships step\n  const renderCharacterRelationshipsStep = () => (\n    <div className=\"wizard-step-content\">\n      <h3>Character Relationships</h3>\n      <p className=\"wizard-step-description\">\n        Define key relationships that will impact your character in the scenario.\n      </p>\n      \n      {(!characterData.relationships || characterData.relationships.length === 0) && (\n        <div className=\"wizard-empty-state\">\n          <p>No relationships added yet.</p>\n        </div>\n      )}\n      \n      {characterData.relationships && characterData.relationships.map((relationship, index) => (\n        <div key={index} className=\"wizard-relationship-item\">\n          <div className=\"wizard-form-group\">\n            <label>Name</label>\n            <input\n              type=\"text\"\n              value={relationship.name || ''}\n              onChange={(e) => updateRelationship(index, 'name', e.target.value)}\n              placeholder=\"Person's name\"\n              className=\"wizard-input\"\n            />\n          </div>\n          \n          <div className=\"wizard-form-group\">\n            <label>Relationship Type</label>\n            <input\n              type=\"text\"\n              value={relationship.relationshipType || ''}\n              onChange={(e) => updateRelationship(index, 'relationshipType', e.target.value)}\n              placeholder=\"e.g., Friend, Lover, Family, Rival\"\n              className=\"wizard-input\"\n            />\n          </div>\n          \n          <div className=\"wizard-form-group\">\n            <label>Description</label>\n            <textarea\n              rows={2}\n              value={relationship.description || ''}\n              onChange={(e) => updateRelationship(index, 'description', e.target.value)}\n              placeholder=\"Details about this relationship...\"\n              className=\"wizard-textarea\"\n            />\n          </div>\n          \n          <button \n            className=\"wizard-remove-btn\"\n            onClick={() => removeRelationship(index)}\n            type=\"button\"\n          >\n            Remove\n          </button>\n        </div>\n      ))}\n      \n      <button className=\"wizard-add-btn\" onClick={addRelationship} type=\"button\">\n        Add Relationship\n      </button>\n    </div>\n  );\n\n  // Render the scenario basic info step\n  const renderScenarioBasicStep = () => (\n    <div className=\"wizard-step-content\">\n      <h3>Basic Scenario Information</h3>\n      \n      <div className=\"wizard-form-group\">\n        <label htmlFor=\"scenario-title\">Scenario Title</label>\n        <input\n          id=\"scenario-title\"\n          type=\"text\"\n          value={scenarioData.title || ''}\n          onChange={(e) => setScenarioData({...scenarioData, title: e.target.value})}\n          placeholder=\"Give your scenario a meaningful title\"\n          className=\"wizard-input\"\n        />\n      </div>\n      \n      <div className=\"wizard-form-group\">\n        <div className=\"wizard-label-with-ai\">\n          <label htmlFor=\"initial-situation\">Initial Situation</label>\n          <button \n            className=\"wizard-generate-field\"\n            onClick={() => generateField('scenario', 'initial_situation', scenarioData.initialSituation)}\n            disabled={generatingField === 'initial_situation'}\n            type=\"button\"\n          >\n            {generatingField === 'initial_situation' ? 'Generating...' : <Wand2 size={14} />}\n          </button>\n        </div>\n        <textarea\n          id=\"initial-situation\"\n          rows={4}\n          value={scenarioData.initialSituation || ''}\n          onChange={(e) => setScenarioData({...scenarioData, initialSituation: e.target.value})}\n          placeholder=\"Describe the situation at the start of your scenario. What has just happened? What state is your character in?\"\n          className=\"wizard-textarea\"\n        />\n      </div>\n      \n      <div className=\"wizard-ai-suggestion\">\n        <button \n          className=\"wizard-ai-btn\"\n          onClick={generateRandomScenario}\n          disabled={isGenerating}\n          type=\"button\"\n        >\n          <Wand2 size={16} />\n          Generate Random Scenario\n        </button>\n        <small>AI will create a complete scenario that you can customize.</small>\n      </div>\n    </div>\n  );\n\n  // Render the scenario setting step\n  const renderScenarioSettingStep = () => {\n    // Safely access setting properties\n    const setting = scenarioData.setting || {};\n    \n    return (\n      <div className=\"wizard-step-content\">\n        <h3>Scenario Setting</h3>\n        \n        <div className=\"wizard-form-group\">\n          <label htmlFor=\"setting-location\">Location</label>\n          <input\n            id=\"setting-location\"\n            type=\"text\"\n            value={setting.location || ''}\n            onChange={(e) => setScenarioData({\n              ...scenarioData, \n              setting: {...setting, location: e.target.value}\n            })}\n            placeholder=\"Where does the scenario take place?\"\n            className=\"wizard-input\"\n          />\n        </div>\n        \n        <div className=\"wizard-form-group\">\n          <label htmlFor=\"setting-time\">Time</label>\n          <input\n            id=\"setting-time\"\n            type=\"text\"\n            value={setting.time || ''}\n            onChange={(e) => setScenarioData({\n              ...scenarioData, \n              setting: {...setting, time: e.target.value}\n            })}\n            placeholder=\"When does the scenario take place? (time of day, year, era)\"\n            className=\"wizard-input\"\n          />\n        </div>\n        \n        <div className=\"wizard-form-group\">\n          <label htmlFor=\"setting-atmosphere\">Atmosphere</label>\n          <input\n            id=\"setting-atmosphere\"\n            type=\"text\"\n            value={setting.atmosphere || ''}\n            onChange={(e) => setScenarioData({\n              ...scenarioData, \n              setting: {...setting, atmosphere: e.target.value}\n            })}\n            placeholder=\"Describe the mood/atmosphere of the setting\"\n            className=\"wizard-input\"\n          />\n        </div>\n      </div>\n    );\n  };\n\n  // Render the scenario characters step\n  const renderScenarioCharactersStep = () => (\n    <div className=\"wizard-step-content\">\n      <h3>Other Characters in Scenario</h3>\n      <p className=\"wizard-step-description\">\n        Define other characters that will appear in your scenario.\n      </p>\n      \n      {(!scenarioData.otherCharacters || scenarioData.otherCharacters.length === 0) && (\n        <div className=\"wizard-empty-state\">\n          <p>No additional characters added yet.</p>\n        </div>\n      )}\n      \n      {scenarioData.otherCharacters && scenarioData.otherCharacters.map((character, index) => (\n        <div key={index} className=\"wizard-character-item\">\n          <div className=\"wizard-form-group\">\n            <label>Name</label>\n            <input\n              type=\"text\"\n              value={character.name || ''}\n              onChange={(e) => updateScenarioCharacter(index, 'name', e.target.value)}\n              placeholder=\"Character's name\"\n              className=\"wizard-input\"\n            />\n          </div>\n          \n          <div className=\"wizard-form-group\">\n            <label>Role</label>\n            <input\n              type=\"text\"\n              value={character.role || ''}\n              onChange={(e) => updateScenarioCharacter(index, 'role', e.target.value)}\n              placeholder=\"e.g., Antagonist, Ally, Mentor\"\n              className=\"wizard-input\"\n            />\n          </div>\n          \n          <div className=\"wizard-form-group\">\n            <label>Description</label>\n            <textarea\n              rows={2}\n              value={character.description || ''}\n              onChange={(e) => updateScenarioCharacter(index, 'description', e.target.value)}\n              placeholder=\"Physical and personality description...\"\n              className=\"wizard-textarea\"\n            />\n          </div>\n          \n          <div className=\"wizard-form-group\">\n            <label>Relationship to Main Character</label>\n            <input\n              type=\"text\"\n              value={character.relationship || ''}\n              onChange={(e) => updateScenarioCharacter(index, 'relationship', e.target.value)}\n              placeholder=\"How do they relate to your character?\"\n              className=\"wizard-input\"\n            />\n          </div>\n          \n          <button \n            className=\"wizard-remove-btn\"\n            onClick={() => removeScenarioCharacter(index)}\n            type=\"button\"\n          >\n            Remove\n          </button>\n        </div>\n      ))}\n      \n      <button className=\"wizard-add-btn\" onClick={addScenarioCharacter} type=\"button\">\n        Add Character\n      </button>\n    </div>\n  );\n\n  // Render the scenario goals step\n  const renderScenarioGoalsStep = () => (\n    <div className=\"wizard-step-content\">\n      <h3>Narrative Goals & Themes</h3>\n      \n      <div className=\"wizard-form-group\">\n        <div className=\"wizard-label-with-ai\">\n          <label htmlFor=\"narrative-goals\">Narrative Goals</label>\n          <button \n            className=\"wizard-generate-field\"\n            onClick={() => generateField('scenario', 'narrative_goals', scenarioData.narrativeGoals)}\n            disabled={generatingField === 'narrative_goals'}\n            type=\"button\"\n          >\n            {generatingField === 'narrative_goals' ? 'Generating...' : <Wand2 size={14} />}\n          </button>\n        </div>\n        <textarea\n          id=\"narrative-goals\"\n          rows={3}\n          value={scenarioData.narrativeGoals || ''}\n          onChange={(e) => setScenarioData({...scenarioData, narrativeGoals: e.target.value})}\n          placeholder=\"What are you hoping to explore in this scenario? What character development or themes are you interested in?\"\n          className=\"wizard-textarea\"\n        />\n      </div>\n      \n      <div className=\"wizard-form-group\">\n        <label htmlFor=\"tone-themes\">Tone and Themes</label>\n        <textarea\n          id=\"tone-themes\"\n          rows={3}\n          value={scenarioData.toneAndThemes || ''}\n          onChange={(e) => setScenarioData({...scenarioData, toneAndThemes: e.target.value})}\n          placeholder=\"What is the emotional tone of this scenario? What themes should be emphasized?\"\n          className=\"wizard-textarea\"\n        />\n      </div>\n      \n      <div className=\"wizard-form-group\">\n        <label htmlFor=\"roleplay-instructions\">Roleplay Instructions (Optional)</label>\n        <textarea\n          id=\"roleplay-instructions\"\n          rows={3}\n          value={scenarioData.roleplayInstructions || ''}\n          onChange={(e) => setScenarioData({...scenarioData, roleplayInstructions: e.target.value})}\n          placeholder=\"Any specific instructions for the AI in this roleplay? (Optional)\"\n          className=\"wizard-textarea\"\n        />\n      </div>\n    </div>\n  );\n\n  // Render the review step\n  const renderReviewStep = () => {\n    // Safely access setting properties\n    const setting = scenarioData.setting || {};\n    \n    return (\n      <div className=\"wizard-step-content\">\n        <h3>Review Your Setup</h3>\n        <p className=\"wizard-step-description\">\n          Review your character and scenario details before starting your roleplay.\n        </p>\n        \n        <div className=\"wizard-review-section\">\n          <h4 className=\"wizard-review-heading\">\n            <User size={16} />\n            Character: {characterData.name || 'Unnamed'}\n          </h4>\n          <div className=\"wizard-review-details\">\n            <p><strong>Age:</strong> {characterData.age || 'Not specified'}</p>\n            \n            {characterData.physicalDescription && (\n              <div className=\"wizard-review-item\">\n                <strong>Physical Description:</strong>\n                <p className=\"wizard-review-text\">{characterData.physicalDescription}</p>\n              </div>\n            )}\n            \n            {characterData.background && (\n              <div className=\"wizard-review-item\">\n                <strong>Background:</strong>\n                <p className=\"wizard-review-text\">{characterData.background}</p>\n              </div>\n            )}\n            \n            {characterData.personality && (\n              <div className=\"wizard-review-item\">\n                <strong>Personality:</strong>\n                <p className=\"wizard-review-text\">{characterData.personality}</p>\n              </div>\n            )}\n            \n            {characterData.relationships && characterData.relationships.length > 0 && (\n              <div className=\"wizard-review-item\">\n                <strong>Relationships:</strong>\n                <ul className=\"wizard-review-list\">\n                  {characterData.relationships.map((relationship, index) => (\n                    <li key={index}>\n                      <strong>{relationship.name || 'Unnamed'}</strong> \n                      {relationship.relationshipType ? ` (${relationship.relationshipType})` : ''}: \n                      {relationship.description || 'No description'}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n            \n            <div className=\"wizard-regenerate-actions\">\n              <button \n                className=\"wizard-regenerate-btn\" \n                onClick={generateRandomCharacter}\n                disabled={isGenerating}\n                type=\"button\"\n              >\n                {isGenerating ? 'Regenerating...' : 'Regenerate Character'}\n                {isGenerating && <RefreshCw size={16} className=\"spinning\" />}\n              </button>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"wizard-review-section\">\n          <h4 className=\"wizard-review-heading\">\n            <Map size={16} />\n            Scenario: {scenarioData.title || 'Untitled'}\n          </h4>\n          <div className=\"wizard-review-details\">\n            <div className=\"wizard-review-item\">\n              <strong>Setting:</strong>\n              <p>\n                {setting.location && (\n                  <span><strong>Location:</strong> {setting.location} </span>\n                )}\n                {setting.time && (\n                  <span><strong>Time:</strong> {setting.time} </span>\n                )}\n                {setting.atmosphere && (\n                  <span><strong>Atmosphere:</strong> {setting.atmosphere}</span>\n                )}\n              </p>\n            </div>\n            \n            {scenarioData.initialSituation && (\n              <div className=\"wizard-review-item\">\n                <strong>Initial Situation:</strong>\n                <p className=\"wizard-review-text\">{scenarioData.initialSituation}</p>\n              </div>\n            )}\n            \n            {scenarioData.otherCharacters && scenarioData.otherCharacters.length > 0 && (\n              <div className=\"wizard-review-item\">\n                <strong>Other Characters:</strong>\n                <ul className=\"wizard-review-list\">\n                  {scenarioData.otherCharacters.map((character, index) => (\n                    <li key={index}>\n                      <strong>{character.name || 'Unnamed'}</strong>\n                      {character.role ? ` (${character.role})` : ''}: \n                      {character.description || 'No description'}\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n            \n            {scenarioData.narrativeGoals && (\n              <div className=\"wizard-review-item\">\n                <strong>Narrative Goals:</strong>\n                <p className=\"wizard-review-text\">{scenarioData.narrativeGoals}</p>\n              </div>\n            )}\n            \n            {scenarioData.toneAndThemes && (\n              <div className=\"wizard-review-item\">\n                <strong>Tone and Themes:</strong>\n                <p className=\"wizard-review-text\">{scenarioData.toneAndThemes}</p>\n              </div>\n            )}\n            \n            <div className=\"wizard-regenerate-actions\">\n              <button \n                className=\"wizard-regenerate-btn\" \n                onClick={generateRandomScenario}\n                disabled={isGenerating}\n                type=\"button\"\n              >\n                {isGenerating ? 'Regenerating...' : 'Regenerate Scenario'}\n                {isGenerating && <RefreshCw size={16} className=\"spinning\" />}\n              </button>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"wizard-complete\">\n          <button className=\"wizard-complete-btn\" onClick={completeWizard} type=\"button\">\n            <CheckCircle size={18} />\n            Start Roleplay\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  // Get the content for the current step\n  const getStepContent = () => {\n    switch (currentStep) {\n      case STEPS.WELCOME:\n        return renderWelcomeStep();\n      case STEPS.CHARACTER_BASIC:\n        return renderCharacterBasicStep();\n      case STEPS.CHARACTER_DETAIL:\n        return renderCharacterDetailStep();\n      case STEPS.CHARACTER_RELATIONSHIPS:\n        return renderCharacterRelationshipsStep();\n      case STEPS.SCENARIO_BASIC:\n        return renderScenarioBasicStep();\n      case STEPS.SCENARIO_SETTING:\n        return renderScenarioSettingStep();\n      case STEPS.SCENARIO_CHARACTERS:\n        return renderScenarioCharactersStep();\n      case STEPS.SCENARIO_GOALS:\n        return renderScenarioGoalsStep();\n      case STEPS.REVIEW:\n        return renderReviewStep();\n      default:\n        return null;\n    }\n  };\n\n  // Get the progress percentage\n  const getProgressPercentage = () => {\n    const stepsCount = Object.keys(STEPS).length;\n    let currentStepIndex = 1; // Default to first step\n    \n    // Find the current step index\n    Object.values(STEPS).forEach((step, index) => {\n      if (step === currentStep) {\n        currentStepIndex = index + 1;\n      }\n    });\n    \n    return (currentStepIndex / stepsCount) * 100;\n  };\n\n  // Get the step label\n  const getStepLabel = () => {\n    switch (currentStep) {\n      case STEPS.WELCOME:\n        return 'Welcome';\n      case STEPS.CHARACTER_BASIC:\n        return 'Character Basics';\n      case STEPS.CHARACTER_DETAIL:\n        return 'Character Details';\n      case STEPS.CHARACTER_RELATIONSHIPS:\n        return 'Character Relationships';\n      case STEPS.SCENARIO_BASIC:\n        return 'Scenario Basics';\n      case STEPS.SCENARIO_SETTING:\n        return 'Scenario Setting';\n      case STEPS.SCENARIO_CHARACTERS:\n        return 'Scenario Characters';\n      case STEPS.SCENARIO_GOALS:\n        return 'Narrative Goals';\n      case STEPS.REVIEW:\n        return 'Review';\n      default:\n        return '';\n    }\n  };\n\n  return (\n    <div className=\"setup-wizard\">\n      <div className=\"wizard-header\">\n        <button \n          className=\"reset-btn\" \n          onClick={onReset}\n          type=\"button\"\n        >\n          Start Over\n        </button>\n        <div className=\"wizard-progress\">\n          <div className=\"wizard-progress-label\">{getStepLabel()}</div>\n          <div className=\"wizard-progress-bar\">\n            <div \n              className=\"wizard-progress-fill\" \n              style={{ width: `${getProgressPercentage()}%` }}\n            ></div>\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"wizard-container\">\n        {getStepContent()}\n      </div>\n      \n      {currentStep !== STEPS.WELCOME && currentStep !== STEPS.REVIEW && (\n        <div className=\"wizard-navigation\">\n          <button \n            className=\"wizard-nav-btn wizard-prev-btn\"\n            onClick={prevStep}\n            type=\"button\"\n          >\n            <ArrowLeft size={16} />\n            Previous\n          </button>\n          \n          <button \n            className=\"wizard-nav-btn wizard-next-btn\"\n            onClick={nextStep}\n            disabled={!canProceed()}\n            type=\"button\"\n          >\n            Next\n            <ArrowRight size={16} />\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SetupWizard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}