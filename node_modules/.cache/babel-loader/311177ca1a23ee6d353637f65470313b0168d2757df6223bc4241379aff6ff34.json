{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmorrison/Code/narrativeforge/src/components/Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './Settings.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = ({\n  apiKey,\n  setApiKey,\n  isApiKeySet,\n  setIsApiKeySet,\n  onClose,\n  testApiKey,\n  isTestingApi,\n  apiTestResult\n}) => {\n  _s();\n  const [localApiKey, setLocalApiKey] = useState(apiKey);\n  const [showApiKey, setShowApiKey] = useState(false);\n  useEffect(() => {\n    setLocalApiKey(apiKey);\n  }, [apiKey]);\n  const handleSaveApiKey = e => {\n    e.preventDefault();\n    localStorage.setItem('gemini_api_key', localApiKey);\n    setApiKey(localApiKey);\n    setIsApiKeySet(true);\n\n    // Close the settings panel after saving\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"api-key-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"API Key Setup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enter your Gemini API key to use with NarrativeForge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSaveApiKey,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"api-key-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"apiKey\",\n                children: \"Gemini API Key:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"input-with-toggle\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  id: \"apiKey\",\n                  type: showApiKey ? \"text\" : \"password\",\n                  value: localApiKey,\n                  onChange: e => setLocalApiKey(e.target.value),\n                  placeholder: \"Enter your API key\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"toggle-visibility\",\n                  onClick: () => setShowApiKey(!showApiKey),\n                  children: showApiKey ? \"Hide\" : \"Show\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"api-key-actions\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"test-btn\",\n                onClick: testApiKey,\n                disabled: isTestingApi || !localApiKey,\n                children: isTestingApi ? \"Testing...\" : \"Test API Key\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"save-btn\",\n                disabled: !localApiKey,\n                children: \"Save API Key\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), apiTestResult && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `api-test-result ${apiTestResult.success ? 'success' : 'error'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: apiTestResult.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this), apiTestResult.success && apiTestResult.response && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"api-response\",\n              children: [/*#__PURE__*/_jsxDEV(\"small\", {\n                children: \"Model response:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [apiTestResult.response.substring(0, 100), \"...\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          className: \"about-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"About NarrativeForge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"NarrativeForge is a character-driven roleplay application powered by Google's Gemini AI. Create immersive storytelling experiences with detailed characters and scenarios.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"version\",\n            children: \"Version 1.0.0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"7/Q83IHQSjyVylenqpSPm372uck=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Settings","apiKey","setApiKey","isApiKeySet","setIsApiKeySet","onClose","testApiKey","isTestingApi","apiTestResult","_s","localApiKey","setLocalApiKey","showApiKey","setShowApiKey","handleSaveApiKey","e","preventDefault","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onSubmit","htmlFor","id","type","value","onChange","target","placeholder","disabled","success","message","response","substring","_c","$RefreshReg$"],"sources":["/Users/ryanmorrison/Code/narrativeforge/src/components/Settings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Settings.css';\n\nconst Settings = ({ \n  apiKey, \n  setApiKey, \n  isApiKeySet, \n  setIsApiKeySet, \n  onClose,\n  testApiKey,\n  isTestingApi,\n  apiTestResult\n}) => {\n  const [localApiKey, setLocalApiKey] = useState(apiKey);\n  const [showApiKey, setShowApiKey] = useState(false);\n\n  useEffect(() => {\n    setLocalApiKey(apiKey);\n  }, [apiKey]);\n\n  const handleSaveApiKey = (e) => {\n    e.preventDefault();\n    \n    localStorage.setItem('gemini_api_key', localApiKey);\n    setApiKey(localApiKey);\n    setIsApiKeySet(true);\n    \n    // Close the settings panel after saving\n    onClose();\n  };\n\n  return (\n    <div className=\"settings-overlay\">\n      <div className=\"settings-panel\">\n        <div className=\"settings-header\">\n          <h2>Settings</h2>\n          <button className=\"close-btn\" onClick={onClose}>×</button>\n        </div>\n        \n        <div className=\"settings-content\">\n          <section className=\"api-key-section\">\n            <h3>API Key Setup</h3>\n            <p>Enter your Gemini API key to use with NarrativeForge</p>\n            \n            <form onSubmit={handleSaveApiKey}>\n              <div className=\"api-key-input\">\n                <label htmlFor=\"apiKey\">Gemini API Key:</label>\n                <div className=\"input-with-toggle\">\n                  <input \n                    id=\"apiKey\"\n                    type={showApiKey ? \"text\" : \"password\"}\n                    value={localApiKey} \n                    onChange={(e) => setLocalApiKey(e.target.value)}\n                    placeholder=\"Enter your API key\"\n                  />\n                  <button \n                    type=\"button\" \n                    className=\"toggle-visibility\"\n                    onClick={() => setShowApiKey(!showApiKey)}\n                  >\n                    {showApiKey ? \"Hide\" : \"Show\"}\n                  </button>\n                </div>\n              </div>\n              \n              <div className=\"api-key-actions\">\n                <button \n                  type=\"button\" \n                  className=\"test-btn\"\n                  onClick={testApiKey}\n                  disabled={isTestingApi || !localApiKey}\n                >\n                  {isTestingApi ? \"Testing...\" : \"Test API Key\"}\n                </button>\n                \n                <button \n                  type=\"submit\" \n                  className=\"save-btn\"\n                  disabled={!localApiKey}\n                >\n                  Save API Key\n                </button>\n              </div>\n            </form>\n            \n            {apiTestResult && (\n              <div className={`api-test-result ${apiTestResult.success ? 'success' : 'error'}`}>\n                <p>{apiTestResult.message}</p>\n                {apiTestResult.success && apiTestResult.response && (\n                  <div className=\"api-response\">\n                    <small>Model response:</small>\n                    <p>{apiTestResult.response.substring(0, 100)}...</p>\n                  </div>\n                )}\n              </div>\n            )}\n          </section>\n          \n          <section className=\"about-section\">\n            <h3>About NarrativeForge</h3>\n            <p>NarrativeForge is a character-driven roleplay application powered by Google's Gemini AI. Create immersive storytelling experiences with detailed characters and scenarios.</p>\n            <p className=\"version\">Version 1.0.0</p>\n          </section>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}