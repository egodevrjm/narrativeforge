{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmorrison/Code/narrativeforge/src/components/ChatInterface.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Send, Settings, Music, BookOpen, ScrollText, MessageSquare, MousePointer, Brain, Phone, Save } from 'lucide-react';\nimport RoleplayInstructions from './RoleplayInstructions';\nimport MobilePhoneUI from './MobilePhoneUI';\nimport SocialMediaMessage from './SocialMediaMessage';\nimport { preprocessAIMessage, formatSocialMediaContent, detectMessageType } from '../utils/textFormatUtils';\nimport './error-message.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  character,\n  scenario,\n  onSaveChat,\n  geminiService,\n  onReset\n}) => {\n  _s();\n  var _scenario$setting, _scenario$setting2, _scenario$setting3, _scenario$otherCharac;\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [messageType, setMessageType] = useState('dialogue'); // dialogue, action, thought\n  const [isPhoneMode, setIsPhoneMode] = useState(false); // State to track if we're in phone mode\n  const [showInstructionsEditor, setShowInstructionsEditor] = useState(false);\n  const [showSettingsPanel, setShowSettingsPanel] = useState(false);\n  const [showMusicPanel, setShowMusicPanel] = useState(false);\n  const [showScenarioInfo, setShowScenarioInfo] = useState(false);\n  const [roleplayInstructions, setRoleplayInstructions] = useState((scenario === null || scenario === void 0 ? void 0 : scenario.roleplayInstructions) || '');\n  const [autoDetectMessageType, setAutoDetectMessageType] = useState(true); // New state for auto-detection toggle\n  const messagesEndRef = useRef(null);\n\n  // Watch for input changes to detect message type in real-time\n  const updateDetectedMessageType = useCallback(text => {\n    if (autoDetectMessageType && text) {\n      const detectedType = detectMessageType(text);\n      setMessageType(detectedType);\n    }\n  }, [autoDetectMessageType]);\n\n  // Update detected message type when input changes\n  useEffect(() => {\n    updateDetectedMessageType(inputValue);\n  }, [inputValue, updateDetectedMessageType]);\n\n  // When scenario changes, update the roleplay instructions\n  useEffect(() => {\n    if (scenario && scenario.roleplayInstructions) {\n      setRoleplayInstructions(scenario.roleplayInstructions);\n    }\n  }, [scenario]);\n\n  // Get AI response\n  const handleAiResponse = useCallback(async (userMessage, messageType) => {\n    setIsTyping(true);\n    try {\n      let responseContent;\n\n      // If we have a Gemini service, use it\n      if (geminiService) {\n        // For the first message, include roleplay instructions if they exist\n        if (!userMessage && roleplayInstructions) {\n          console.log('Generating initial AI response with roleplay instructions');\n\n          // Make sure the geminiService is initialized\n          if (!geminiService.characterProfile && character && scenario) {\n            console.log('Initializing geminiService with character and scenario');\n            geminiService.initialize(character, scenario);\n          }\n\n          // Add it to the context for the AI but don't show it in chat\n          const initPrompt = `Initial scene: ${scenario === null || scenario === void 0 ? void 0 : scenario.initialSituation}\\n\\nRoleplay instructions:\\n${roleplayInstructions}\\n\\nPlease respond with an opening for this scene, following the roleplay instructions but without mentioning them directly. Make sure to use proper paragraph breaks and spacing for better readability.`;\n          console.log('Sending initial prompt');\n          try {\n            responseContent = await geminiService.generateGeneric(initPrompt);\n            // Preprocess the response for better formatting\n            responseContent = preprocessAIMessage(responseContent);\n          } catch (error) {\n            console.error('Error generating initial response:', error);\n            // Create a specific error message for initial response\n            const errorMessageObj = {\n              id: Date.now(),\n              sender: 'system',\n              type: 'error',\n              content: 'There was an error getting a response. Please try again.',\n              timestamp: new Date()\n            };\n            setMessages(prev => [...prev, errorMessageObj]);\n            setIsTyping(false);\n            return;\n          }\n        } else {\n          responseContent = await geminiService.generateResponse(userMessage, messageType);\n\n          // Preprocess the response for better formatting\n          responseContent = preprocessAIMessage(responseContent);\n\n          // Additional formatting for social media content\n          if (messageType === 'social' || responseContent.includes('@') || responseContent.includes('Instagram') || responseContent.includes('TikTok')) {\n            responseContent = formatSocialMediaContent(responseContent);\n          }\n        }\n      } else {\n        // Fallback for development\n        await new Promise(resolve => setTimeout(resolve, 1500));\n        responseContent = \"This is a placeholder response. In the full implementation, this would be a response from Google's Gemini LLM, responding appropriately to your character's situation.\";\n      }\n\n      // Check if the AI response is implying phone interaction\n      const lowerResponse = responseContent.toLowerCase();\n      if (lowerResponse.includes('on your phone') || lowerResponse.includes('your phone shows') || lowerResponse.includes('on the screen of your phone')) {\n        // Activate phone mode if AI refers to phone content\n        setIsPhoneMode(true);\n      }\n\n      // Detect if this should be a social media response\n      let responseType = 'dialogue';\n      if (messageType === 'social' || responseContent && (responseContent.includes('@') || responseContent.includes('Instagram') || responseContent.includes('TikTok') || responseContent.includes('followers'))) {\n        responseType = 'social';\n      } else if (messageType === 'action') {\n        responseType = 'action';\n      } else if (messageType === 'thought') {\n        responseType = 'thought';\n      }\n      const aiMessage = {\n        id: Date.now(),\n        sender: 'ai',\n        type: responseType,\n        content: responseContent,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      console.error('Error getting AI response:', error);\n\n      // Create a more informative error message\n      let errorMessage = 'There was an error getting a response. Please try again.';\n\n      // Extract more specific error information if available\n      if (error.message) {\n        if (error.message.includes('401')) {\n          errorMessage = 'API Authentication Error: Your API key may be invalid or expired. Please check your settings.';\n        } else if (error.message.includes('403')) {\n          errorMessage = 'Access Denied: Your API key may not have access to the required model or you have exceeded your quota.';\n        } else if (error.message.includes('404')) {\n          errorMessage = 'Model Not Found: The specified AI model could not be found. Please check the model configuration.';\n        } else if (error.message.includes('429')) {\n          errorMessage = 'Rate Limit Exceeded: Too many requests. Please wait a moment and try again later.';\n        } else if (error.message.includes('safety')) {\n          errorMessage = 'Content filtered: The AI detected potentially sensitive content and could not respond.';\n        }\n      }\n\n      // Add error message\n      const errorMessageObj = {\n        id: Date.now(),\n        sender: 'system',\n        type: 'error',\n        content: errorMessage,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessageObj]);\n    } finally {\n      setIsTyping(false);\n    }\n  }, [geminiService, roleplayInstructions, scenario, character]);\n\n  // Initial system message when the scenario begins\n  useEffect(() => {\n    if (scenario && !messages.length) {\n      // Create day header\n      const dayHeader = {\n        id: Date.now() - 2,\n        type: 'system',\n        content: 'Day 1, Late-night',\n        timestamp: new Date()\n      };\n\n      // Create initial narrative message describing the scenario\n      const formattedContent = scenario.initialSituation.replace(/TikTok/g, '🎵 TikTok').replace(/Instagram/g, '📱 Instagram').replace(/YouTube/g, '▶️ YouTube').replace(/Twitter/g, '🐦 Twitter').replace(/@([\\w]+)/g, '@$1').replace(/girlfriend/g, 'girlfriend 💔').replace(/video call/g, 'video call 📱').replace(/guitar/g, 'guitar 🎸').replace(/notifications/g, 'notifications 🔔');\n      const initialMessage = {\n        id: Date.now() - 1,\n        type: 'social',\n        content: formattedContent,\n        timestamp: new Date()\n      };\n\n      // Set messages first\n      setMessages([dayHeader, initialMessage]);\n\n      // If there are roleplay instructions, set them but DON'T add them as a visible message\n      if (scenario.roleplayInstructions) {\n        setRoleplayInstructions(scenario.roleplayInstructions);\n      }\n\n      // Add a small delay before triggering the AI response to ensure state updates are complete\n      setTimeout(() => {\n        // Here's the critical fix - ensuring we only make this call when geminiService is ready\n        if (geminiService) {\n          console.log('Triggering initial AI response...');\n          handleAiResponse();\n        } else {\n          console.log('GeminiService not ready, skipping initial AI response');\n        }\n      }, 500);\n    }\n  }, [scenario, messages.length, geminiService, handleAiResponse]);\n\n  // Auto-scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // Save roleplay instructions\n  const saveRoleplayInstructions = instructions => {\n    setRoleplayInstructions(instructions);\n    setShowInstructionsEditor(false);\n\n    // Don't add to visible messages, but update the AI context\n    if (geminiService) {\n      geminiService.updateInstructions(instructions);\n    }\n  };\n\n  // Cancel editing instructions\n  const cancelEditInstructions = () => {\n    setShowInstructionsEditor(false);\n  };\n\n  // Save current scenario and chat\n  const handleSaveScenario = () => {\n    // Prepare the data to save\n    const dataToSave = {\n      character,\n      scenario,\n      messages,\n      timestamp: new Date().toISOString()\n    };\n    try {\n      // Get existing saved scenarios\n      const savedScenarios = JSON.parse(localStorage.getItem('narrativeforge_scenarios') || '[]');\n\n      // Check if this scenario already exists (by id)\n      const existingIndex = savedScenarios.findIndex(s => {\n        var _s$scenario;\n        return ((_s$scenario = s.scenario) === null || _s$scenario === void 0 ? void 0 : _s$scenario.id) === (scenario === null || scenario === void 0 ? void 0 : scenario.id);\n      });\n      if (existingIndex >= 0) {\n        // Update existing scenario\n        savedScenarios[existingIndex] = dataToSave;\n      } else {\n        // Add new scenario with generated ID if needed\n        if (!scenario.id) {\n          scenario.id = `scenario_${Date.now()}`;\n        }\n        savedScenarios.push(dataToSave);\n      }\n\n      // Save back to localStorage\n      localStorage.setItem('narrativeforge_scenarios', JSON.stringify(savedScenarios));\n\n      // Notify the user\n      alert('Scenario saved successfully');\n    } catch (error) {\n      console.error('Error saving scenario:', error);\n      alert('Failed to save scenario: ' + error.message);\n    }\n  };\n\n  // Send user message\n  const handleSendMessage = customText => {\n    console.log('handleSendMessage called with:', customText || inputValue);\n    // Use either the custom text or the inputValue\n    const messageText = customText || inputValue;\n\n    // Check that we have a valid string to work with\n    if (!messageText) {\n      console.log('Empty message, returning');\n      return;\n    }\n\n    // Ensure messageText is a string before calling trim\n    if (typeof messageText === 'string') {\n      if (!messageText.trim()) {\n        console.log('Message contains only whitespace, returning');\n        return;\n      }\n      console.log('Processing valid message:', messageText);\n\n      // Check for phone mode commands\n      // Ensure messageText is a string before calling toLowerCase\n      const lowerText = messageText.toLowerCase();\n      if (lowerText.includes('check my phone') || lowerText.includes('look at my phone') || lowerText.includes('check phone') || lowerText.includes('use my phone')) {\n        setIsPhoneMode(true);\n      } else if (lowerText.includes('put phone away') || lowerText.includes('stop using phone') || lowerText.includes('put away phone') || lowerText.includes('exit phone')) {\n        setIsPhoneMode(false);\n      }\n\n      // Detect message type based on content and chosen type\n      let detectedType = messageType;\n\n      // If auto-detection is enabled, determine type from content\n      if (autoDetectMessageType) {\n        detectedType = detectMessageType(messageText);\n      }\n\n      // Add day header if this is the first message in a while\n      const now = new Date();\n      if (messages.length > 0) {\n        const lastMessageTime = messages[messages.length - 1].timestamp;\n        // If more than 3 hours since last message, add a timestamp header\n        if ((now - lastMessageTime) / (1000 * 60 * 60) > 3) {\n          const dayHeader = {\n            id: Date.now() - 1,\n            // Ensure unique ID\n            type: 'system',\n            content: getDayHeaderText(now),\n            timestamp: now\n          };\n          setMessages(prev => [...prev, dayHeader]);\n        }\n      }\n\n      // Create user message object\n      const userMessage = {\n        id: Date.now(),\n        sender: 'user',\n        type: detectedType,\n        content: messageText,\n        timestamp: now\n      };\n      console.log('Adding user message to chat:', userMessage);\n\n      // Add message to chat\n      setMessages(prev => [...prev, userMessage]);\n\n      // Clear input field\n      setInputValue('');\n\n      // Process with AI\n      handleAiResponse(userMessage.content, userMessage.type);\n    } else {\n      // Handle case where messageText is not a string\n      console.error('messageText is not a string:', messageText);\n    }\n  };\n\n  // Helper function to get appropriate day header text\n  const getDayHeaderText = date => {\n    const hours = date.getHours();\n    let timeOfDay = '';\n    if (hours >= 5 && hours < 12) {\n      timeOfDay = 'Morning';\n    } else if (hours >= 12 && hours < 17) {\n      timeOfDay = 'Afternoon';\n    } else if (hours >= 17 && hours < 22) {\n      timeOfDay = 'Evening';\n    } else {\n      timeOfDay = 'Late-night';\n    }\n    return `Day ${Math.floor(Math.random() * 5 + 1)}, ${timeOfDay}`;\n  };\n\n  // Handle key press (Enter to send)\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // Format message based on type\n  const formatText = text => {\n    if (!text) return '';\n    if (typeof text !== 'string') return '';\n\n    // Ensure proper paragraph spacing by normalizing all line breaks\n    // First, normalize different line break styles\n    let normalizedText = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n\n    // Remove markdown bold formatting\n    normalizedText = normalizedText.replace(/\\*\\*([^*]+)\\*\\*/g, '$1');\n\n    // Enhance line break separation for social media platform headers\n    normalizedText = normalizedText.replace(/(📱 Instagram|🎵 TikTok|▶️ YouTube|🐦 Twitter|👻 Snapchat)/g, '\\n$1').replace(/\\n\\n(📱 Instagram|🎵 TikTok|▶️ YouTube|🐦 Twitter|👻 Snapchat)/g, '\\n\\n\\n$1');\n\n    // Format social media messages with proper styling\n    if (normalizedText.includes('@') || normalizedText.includes('#') || normalizedText.includes('Instagram') || normalizedText.includes('TikTok')) {\n      // Add emoji and styling to social media content\n      const formattedText = normalizedText.replace(/Instagram/g, '📱 Instagram').replace(/TikTok/g, '🎵 TikTok').replace(/YouTube/g, '▶️ YouTube').replace(/Twitter/g, '🐦 Twitter').replace(/direct message/gi, 'DM 💬').replace(/@([\\w]+)/g, '<span class=\"handle\">@$1</span>').replace(/\"([^\"]+)\"/g, '<span class=\"quote\">\"$1\"</span>').replace(/\\bviral\\b/g, '<span class=\"highlight\">viral</span>').replace(/\\bfollowers\\b/g, 'followers 👥').replace(/\\blikes\\b/g, 'likes ❤️').replace(/\\bcomments\\b/g, 'comments 💬').replace(/\\bshares\\b/g, 'shares 🔄');\n\n      // Make sure we have proper paragraph breaks\n      // Split by double newlines (paragraphs) or ensure line breaks in longer text\n      const paragraphs = formattedText.split(/\\n\\s*\\n/);\n      if (paragraphs.length === 1 && paragraphs[0].length > 200) {\n        // Long single paragraph - try to break it at sentence boundaries\n        const sentences = paragraphs[0].split(/(?<=\\.)\\s+/);\n        // Group sentences into reasonable paragraphs\n        const groupedParagraphs = [];\n        let currentParagraph = '';\n        sentences.forEach(sentence => {\n          if (currentParagraph.length + sentence.length > 200) {\n            groupedParagraphs.push(currentParagraph);\n            currentParagraph = sentence;\n          } else {\n            currentParagraph += (currentParagraph ? ' ' : '') + sentence;\n          }\n        });\n        if (currentParagraph) {\n          groupedParagraphs.push(currentParagraph);\n        }\n        return groupedParagraphs.map((para, i) => {\n          const processedPara = para.replace(/\\n/g, '<br />');\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            dangerouslySetInnerHTML: {\n              __html: processedPara\n            }\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 18\n          }, this);\n        });\n      }\n      return paragraphs.map((para, i) => {\n        const processedPara = para.replace(/\\n/g, '<br />');\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          dangerouslySetInnerHTML: {\n            __html: processedPara\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 16\n        }, this);\n      });\n    }\n\n    // For message lists like the Instagram DM requests\n    if (normalizedText.includes('Instagram Message Requests:')) {\n      const sections = normalizedText.split(/\\n\\s*\\n/);\n      return sections.map((section, i) => {\n        if (section.includes('•')) {\n          // This is a list section\n          const listItems = section.split('•').filter(item => item.trim());\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-list\",\n            children: listItems.map((item, j) => {\n              // Check if this contains a username and message\n              const parts = item.split(/\\n/);\n              if (parts.length > 1) {\n                const username = parts[0].trim();\n                const messageText = parts.slice(1).join('\\n').trim();\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"dm-message\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dm-username\",\n                    children: username\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 479,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"dm-content\",\n                    children: /*#__PURE__*/_jsxDEV(\"em\", {\n                      children: [\"\\\"\", messageText, \"\\\"\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 480,\n                      columnNumber: 51\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 480,\n                    columnNumber: 23\n                  }, this)]\n                }, j, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 21\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: item.trim()\n                }, j, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 484,\n                  columnNumber: 26\n                }, this);\n              }\n            })\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 13\n          }, this);\n        } else {\n          // Regular paragraph\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            children: section\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 18\n          }, this);\n        }\n      });\n    }\n\n    // Regular content - split by paragraphs\n    // First check if we need to add paragraph breaks to a long single paragraph\n    const paragraphs = normalizedText.split(/\\n\\s*\\n/);\n    if (paragraphs.length === 1 && paragraphs[0].length > 200) {\n      // Long single paragraph - try to break it at sentence boundaries\n      const sentences = paragraphs[0].split(/(?<=\\.)\\s+/);\n      // Group sentences into reasonable paragraphs\n      const groupedParagraphs = [];\n      let currentParagraph = '';\n      sentences.forEach(sentence => {\n        if (currentParagraph.length + sentence.length > 200) {\n          groupedParagraphs.push(currentParagraph);\n          currentParagraph = sentence;\n        } else {\n          currentParagraph += (currentParagraph ? ' ' : '') + sentence;\n        }\n      });\n      if (currentParagraph) {\n        groupedParagraphs.push(currentParagraph);\n      }\n      return groupedParagraphs.map((para, i) => {\n        // Replace single newlines with <br>\n        const formattedPara = para.replace(/\\n/g, '<br />');\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          dangerouslySetInnerHTML: {\n            __html: formattedPara\n          }\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 16\n        }, this);\n      });\n    }\n    return paragraphs.map((para, i) => {\n      // Replace single newlines with <br>\n      const formattedPara = para.replace(/\\n/g, '<br />');\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        dangerouslySetInnerHTML: {\n          __html: formattedPara\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 14\n      }, this);\n    });\n  };\n\n  // Format message based on type\n  const formatMessage = message => {\n    // Create a timestamp element\n    const timestamp = /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"timestamp\",\n      children: message.timestamp.toLocaleTimeString([], {\n        hour: '2-digit',\n        minute: '2-digit'\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 7\n    }, this);\n    switch (message.type) {\n      case 'system':\n        // For system messages like day headers\n        if (message.content.startsWith('Day ') || message.content.includes('Late-night')) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"day-header\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"day-marker\",\n              children: message.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 546,\n            columnNumber: 13\n          }, this);\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"system-message\",\n          children: formatText(message.content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 16\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-icon\",\n            children: \"\\u26A0\\uFE0F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 555,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-content\",\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 16\n        }, this);\n      case 'social':\n        // Use our specialized social media component for better notification display\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `social-message ${message.sender}`,\n          children: [/*#__PURE__*/_jsxDEV(SocialMediaMessage, {\n            content: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 13\n          }, this), timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 562,\n          columnNumber: 11\n        }, this);\n      case 'dialogue':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `dialogue-message ${message.sender}`,\n          children: [formatText(message.content), timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 570,\n          columnNumber: 11\n        }, this);\n      case 'action':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `action-message ${message.sender}`,\n          children: [formatText(message.content), timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 11\n        }, this);\n      case 'thought':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `thought-message ${message.sender}`,\n          children: [formatText(message.content), timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 11\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `message ${message.sender}`,\n          children: [formatText(message.content), timestamp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: (scenario === null || scenario === void 0 ? void 0 : scenario.title) || 'Untitled Scenario'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: handleSaveScenario,\n          title: \"Save Scenario\",\n          children: /*#__PURE__*/_jsxDEV(Save, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: () => setShowInstructionsEditor(true),\n          title: \"View/Edit Roleplay Instructions\",\n          children: /*#__PURE__*/_jsxDEV(ScrollText, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: () => setShowSettingsPanel(true),\n          title: \"Roleplay Settings\",\n          children: /*#__PURE__*/_jsxDEV(Settings, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 626,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: () => setShowMusicPanel(true),\n          title: \"Ambient Music\",\n          children: /*#__PURE__*/_jsxDEV(Music, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: () => setShowScenarioInfo(true),\n          title: \"View Scenario Details\",\n          children: /*#__PURE__*/_jsxDEV(BookOpen, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn reset-chat-btn\",\n          onClick: onReset,\n          title: \"Start Over\",\n          children: \"Start Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 642,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auto-detect-toggle\",\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"toggle-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: autoDetectMessageType,\n          onChange: () => setAutoDetectMessageType(!autoDetectMessageType)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }, this), \"Auto-detect message type based on content\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 652,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"type-explainer\",\n      children: autoDetectMessageType ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Automatically detected as: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"detected-type\",\n          children: messageType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 665,\n          columnNumber: 41\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Choose a response type: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Dialogue\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 38\n        }, this), \" (speaking), \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 76\n        }, this), \" (doing), \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Thought\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 109\n        }, this), \" (thinking), or \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Social\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 667,\n          columnNumber: 149\n        }, this), \" (social media)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 667,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [isPhoneMode ? /*#__PURE__*/_jsxDEV(MobilePhoneUI, {\n        messages: messages,\n        onSendMessage: handleSendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 11\n      }, this) : (/* Regular message display */\n      messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-wrapper ${message.sender}`,\n        children: [formatMessage(message), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timestamp\",\n          children: message.timestamp.toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 15\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 13\n      }, this))), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 671,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-type-selector\",\n      style: {\n        display: isPhoneMode ? 'none' : 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-type-help\",\n        title: \"Choose how you want to respond\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"type-help-text\",\n          children: autoDetectMessageType ? 'Detected type:' : 'Response type:'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 702,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `type-btn ${messageType === 'dialogue' ? 'active' : ''}`,\n        onClick: () => setMessageType('dialogue'),\n        title: \"What you say out loud to characters\",\n        children: [/*#__PURE__*/_jsxDEV(MessageSquare, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 710,\n          columnNumber: 11\n        }, this), \"Dialogue\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `type-btn ${messageType === 'action' ? 'active' : ''}`,\n        onClick: () => setMessageType('action'),\n        title: \"Physical actions you take\",\n        children: [/*#__PURE__*/_jsxDEV(MousePointer, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 11\n        }, this), \"Action\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 713,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `type-btn ${messageType === 'thought' ? 'active' : ''}`,\n        onClick: () => setMessageType('thought'),\n        title: \"Your inner thoughts (not heard by others)\",\n        children: [/*#__PURE__*/_jsxDEV(Brain, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 11\n        }, this), \"Thought\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `type-btn ${messageType === 'social' ? 'active' : ''}`,\n        onClick: () => setMessageType('social'),\n        title: \"Social media posts, DMs, notifications\",\n        children: [/*#__PURE__*/_jsxDEV(Phone, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 734,\n          columnNumber: 11\n        }, this), \"Social\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 729,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 701,\n      columnNumber: 7\n    }, this), !isPhoneMode && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"input-area\",\n      onSubmit: e => {\n        e.preventDefault();\n        console.log('Form submitted');\n        handleSendMessage(inputValue);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: inputValue,\n          onChange: e => setInputValue(e.target.value),\n          onKeyDown: handleKeyPress,\n          placeholder: messageType === 'dialogue' ? 'Type your dialogue...' : messageType === 'action' ? 'Describe your action...' : messageType === 'thought' ? 'Share your thoughts...' : 'Type social media content, DMs, or notifications...',\n          rows: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 750,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-helper\",\n          children: inputValue.length > 0 ? 'Press Enter to send or click the button' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-btn\",\n        children: /*#__PURE__*/_jsxDEV(Send, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 768,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 741,\n      columnNumber: 9\n    }, this), showInstructionsEditor && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(RoleplayInstructions, {\n          instructions: roleplayInstructions,\n          onSave: saveRoleplayInstructions,\n          onCancel: cancelEditInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 9\n    }, this), showSettingsPanel && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Roleplay Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowSettingsPanel(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 792,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"AI Response Style\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Temperature:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 798,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0.3\",\n                  children: \"More Focused (0.3)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 800,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"0.7\",\n                  selected: true,\n                  children: \"Balanced (0.7)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 801,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"1.0\",\n                  children: \"More Creative (1.0)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 802,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 799,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"setting-description\",\n              children: \"Lower values make responses more predictable, higher values make them more creative.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Message Type Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: autoDetectMessageType,\n                  onChange: () => setAutoDetectMessageType(!autoDetectMessageType)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 812,\n                  columnNumber: 21\n                }, this), \"Auto-detect message type\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 811,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"setting-description\",\n                children: \"When enabled, the system will automatically detect if your message is dialogue, action, thought, or social media content.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 819,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 808,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"settings-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Display Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 824,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-control\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 827,\n                  columnNumber: 21\n                }, this), \" Dark Mode\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 826,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-control\",\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  checked: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 832,\n                  columnNumber: 21\n                }, this), \" Show Timestamps\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 831,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 830,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 823,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"save-settings-btn\",\n            children: \"Save Settings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 9\n    }, this), showMusicPanel && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Ambient Music\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowMusicPanel(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Choose background music to enhance your roleplay experience:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"music-options\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"music-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Atmospheric\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 856,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Gentle Ambient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 857,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Dark Ambient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Space\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 859,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 855,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"music-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Emotional\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 863,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Melancholic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 864,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Hopeful\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 865,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Tense\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 866,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 862,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"music-option\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Location-based\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 870,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Nature Sounds\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 871,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Urban\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"play-btn\",\n                children: \"\\u25B6\\uFE0F Rain & Thunder\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 873,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 869,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"music-controls\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Stop Music\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 878,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"volume-control\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Volume:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"range\",\n                min: \"0\",\n                max: \"100\",\n                value: \"70\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 881,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 877,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"music-note\",\n            children: \"Music feature coming soon! This is a placeholder interface.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 885,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 851,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 845,\n      columnNumber: 9\n    }, this), showScenarioInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Scenario Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 896,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"close-btn\",\n            onClick: () => setShowScenarioInfo(false),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 897,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 895,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-body scenario-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: (scenario === null || scenario === void 0 ? void 0 : scenario.title) || 'Untitled Scenario'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 900,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Setting\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 903,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Location:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 904,\n                columnNumber: 20\n              }, this), \" \", (scenario === null || scenario === void 0 ? void 0 : (_scenario$setting = scenario.setting) === null || _scenario$setting === void 0 ? void 0 : _scenario$setting.location) || 'Not specified']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 904,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 905,\n                columnNumber: 20\n              }, this), \" \", (scenario === null || scenario === void 0 ? void 0 : (_scenario$setting2 = scenario.setting) === null || _scenario$setting2 === void 0 ? void 0 : _scenario$setting2.time) || 'Not specified']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 905,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Atmosphere:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 906,\n                columnNumber: 20\n              }, this), \" \", (scenario === null || scenario === void 0 ? void 0 : (_scenario$setting3 = scenario.setting) === null || _scenario$setting3 === void 0 ? void 0 : _scenario$setting3.atmosphere) || 'Not specified']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 906,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 902,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Your Character\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 910,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 911,\n                columnNumber: 20\n              }, this), \" \", (character === null || character === void 0 ? void 0 : character.name) || 'Unnamed']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 911,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Age:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 912,\n                columnNumber: 20\n              }, this), \" \", (character === null || character === void 0 ? void 0 : character.age) || 'Not specified']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 912,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 909,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Other Characters\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 916,\n              columnNumber: 17\n            }, this), (scenario === null || scenario === void 0 ? void 0 : (_scenario$otherCharac = scenario.otherCharacters) === null || _scenario$otherCharac === void 0 ? void 0 : _scenario$otherCharac.map((char, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"other-character\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: char.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 919,\n                  columnNumber: 24\n                }, this), \" (\", char.role, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 919,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: char.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 920,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 918,\n              columnNumber: 19\n            }, this))) || /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"No other characters specified.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 922,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Narrative Goals\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 926,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: (scenario === null || scenario === void 0 ? void 0 : scenario.narrativeGoals) || 'No specific goals set.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 927,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              children: \"Tone & Themes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 931,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: (scenario === null || scenario === void 0 ? void 0 : scenario.toneAndThemes) || 'Not specified'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 932,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 899,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 893,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 603,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"ec0qIhYnd0b7GfVPmwgnV7tgScM=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","Send","Settings","Music","BookOpen","ScrollText","MessageSquare","MousePointer","Brain","Phone","Save","RoleplayInstructions","MobilePhoneUI","SocialMediaMessage","preprocessAIMessage","formatSocialMediaContent","detectMessageType","jsxDEV","_jsxDEV","ChatInterface","character","scenario","onSaveChat","geminiService","onReset","_s","_scenario$setting","_scenario$setting2","_scenario$setting3","_scenario$otherCharac","messages","setMessages","inputValue","setInputValue","isTyping","setIsTyping","messageType","setMessageType","isPhoneMode","setIsPhoneMode","showInstructionsEditor","setShowInstructionsEditor","showSettingsPanel","setShowSettingsPanel","showMusicPanel","setShowMusicPanel","showScenarioInfo","setShowScenarioInfo","roleplayInstructions","setRoleplayInstructions","autoDetectMessageType","setAutoDetectMessageType","messagesEndRef","updateDetectedMessageType","text","detectedType","handleAiResponse","userMessage","responseContent","console","log","characterProfile","initialize","initPrompt","initialSituation","generateGeneric","error","errorMessageObj","id","Date","now","sender","type","content","timestamp","prev","generateResponse","includes","Promise","resolve","setTimeout","lowerResponse","toLowerCase","responseType","aiMessage","errorMessage","message","length","dayHeader","formattedContent","replace","initialMessage","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","saveRoleplayInstructions","instructions","updateInstructions","cancelEditInstructions","handleSaveScenario","dataToSave","toISOString","savedScenarios","JSON","parse","localStorage","getItem","existingIndex","findIndex","s","_s$scenario","push","setItem","stringify","alert","handleSendMessage","customText","messageText","trim","lowerText","lastMessageTime","getDayHeaderText","date","hours","getHours","timeOfDay","Math","floor","random","handleKeyPress","e","key","shiftKey","preventDefault","formatText","normalizedText","formattedText","paragraphs","split","sentences","groupedParagraphs","currentParagraph","forEach","sentence","map","para","i","processedPara","dangerouslySetInnerHTML","__html","fileName","_jsxFileName","lineNumber","columnNumber","sections","section","listItems","filter","item","className","children","j","parts","username","slice","join","formattedPara","formatMessage","toLocaleTimeString","hour","minute","startsWith","title","onClick","size","checked","onChange","onSendMessage","ref","style","display","onSubmit","value","target","onKeyDown","placeholder","rows","onSave","onCancel","selected","min","max","setting","location","time","atmosphere","name","age","otherCharacters","char","index","role","description","narrativeGoals","toneAndThemes","_c","$RefreshReg$"],"sources":["/Users/ryanmorrison/Code/narrativeforge/src/components/ChatInterface.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from 'react';\nimport { Send, Settings, Music, BookOpen, ScrollText, MessageSquare, MousePointer, Brain, Phone, Save } from 'lucide-react';\nimport RoleplayInstructions from './RoleplayInstructions';\nimport MobilePhoneUI from './MobilePhoneUI';\nimport SocialMediaMessage from './SocialMediaMessage';\nimport { preprocessAIMessage, formatSocialMediaContent, detectMessageType } from '../utils/textFormatUtils';\nimport './error-message.css';\n\nconst ChatInterface = ({ character, scenario, onSaveChat, geminiService, onReset }) => {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [messageType, setMessageType] = useState('dialogue'); // dialogue, action, thought\n  const [isPhoneMode, setIsPhoneMode] = useState(false); // State to track if we're in phone mode\n  const [showInstructionsEditor, setShowInstructionsEditor] = useState(false);\n  const [showSettingsPanel, setShowSettingsPanel] = useState(false);\n  const [showMusicPanel, setShowMusicPanel] = useState(false);\n  const [showScenarioInfo, setShowScenarioInfo] = useState(false);\n  const [roleplayInstructions, setRoleplayInstructions] = useState(scenario?.roleplayInstructions || '');\n  const [autoDetectMessageType, setAutoDetectMessageType] = useState(true); // New state for auto-detection toggle\n  const messagesEndRef = useRef(null);\n  \n  // Watch for input changes to detect message type in real-time\n  const updateDetectedMessageType = useCallback((text) => {\n    if (autoDetectMessageType && text) {\n      const detectedType = detectMessageType(text);\n      setMessageType(detectedType);\n    }\n  }, [autoDetectMessageType]);\n\n  // Update detected message type when input changes\n  useEffect(() => {\n    updateDetectedMessageType(inputValue);\n  }, [inputValue, updateDetectedMessageType]);\n\n  // When scenario changes, update the roleplay instructions\n  useEffect(() => {\n    if (scenario && scenario.roleplayInstructions) {\n      setRoleplayInstructions(scenario.roleplayInstructions);\n    }\n  }, [scenario]);\n  \n  // Get AI response\n  const handleAiResponse = useCallback(async (userMessage, messageType) => {\n    setIsTyping(true);\n    \n    try {\n      let responseContent;\n      \n      // If we have a Gemini service, use it\n      if (geminiService) {\n        // For the first message, include roleplay instructions if they exist\n        if (!userMessage && roleplayInstructions) {\n          console.log('Generating initial AI response with roleplay instructions');\n          \n          // Make sure the geminiService is initialized\n          if (!geminiService.characterProfile && character && scenario) {\n            console.log('Initializing geminiService with character and scenario');\n            geminiService.initialize(character, scenario);\n          }\n          \n          // Add it to the context for the AI but don't show it in chat\n          const initPrompt = `Initial scene: ${scenario?.initialSituation}\\n\\nRoleplay instructions:\\n${roleplayInstructions}\\n\\nPlease respond with an opening for this scene, following the roleplay instructions but without mentioning them directly. Make sure to use proper paragraph breaks and spacing for better readability.`;\n          console.log('Sending initial prompt');\n          \n          try {\n            responseContent = await geminiService.generateGeneric(initPrompt);\n            // Preprocess the response for better formatting\n            responseContent = preprocessAIMessage(responseContent);\n          } catch (error) {\n            console.error('Error generating initial response:', error);\n            // Create a specific error message for initial response\n            const errorMessageObj = {\n              id: Date.now(),\n              sender: 'system',\n              type: 'error',\n              content: 'There was an error getting a response. Please try again.',\n              timestamp: new Date()\n            };\n            \n            setMessages(prev => [...prev, errorMessageObj]);\n            setIsTyping(false);\n            return;\n          }\n        } else {\n          responseContent = await geminiService.generateResponse(userMessage, messageType);\n          \n          // Preprocess the response for better formatting\n          responseContent = preprocessAIMessage(responseContent);\n          \n          // Additional formatting for social media content\n          if (messageType === 'social' || responseContent.includes('@') || \n              responseContent.includes('Instagram') || responseContent.includes('TikTok')) {\n            responseContent = formatSocialMediaContent(responseContent);\n          }\n        }\n      } else {\n        // Fallback for development\n        await new Promise(resolve => setTimeout(resolve, 1500));\n        responseContent = \"This is a placeholder response. In the full implementation, this would be a response from Google's Gemini LLM, responding appropriately to your character's situation.\";\n      }\n      \n      // Check if the AI response is implying phone interaction\n      const lowerResponse = responseContent.toLowerCase();\n      if (lowerResponse.includes('on your phone') || \n          lowerResponse.includes('your phone shows') || \n          lowerResponse.includes('on the screen of your phone')) {\n        // Activate phone mode if AI refers to phone content\n        setIsPhoneMode(true);\n      }\n      \n      // Detect if this should be a social media response\n      let responseType = 'dialogue';\n      if (messageType === 'social' || \n          (responseContent && (responseContent.includes('@') || \n                             responseContent.includes('Instagram') || \n                             responseContent.includes('TikTok') || \n                             responseContent.includes('followers')))) {\n        responseType = 'social';\n      } else if (messageType === 'action') {\n        responseType = 'action';\n      } else if (messageType === 'thought') {\n        responseType = 'thought';\n      }\n      \n      const aiMessage = {\n        id: Date.now(),\n        sender: 'ai',\n        type: responseType,\n        content: responseContent,\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      console.error('Error getting AI response:', error);\n      \n      // Create a more informative error message\n      let errorMessage = 'There was an error getting a response. Please try again.';\n      \n      // Extract more specific error information if available\n      if (error.message) {\n        if (error.message.includes('401')) {\n          errorMessage = 'API Authentication Error: Your API key may be invalid or expired. Please check your settings.';\n        } else if (error.message.includes('403')) {\n          errorMessage = 'Access Denied: Your API key may not have access to the required model or you have exceeded your quota.';\n        } else if (error.message.includes('404')) {\n          errorMessage = 'Model Not Found: The specified AI model could not be found. Please check the model configuration.';\n        } else if (error.message.includes('429')) {\n          errorMessage = 'Rate Limit Exceeded: Too many requests. Please wait a moment and try again later.';\n        } else if (error.message.includes('safety')) {\n          errorMessage = 'Content filtered: The AI detected potentially sensitive content and could not respond.';\n        }\n      }\n      \n      // Add error message\n      const errorMessageObj = {\n        id: Date.now(),\n        sender: 'system',\n        type: 'error',\n        content: errorMessage,\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, errorMessageObj]);\n    } finally {\n      setIsTyping(false);\n    }\n  }, [geminiService, roleplayInstructions, scenario, character]);\n\n  // Initial system message when the scenario begins\n  useEffect(() => {\n    if (scenario && !messages.length) {\n      // Create day header\n      const dayHeader = {\n        id: Date.now() - 2,\n        type: 'system',\n        content: 'Day 1, Late-night',\n        timestamp: new Date()\n      };\n      \n      // Create initial narrative message describing the scenario\n      const formattedContent = scenario.initialSituation\n        .replace(/TikTok/g, '🎵 TikTok')\n        .replace(/Instagram/g, '📱 Instagram')\n        .replace(/YouTube/g, '▶️ YouTube')\n        .replace(/Twitter/g, '🐦 Twitter')\n        .replace(/@([\\w]+)/g, '@$1')\n        .replace(/girlfriend/g, 'girlfriend 💔')\n        .replace(/video call/g, 'video call 📱')\n        .replace(/guitar/g, 'guitar 🎸')\n        .replace(/notifications/g, 'notifications 🔔');\n      \n      const initialMessage = {\n        id: Date.now() - 1,\n        type: 'social',\n        content: formattedContent,\n        timestamp: new Date()\n      };\n      \n      // Set messages first\n      setMessages([dayHeader, initialMessage]);\n      \n      // If there are roleplay instructions, set them but DON'T add them as a visible message\n      if (scenario.roleplayInstructions) {\n        setRoleplayInstructions(scenario.roleplayInstructions);\n      }\n      \n      // Add a small delay before triggering the AI response to ensure state updates are complete\n      setTimeout(() => {\n        // Here's the critical fix - ensuring we only make this call when geminiService is ready\n        if (geminiService) {\n          console.log('Triggering initial AI response...');\n          handleAiResponse();\n        } else {\n          console.log('GeminiService not ready, skipping initial AI response');\n        }\n      }, 500);\n    }\n  }, [scenario, messages.length, geminiService, handleAiResponse]);\n\n  // Auto-scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  // Save roleplay instructions\n  const saveRoleplayInstructions = (instructions) => {\n    setRoleplayInstructions(instructions);\n    setShowInstructionsEditor(false);\n    \n    // Don't add to visible messages, but update the AI context\n    if (geminiService) {\n      geminiService.updateInstructions(instructions);\n    }\n  };\n\n  // Cancel editing instructions\n  const cancelEditInstructions = () => {\n    setShowInstructionsEditor(false);\n  };\n\n  // Save current scenario and chat\n  const handleSaveScenario = () => {\n    // Prepare the data to save\n    const dataToSave = {\n      character,\n      scenario,\n      messages,\n      timestamp: new Date().toISOString()\n    };\n    \n    try {\n      // Get existing saved scenarios\n      const savedScenarios = JSON.parse(localStorage.getItem('narrativeforge_scenarios') || '[]');\n      \n      // Check if this scenario already exists (by id)\n      const existingIndex = savedScenarios.findIndex(s => s.scenario?.id === scenario?.id);\n      \n      if (existingIndex >= 0) {\n        // Update existing scenario\n        savedScenarios[existingIndex] = dataToSave;\n      } else {\n        // Add new scenario with generated ID if needed\n        if (!scenario.id) {\n          scenario.id = `scenario_${Date.now()}`;\n        }\n        savedScenarios.push(dataToSave);\n      }\n      \n      // Save back to localStorage\n      localStorage.setItem('narrativeforge_scenarios', JSON.stringify(savedScenarios));\n      \n      // Notify the user\n      alert('Scenario saved successfully');\n    } catch (error) {\n      console.error('Error saving scenario:', error);\n      alert('Failed to save scenario: ' + error.message);\n    }\n  };\n\n  // Send user message\n  const handleSendMessage = (customText) => {\n    console.log('handleSendMessage called with:', customText || inputValue);\n    // Use either the custom text or the inputValue\n    const messageText = customText || inputValue;\n    \n    // Check that we have a valid string to work with\n    if (!messageText) {\n      console.log('Empty message, returning');\n      return;\n    }\n    \n    // Ensure messageText is a string before calling trim\n    if (typeof messageText === 'string') {\n      if (!messageText.trim()) {\n        console.log('Message contains only whitespace, returning');\n        return;\n      }\n      \n      console.log('Processing valid message:', messageText);\n      \n      // Check for phone mode commands\n      // Ensure messageText is a string before calling toLowerCase\n      const lowerText = messageText.toLowerCase();\n      if (lowerText.includes('check my phone') || lowerText.includes('look at my phone') || \n          lowerText.includes('check phone') || lowerText.includes('use my phone')) {\n        setIsPhoneMode(true);\n      } else if (lowerText.includes('put phone away') || lowerText.includes('stop using phone') || \n                 lowerText.includes('put away phone') || lowerText.includes('exit phone')) {\n        setIsPhoneMode(false);\n      }\n      \n      // Detect message type based on content and chosen type\n      let detectedType = messageType;\n      \n      // If auto-detection is enabled, determine type from content\n      if (autoDetectMessageType) {\n        detectedType = detectMessageType(messageText);\n      }\n      \n      // Add day header if this is the first message in a while\n      const now = new Date();\n      if (messages.length > 0) {\n        const lastMessageTime = messages[messages.length - 1].timestamp;\n        // If more than 3 hours since last message, add a timestamp header\n        if ((now - lastMessageTime) / (1000 * 60 * 60) > 3) {\n          const dayHeader = {\n            id: Date.now() - 1, // Ensure unique ID\n            type: 'system',\n            content: getDayHeaderText(now),\n            timestamp: now\n          };\n          setMessages(prev => [...prev, dayHeader]);\n        }\n      }\n      \n      // Create user message object\n      const userMessage = {\n        id: Date.now(),\n        sender: 'user',\n        type: detectedType,\n        content: messageText,\n        timestamp: now\n      };\n      \n      console.log('Adding user message to chat:', userMessage);\n      \n      // Add message to chat\n      setMessages(prev => [...prev, userMessage]);\n      \n      // Clear input field\n      setInputValue('');\n      \n      // Process with AI\n      handleAiResponse(userMessage.content, userMessage.type);\n    } else {\n      // Handle case where messageText is not a string\n      console.error('messageText is not a string:', messageText);\n    }\n  };\n  \n  // Helper function to get appropriate day header text\n  const getDayHeaderText = (date) => {\n    const hours = date.getHours();\n    let timeOfDay = '';\n    \n    if (hours >= 5 && hours < 12) {\n      timeOfDay = 'Morning';\n    } else if (hours >= 12 && hours < 17) {\n      timeOfDay = 'Afternoon';\n    } else if (hours >= 17 && hours < 22) {\n      timeOfDay = 'Evening';\n    } else {\n      timeOfDay = 'Late-night';\n    }\n    \n    return `Day ${Math.floor(Math.random() * 5 + 1)}, ${timeOfDay}`;\n  };\n\n  // Handle key press (Enter to send)\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // Format message based on type\n  const formatText = (text) => {\n    if (!text) return '';\n    if (typeof text !== 'string') return '';\n    \n    // Ensure proper paragraph spacing by normalizing all line breaks\n    // First, normalize different line break styles\n    let normalizedText = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');\n    \n    // Remove markdown bold formatting\n    normalizedText = normalizedText.replace(/\\*\\*([^*]+)\\*\\*/g, '$1');\n    \n    // Enhance line break separation for social media platform headers\n    normalizedText = normalizedText\n      .replace(/(📱 Instagram|🎵 TikTok|▶️ YouTube|🐦 Twitter|👻 Snapchat)/g, '\\n$1')  \n      .replace(/\\n\\n(📱 Instagram|🎵 TikTok|▶️ YouTube|🐦 Twitter|👻 Snapchat)/g, '\\n\\n\\n$1');\n    \n    // Format social media messages with proper styling\n    if (normalizedText.includes('@') || normalizedText.includes('#') || normalizedText.includes('Instagram') || normalizedText.includes('TikTok')) {\n      // Add emoji and styling to social media content\n      const formattedText = normalizedText\n        .replace(/Instagram/g, '📱 Instagram')\n        .replace(/TikTok/g, '🎵 TikTok')\n        .replace(/YouTube/g, '▶️ YouTube')\n        .replace(/Twitter/g, '🐦 Twitter')\n        .replace(/direct message/gi, 'DM 💬')\n        .replace(/@([\\w]+)/g, '<span class=\"handle\">@$1</span>')\n        .replace(/\"([^\"]+)\"/g, '<span class=\"quote\">\"$1\"</span>')\n        .replace(/\\bviral\\b/g, '<span class=\"highlight\">viral</span>')\n        .replace(/\\bfollowers\\b/g, 'followers 👥')\n        .replace(/\\blikes\\b/g, 'likes ❤️')\n        .replace(/\\bcomments\\b/g, 'comments 💬')\n        .replace(/\\bshares\\b/g, 'shares 🔄');\n          \n      // Make sure we have proper paragraph breaks\n      // Split by double newlines (paragraphs) or ensure line breaks in longer text\n      const paragraphs = formattedText.split(/\\n\\s*\\n/);\n      if (paragraphs.length === 1 && paragraphs[0].length > 200) {\n        // Long single paragraph - try to break it at sentence boundaries\n        const sentences = paragraphs[0].split(/(?<=\\.)\\s+/);\n        // Group sentences into reasonable paragraphs\n        const groupedParagraphs = [];\n        let currentParagraph = '';\n        sentences.forEach(sentence => {\n          if (currentParagraph.length + sentence.length > 200) {\n            groupedParagraphs.push(currentParagraph);\n            currentParagraph = sentence;\n          } else {\n            currentParagraph += (currentParagraph ? ' ' : '') + sentence;\n          }\n        });\n        if (currentParagraph) {\n          groupedParagraphs.push(currentParagraph);\n        }\n        \n        return groupedParagraphs.map((para, i) => {\n          const processedPara = para.replace(/\\n/g, '<br />');\n          return <p key={i} dangerouslySetInnerHTML={{ __html: processedPara }} />;\n        });\n      }\n      \n      return paragraphs.map((para, i) => {\n        const processedPara = para.replace(/\\n/g, '<br />');\n        return <p key={i} dangerouslySetInnerHTML={{ __html: processedPara }} />;\n      });\n    }\n    \n    // For message lists like the Instagram DM requests\n    if (normalizedText.includes('Instagram Message Requests:')) {\n      const sections = normalizedText.split(/\\n\\s*\\n/);\n      \n      return sections.map((section, i) => {\n        if (section.includes('•')) {\n          // This is a list section\n          const listItems = section.split('•').filter(item => item.trim());\n          return (\n            <div key={i} className=\"message-list\">\n              {listItems.map((item, j) => {\n                // Check if this contains a username and message\n                const parts = item.split(/\\n/);\n                if (parts.length > 1) {\n                  const username = parts[0].trim();\n                  const messageText = parts.slice(1).join('\\n').trim();\n                  \n                  return (\n                    <div key={j} className=\"dm-message\">\n                      <div className=\"dm-username\">{username}</div>\n                      <div className=\"dm-content\"><em>\"{messageText}\"</em></div>\n                    </div>\n                  );\n                } else {\n                  return <p key={j}>{item.trim()}</p>;\n                }\n              })}\n            </div>\n          );\n        } else {\n          // Regular paragraph\n          return <p key={i}>{section}</p>;\n        }\n      });\n    }\n    \n    // Regular content - split by paragraphs\n    // First check if we need to add paragraph breaks to a long single paragraph\n    const paragraphs = normalizedText.split(/\\n\\s*\\n/);\n    \n    if (paragraphs.length === 1 && paragraphs[0].length > 200) {\n      // Long single paragraph - try to break it at sentence boundaries\n      const sentences = paragraphs[0].split(/(?<=\\.)\\s+/);\n      // Group sentences into reasonable paragraphs\n      const groupedParagraphs = [];\n      let currentParagraph = '';\n      sentences.forEach(sentence => {\n        if (currentParagraph.length + sentence.length > 200) {\n          groupedParagraphs.push(currentParagraph);\n          currentParagraph = sentence;\n        } else {\n          currentParagraph += (currentParagraph ? ' ' : '') + sentence;\n        }\n      });\n      if (currentParagraph) {\n        groupedParagraphs.push(currentParagraph);\n      }\n      \n      return groupedParagraphs.map((para, i) => {\n        // Replace single newlines with <br>\n        const formattedPara = para.replace(/\\n/g, '<br />');\n        return <p key={i} dangerouslySetInnerHTML={{ __html: formattedPara }} />;\n      });\n    }\n    \n    return paragraphs.map((para, i) => {\n      // Replace single newlines with <br>\n      const formattedPara = para.replace(/\\n/g, '<br />');\n      return <p key={i} dangerouslySetInnerHTML={{ __html: formattedPara }} />;\n    });\n  };\n    \n  // Format message based on type\n  const formatMessage = (message) => {\n    // Create a timestamp element\n    const timestamp = (\n      <span className=\"timestamp\">\n        {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n      </span>\n    );\n    \n    switch (message.type) {\n      case 'system':\n        // For system messages like day headers\n        if (message.content.startsWith('Day ') || message.content.includes('Late-night')) {\n          return (\n            <div className=\"day-header\">\n              <div className=\"day-marker\">{message.content}</div>\n            </div>\n          );\n        }\n        return <div className=\"system-message\">{formatText(message.content)}</div>;\n        \n      case 'error':\n        return <div className=\"error-message\">\n          <div className=\"error-icon\">⚠️</div>\n          <div className=\"error-content\">{message.content}</div>\n        </div>;\n        \n      case 'social':\n        // Use our specialized social media component for better notification display\n        return (\n          <div className={`social-message ${message.sender}`}>\n            <SocialMediaMessage content={message.content} />\n            {timestamp}\n          </div>\n        );\n        \n      case 'dialogue':\n        return (\n          <div className={`dialogue-message ${message.sender}`}>\n            {formatText(message.content)}\n            {timestamp}\n          </div>\n        );\n        \n      case 'action':\n        return (\n          <div className={`action-message ${message.sender}`}>\n            {formatText(message.content)}\n            {timestamp}\n          </div>\n        );\n        \n      case 'thought':\n        return (\n          <div className={`thought-message ${message.sender}`}>\n            {formatText(message.content)}\n            {timestamp}\n          </div>\n        );\n        \n      default:\n        return (\n          <div className={`message ${message.sender}`}>\n            {formatText(message.content)}\n            {timestamp}\n          </div>\n        );\n    }\n  };\n\n  return (\n    <div className=\"chat-interface\">\n      <div className=\"chat-header\">\n        <h2>{scenario?.title || 'Untitled Scenario'}</h2>\n        <div className=\"chat-controls\">\n          <button \n            className=\"control-btn\" \n            onClick={handleSaveScenario}\n            title=\"Save Scenario\"\n          >\n            <Save size={18} />\n          </button>\n          <button \n            className=\"control-btn\" \n            onClick={() => setShowInstructionsEditor(true)}\n            title=\"View/Edit Roleplay Instructions\"\n          >\n            <ScrollText size={18} />\n          </button>\n          <button \n            className=\"control-btn\"\n            onClick={() => setShowSettingsPanel(true)}\n            title=\"Roleplay Settings\"\n          >\n            <Settings size={18} />\n          </button>\n          <button \n            className=\"control-btn\"\n            onClick={() => setShowMusicPanel(true)}\n            title=\"Ambient Music\"\n          >\n            <Music size={18} />\n          </button>\n          <button \n            className=\"control-btn\"\n            onClick={() => setShowScenarioInfo(true)}\n            title=\"View Scenario Details\"\n          >\n            <BookOpen size={18} />\n          </button>\n          <button \n            className=\"control-btn reset-chat-btn\" \n            onClick={onReset}\n            title=\"Start Over\"\n          >\n            Start Over\n          </button>\n        </div>\n      </div>\n      \n      <div className=\"auto-detect-toggle\">\n        <label className=\"toggle-label\">\n          <input \n            type=\"checkbox\" \n            checked={autoDetectMessageType} \n            onChange={() => setAutoDetectMessageType(!autoDetectMessageType)}\n          />\n          Auto-detect message type based on content\n        </label>\n      </div>\n      \n      <div className=\"type-explainer\">\n        {autoDetectMessageType ? (\n          <p>Automatically detected as: <strong className=\"detected-type\">{messageType}</strong></p>\n        ) : (\n          <p>Choose a response type: <strong>Dialogue</strong> (speaking), <strong>Action</strong> (doing), <strong>Thought</strong> (thinking), or <strong>Social</strong> (social media)</p>\n        )}\n      </div>\n      \n      <div className=\"messages-container\">\n        {/* Mobile Phone UI when in phone mode */}\n        {isPhoneMode ? (\n          <MobilePhoneUI \n            messages={messages} \n            onSendMessage={handleSendMessage}\n          />\n        ) : (\n          /* Regular message display */\n          messages.map(message => (\n            <div key={message.id} className={`message-wrapper ${message.sender}`}>\n              {formatMessage(message)}\n              <span className=\"timestamp\">\n                {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n              </span>\n            </div>\n          ))\n        )}\n        \n        {isTyping && (\n          <div className=\"typing-indicator\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        )}\n        \n        <div ref={messagesEndRef} />\n      </div>\n      \n      <div className=\"message-type-selector\" style={{ display: isPhoneMode ? 'none' : 'flex' }}>\n        <div className=\"message-type-help\" title=\"Choose how you want to respond\">\n          <span className=\"type-help-text\">{autoDetectMessageType ? 'Detected type:' : 'Response type:'}</span>\n        </div>\n        <button \n          className={`type-btn ${messageType === 'dialogue' ? 'active' : ''}`}\n          onClick={() => setMessageType('dialogue')}\n          title=\"What you say out loud to characters\"\n        >\n          <MessageSquare size={16} />\n          Dialogue\n        </button>\n        <button \n          className={`type-btn ${messageType === 'action' ? 'active' : ''}`}\n          onClick={() => setMessageType('action')}\n          title=\"Physical actions you take\"\n        >\n          <MousePointer size={16} />\n          Action\n        </button>\n        <button \n          className={`type-btn ${messageType === 'thought' ? 'active' : ''}`}\n          onClick={() => setMessageType('thought')}\n          title=\"Your inner thoughts (not heard by others)\"\n        >\n          <Brain size={16} />\n          Thought\n        </button>\n        <button \n          className={`type-btn ${messageType === 'social' ? 'active' : ''}`}\n          onClick={() => setMessageType('social')}\n          title=\"Social media posts, DMs, notifications\"\n        >\n          <Phone size={16} />\n          Social\n        </button>\n      </div>\n      \n      {/* Regular input area - hidden in phone mode */}\n      {!isPhoneMode && (\n        <form \n          className=\"input-area\"\n          onSubmit={(e) => {\n            e.preventDefault();\n            console.log('Form submitted');\n            handleSendMessage(inputValue);\n          }}\n        >\n          <div className=\"input-wrapper\">\n            <textarea \n              value={inputValue}\n              onChange={(e) => setInputValue(e.target.value)}\n              onKeyDown={handleKeyPress}\n              placeholder={messageType === 'dialogue' ? 'Type your dialogue...' : \n                          messageType === 'action' ? 'Describe your action...' : \n                          messageType === 'thought' ? 'Share your thoughts...' :\n                          'Type social media content, DMs, or notifications...'}\n              rows={3}\n            />\n            <div className=\"input-helper\">\n              {inputValue.length > 0 ? 'Press Enter to send or click the button' : ''}\n            </div>\n          </div>\n          <button \n            type=\"submit\"\n            className=\"send-btn\"\n          >\n            <Send size={20} />\n          </button>\n        </form>\n      )}\n      \n      {/* Roleplay Instructions Modal */}\n      {showInstructionsEditor && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <RoleplayInstructions \n              instructions={roleplayInstructions}\n              onSave={saveRoleplayInstructions}\n              onCancel={cancelEditInstructions}\n            />\n          </div>\n        </div>\n      )}\n\n      {/* Settings Panel */}\n      {showSettingsPanel && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"panel-header\">\n              <h3>Roleplay Settings</h3>\n              <button className=\"close-btn\" onClick={() => setShowSettingsPanel(false)}>×</button>\n            </div>\n            <div className=\"panel-body\">\n              <div className=\"settings-section\">\n                <h4>AI Response Style</h4>\n                <div className=\"setting-control\">\n                  <label>Temperature:</label>\n                  <select>\n                    <option value=\"0.3\">More Focused (0.3)</option>\n                    <option value=\"0.7\" selected>Balanced (0.7)</option>\n                    <option value=\"1.0\">More Creative (1.0)</option>\n                  </select>\n                </div>\n                <p className=\"setting-description\">Lower values make responses more predictable, higher values make them more creative.</p>\n              </div>\n              \n              <div className=\"settings-section\">\n                <h4>Message Type Settings</h4>\n                <div className=\"setting-control\">\n                  <label>\n                    <input \n                      type=\"checkbox\" \n                      checked={autoDetectMessageType} \n                      onChange={() => setAutoDetectMessageType(!autoDetectMessageType)}\n                    /> \n                    Auto-detect message type\n                  </label>\n                  <p className=\"setting-description\">When enabled, the system will automatically detect if your message is dialogue, action, thought, or social media content.</p>\n                </div>\n              </div>\n              \n              <div className=\"settings-section\">\n                <h4>Display Settings</h4>\n                <div className=\"setting-control\">\n                  <label>\n                    <input type=\"checkbox\" /> Dark Mode\n                  </label>\n                </div>\n                <div className=\"setting-control\">\n                  <label>\n                    <input type=\"checkbox\" checked /> Show Timestamps\n                  </label>\n                </div>\n              </div>\n              \n              <button className=\"save-settings-btn\">Save Settings</button>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Music Panel */}\n      {showMusicPanel && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"panel-header\">\n              <h3>Ambient Music</h3>\n              <button className=\"close-btn\" onClick={() => setShowMusicPanel(false)}>×</button>\n            </div>\n            <div className=\"panel-body\">\n              <p>Choose background music to enhance your roleplay experience:</p>\n              \n              <div className=\"music-options\">\n                <div className=\"music-option\">\n                  <h4>Atmospheric</h4>\n                  <button className=\"play-btn\">▶️ Gentle Ambient</button>\n                  <button className=\"play-btn\">▶️ Dark Ambient</button>\n                  <button className=\"play-btn\">▶️ Space</button>\n                </div>\n                \n                <div className=\"music-option\">\n                  <h4>Emotional</h4>\n                  <button className=\"play-btn\">▶️ Melancholic</button>\n                  <button className=\"play-btn\">▶️ Hopeful</button>\n                  <button className=\"play-btn\">▶️ Tense</button>\n                </div>\n                \n                <div className=\"music-option\">\n                  <h4>Location-based</h4>\n                  <button className=\"play-btn\">▶️ Nature Sounds</button>\n                  <button className=\"play-btn\">▶️ Urban</button>\n                  <button className=\"play-btn\">▶️ Rain & Thunder</button>\n                </div>\n              </div>\n              \n              <div className=\"music-controls\">\n                <button>Stop Music</button>\n                <div className=\"volume-control\">\n                  <label>Volume:</label>\n                  <input type=\"range\" min=\"0\" max=\"100\" value=\"70\" />\n                </div>\n              </div>\n              \n              <p className=\"music-note\">Music feature coming soon! This is a placeholder interface.</p>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {/* Scenario Info Panel */}\n      {showScenarioInfo && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <div className=\"panel-header\">\n              <h3>Scenario Details</h3>\n              <button className=\"close-btn\" onClick={() => setShowScenarioInfo(false)}>×</button>\n            </div>\n            <div className=\"panel-body scenario-info\">\n              <h4>{scenario?.title || 'Untitled Scenario'}</h4>\n              \n              <div className=\"info-section\">\n                <h5>Setting</h5>\n                <p><strong>Location:</strong> {scenario?.setting?.location || 'Not specified'}</p>\n                <p><strong>Time:</strong> {scenario?.setting?.time || 'Not specified'}</p>\n                <p><strong>Atmosphere:</strong> {scenario?.setting?.atmosphere || 'Not specified'}</p>\n              </div>\n              \n              <div className=\"info-section\">\n                <h5>Your Character</h5>\n                <p><strong>Name:</strong> {character?.name || 'Unnamed'}</p>\n                <p><strong>Age:</strong> {character?.age || 'Not specified'}</p>\n              </div>\n              \n              <div className=\"info-section\">\n                <h5>Other Characters</h5>\n                {scenario?.otherCharacters?.map((char, index) => (\n                  <div key={index} className=\"other-character\">\n                    <p><strong>{char.name}</strong> ({char.role})</p>\n                    <p>{char.description}</p>\n                  </div>\n                )) || <p>No other characters specified.</p>}\n              </div>\n              \n              <div className=\"info-section\">\n                <h5>Narrative Goals</h5>\n                <p>{scenario?.narrativeGoals || 'No specific goals set.'}</p>\n              </div>\n              \n              <div className=\"info-section\">\n                <h5>Tone & Themes</h5>\n                <p>{scenario?.toneAndThemes || 'Not specified'}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}