{"ast":null,"code":"var _jsxFileName = \"/Users/ryanmorrison/Code/narrativeforge/src/components/ChatInterface.js\",\n  _scenario,\n  _s = $RefreshSig$();\n// Save roleplay instructions\nconst saveRoleplayInstructions = instructions => {\n  setRoleplayInstructions(instructions);\n  setShowInstructionsEditor(false);\n\n  // Notify the AI about the instruction update\n  const systemMessage = {\n    id: Date.now(),\n    type: 'system',\n    content: `Roleplay instructions have been updated. Please follow these guidelines:\\n\\n${instructions}`,\n    timestamp: new Date()\n  };\n  setMessages(prev => [...prev, systemMessage]);\n};\n\n// Cancel editing instructions\nconst cancelEditInstructions = () => {\n  setShowInstructionsEditor(false);\n}; // When scenario changes, update the roleplay instructions\nuseEffect(() => {\n  if (scenario && scenario.roleplayInstructions) {\n    setRoleplayInstructions(scenario.roleplayInstructions);\n  }\n}, [scenario]);\nconst [showInstructionsEditor, setShowInstructionsEditor] = useState(false);\nconst [roleplayInstructions, setRoleplayInstructions] = useState(((_scenario = scenario) === null || _scenario === void 0 ? void 0 : _scenario.roleplayInstructions) || '');\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Send, Settings, Music, BookOpen, ScrollText } from 'lucide-react';\nimport RoleplayInstructions from './RoleplayInstructions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatInterface = ({\n  character,\n  scenario,\n  onSaveChat,\n  geminiService,\n  onReset\n}) => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [messageType, setMessageType] = useState('dialogue'); // dialogue, action, thought\n  const messagesEndRef = useRef(null);\n\n  // Initial system message when the scenario begins\n  useEffect(() => {\n    if (scenario && !messages.length) {\n      // Create initial narrative message describing the scenario\n      const initialMessage = {\n        id: Date.now(),\n        type: 'system',\n        content: scenario.initialSituation,\n        timestamp: new Date()\n      };\n      setMessages([initialMessage]);\n\n      // Simulate AI thinking and then responding to set the scene\n      handleAiResponse();\n    }\n  }, [scenario]);\n\n  // Auto-scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n\n  // Send user message\n  const handleSendMessage = () => {\n    if (!inputValue.trim()) return;\n\n    // Create user message object\n    const userMessage = {\n      id: Date.now(),\n      sender: 'user',\n      type: messageType,\n      content: inputValue,\n      timestamp: new Date()\n    };\n\n    // Add message to chat\n    setMessages(prev => [...prev, userMessage]);\n\n    // Clear input field\n    setInputValue('');\n\n    // Process with AI\n    handleAiResponse(userMessage.content, userMessage.type);\n  };\n\n  // Handle key press (Enter to send)\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // Get AI response\n  const handleAiResponse = async (userMessage, messageType) => {\n    setIsTyping(true);\n    try {\n      let responseContent;\n\n      // If we have a Gemini service, use it\n      if (geminiService) {\n        responseContent = await geminiService.generateResponse(userMessage, messageType);\n      } else {\n        // Fallback for development\n        await new Promise(resolve => setTimeout(resolve, 1500));\n        responseContent = \"This is a placeholder response. In the full implementation, this would be a response from Google's Gemini 2.5 Flash LLM, responding appropriately to your character's situation.\";\n      }\n      const aiMessage = {\n        id: Date.now(),\n        sender: 'ai',\n        type: 'dialogue',\n        content: responseContent,\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      console.error('Error getting AI response:', error);\n\n      // Add error message\n      const errorMessage = {\n        id: Date.now(),\n        sender: 'system',\n        type: 'error',\n        content: 'There was an error getting a response. Please try again.',\n        timestamp: new Date()\n      };\n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n\n  // Format message based on type\n  const formatMessage = message => {\n    switch (message.type) {\n      case 'system':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"system-message\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 16\n        }, this);\n      case 'error':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 16\n        }, this);\n      case 'dialogue':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `dialogue-message ${message.sender}`,\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 16\n        }, this);\n      case 'action':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `action-message ${message.sender}`,\n          children: [\"*\", message.content, \"*\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 16\n        }, this);\n      case 'thought':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `thought-message ${message.sender}`,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: message.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 67\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `message ${message.sender}`,\n          children: message.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-interface\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: (scenario === null || scenario === void 0 ? void 0 : scenario.title) || 'Untitled Scenario'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn reset-chat-btn\",\n          onClick: onReset,\n          title: \"Start Over\",\n          children: \"Start Over\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          onClick: () => setShowInstructionsEditor(true),\n          title: \"View/Edit Roleplay Instructions\",\n          children: /*#__PURE__*/_jsxDEV(ScrollText, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          children: /*#__PURE__*/_jsxDEV(Settings, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          children: /*#__PURE__*/_jsxDEV(Music, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"control-btn\",\n          children: /*#__PURE__*/_jsxDEV(BookOpen, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), showInstructionsEditor && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modal-content\",\n          children: /*#__PURE__*/_jsxDEV(RoleplayInstructions, {\n            instructions: roleplayInstructions,\n            onSave: saveRoleplayInstructions,\n            onCancel: cancelEditInstructions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages-container\",\n      children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message-wrapper ${message.sender}`,\n        children: [formatMessage(message), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timestamp\",\n          children: message.timestamp.toLocaleTimeString([], {\n            hour: '2-digit',\n            minute: '2-digit'\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"typing-indicator\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-type-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `type-btn ${messageType === 'dialogue' ? 'active' : ''}`,\n        onClick: () => setMessageType('dialogue'),\n        children: \"Dialogue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `type-btn ${messageType === 'action' ? 'active' : ''}`,\n        onClick: () => setMessageType('action'),\n        children: \"Action\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `type-btn ${messageType === 'thought' ? 'active' : ''}`,\n        onClick: () => setMessageType('thought'),\n        children: \"Thought\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        onKeyDown: handleKeyPress,\n        placeholder: messageType === 'dialogue' ? 'Type your dialogue...' : messageType === 'action' ? 'Describe your action...' : 'Share your thoughts...',\n        rows: 3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-btn\",\n        onClick: handleSendMessage,\n        children: /*#__PURE__*/_jsxDEV(Send, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatInterface, \"t5vXShRm6wMHyeh3s7uGvVPGo1I=\");\n_c = ChatInterface;\nexport default ChatInterface;\nvar _c;\n$RefreshReg$(_c, \"ChatInterface\");","map":{"version":3,"names":["saveRoleplayInstructions","instructions","setRoleplayInstructions","setShowInstructionsEditor","systemMessage","id","Date","now","type","content","timestamp","setMessages","prev","cancelEditInstructions","useEffect","scenario","roleplayInstructions","showInstructionsEditor","useState","_scenario","React","useRef","Send","Settings","Music","BookOpen","ScrollText","RoleplayInstructions","jsxDEV","_jsxDEV","ChatInterface","character","onSaveChat","geminiService","onReset","_s","messages","inputValue","setInputValue","isTyping","setIsTyping","messageType","setMessageType","messagesEndRef","length","initialMessage","initialSituation","handleAiResponse","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","handleSendMessage","trim","userMessage","sender","handleKeyPress","e","key","shiftKey","preventDefault","responseContent","generateResponse","Promise","resolve","setTimeout","aiMessage","error","console","errorMessage","formatMessage","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","onClick","size","onSave","onCancel","map","toLocaleTimeString","hour","minute","ref","value","onChange","target","onKeyDown","placeholder","rows","_c","$RefreshReg$"],"sources":["/Users/ryanmorrison/Code/narrativeforge/src/components/ChatInterface.js"],"sourcesContent":["  // Save roleplay instructions\n  const saveRoleplayInstructions = (instructions) => {\n    setRoleplayInstructions(instructions);\n    setShowInstructionsEditor(false);\n    \n    // Notify the AI about the instruction update\n    const systemMessage = {\n      id: Date.now(),\n      type: 'system',\n      content: `Roleplay instructions have been updated. Please follow these guidelines:\\n\\n${instructions}`,\n      timestamp: new Date()\n    };\n    \n    setMessages(prev => [...prev, systemMessage]);\n  };\n\n  // Cancel editing instructions\n  const cancelEditInstructions = () => {\n    setShowInstructionsEditor(false);\n  };  // When scenario changes, update the roleplay instructions\n  useEffect(() => {\n    if (scenario && scenario.roleplayInstructions) {\n      setRoleplayInstructions(scenario.roleplayInstructions);\n    }\n  }, [scenario]);  const [showInstructionsEditor, setShowInstructionsEditor] = useState(false);\n  const [roleplayInstructions, setRoleplayInstructions] = useState(scenario?.roleplayInstructions || '');import React, { useState, useEffect, useRef } from 'react';\nimport { Send, Settings, Music, BookOpen, ScrollText } from 'lucide-react';\nimport RoleplayInstructions from './RoleplayInstructions';\n\nconst ChatInterface = ({ character, scenario, onSaveChat, geminiService, onReset }) => {\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [messageType, setMessageType] = useState('dialogue'); // dialogue, action, thought\n  const messagesEndRef = useRef(null);\n  \n  // Initial system message when the scenario begins\n  useEffect(() => {\n    if (scenario && !messages.length) {\n      // Create initial narrative message describing the scenario\n      const initialMessage = {\n        id: Date.now(),\n        type: 'system',\n        content: scenario.initialSituation,\n        timestamp: new Date()\n      };\n      \n      setMessages([initialMessage]);\n      \n      // Simulate AI thinking and then responding to set the scene\n      handleAiResponse();\n    }\n  }, [scenario]);\n\n  // Auto-scroll to bottom when messages change\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  // Send user message\n  const handleSendMessage = () => {\n    if (!inputValue.trim()) return;\n    \n    // Create user message object\n    const userMessage = {\n      id: Date.now(),\n      sender: 'user',\n      type: messageType,\n      content: inputValue,\n      timestamp: new Date()\n    };\n    \n    // Add message to chat\n    setMessages(prev => [...prev, userMessage]);\n    \n    // Clear input field\n    setInputValue('');\n    \n    // Process with AI\n    handleAiResponse(userMessage.content, userMessage.type);\n  };\n\n  // Handle key press (Enter to send)\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  // Get AI response\n  const handleAiResponse = async (userMessage, messageType) => {\n    setIsTyping(true);\n    \n    try {\n      let responseContent;\n      \n      // If we have a Gemini service, use it\n      if (geminiService) {\n        responseContent = await geminiService.generateResponse(userMessage, messageType);\n      } else {\n        // Fallback for development\n        await new Promise(resolve => setTimeout(resolve, 1500));\n        responseContent = \"This is a placeholder response. In the full implementation, this would be a response from Google's Gemini 2.5 Flash LLM, responding appropriately to your character's situation.\";\n      }\n      \n      const aiMessage = {\n        id: Date.now(),\n        sender: 'ai',\n        type: 'dialogue',\n        content: responseContent,\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, aiMessage]);\n    } catch (error) {\n      console.error('Error getting AI response:', error);\n      \n      // Add error message\n      const errorMessage = {\n        id: Date.now(),\n        sender: 'system',\n        type: 'error',\n        content: 'There was an error getting a response. Please try again.',\n        timestamp: new Date()\n      };\n      \n      setMessages(prev => [...prev, errorMessage]);\n    } finally {\n      setIsTyping(false);\n    }\n  };\n\n  // Format message based on type\n  const formatMessage = (message) => {\n    switch (message.type) {\n      case 'system':\n        return <p className=\"system-message\">{message.content}</p>;\n      case 'error':\n        return <p className=\"error-message\">{message.content}</p>;\n      case 'dialogue':\n        return <p className={`dialogue-message ${message.sender}`}>{message.content}</p>;\n      case 'action':\n        return <p className={`action-message ${message.sender}`}>*{message.content}*</p>;\n      case 'thought':\n        return <p className={`thought-message ${message.sender}`}><i>{message.content}</i></p>;\n      default:\n        return <p className={`message ${message.sender}`}>{message.content}</p>;\n    }\n  };\n\n  return (\n    <div className=\"chat-interface\">\n      <div className=\"chat-header\">\n        <h2>{scenario?.title || 'Untitled Scenario'}</h2>\n        <div className=\"chat-controls\">\n          <button \n            className=\"control-btn reset-chat-btn\" \n            onClick={onReset}\n            title=\"Start Over\"\n          >\n            Start Over\n          </button>\n          <button \n            className=\"control-btn\" \n            onClick={() => setShowInstructionsEditor(true)}\n            title=\"View/Edit Roleplay Instructions\"\n          >\n            <ScrollText size={18} />\n          </button>\n          <button className=\"control-btn\">\n            <Settings size={18} />\n          </button>\n          <button className=\"control-btn\">\n            <Music size={18} />\n          </button>\n          <button className=\"control-btn\">\n            <BookOpen size={18} />\n          </button>\n        </div>\n\n      {/* Roleplay Instructions Modal */}\n      {showInstructionsEditor && (\n        <div className=\"modal-overlay\">\n          <div className=\"modal-content\">\n            <RoleplayInstructions \n              instructions={roleplayInstructions}\n              onSave={saveRoleplayInstructions}\n              onCancel={cancelEditInstructions}\n            />\n          </div>\n        </div>\n      )}\n      </div>\n      \n      <div className=\"messages-container\">\n        {messages.map(message => (\n          <div key={message.id} className={`message-wrapper ${message.sender}`}>\n            {formatMessage(message)}\n            <span className=\"timestamp\">\n              {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n            </span>\n          </div>\n        ))}\n        \n        {isTyping && (\n          <div className=\"typing-indicator\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        )}\n        \n        <div ref={messagesEndRef} />\n      </div>\n      \n      <div className=\"message-type-selector\">\n        <button \n          className={`type-btn ${messageType === 'dialogue' ? 'active' : ''}`}\n          onClick={() => setMessageType('dialogue')}\n        >\n          Dialogue\n        </button>\n        <button \n          className={`type-btn ${messageType === 'action' ? 'active' : ''}`}\n          onClick={() => setMessageType('action')}\n        >\n          Action\n        </button>\n        <button \n          className={`type-btn ${messageType === 'thought' ? 'active' : ''}`}\n          onClick={() => setMessageType('thought')}\n        >\n          Thought\n        </button>\n      </div>\n      \n      <div className=\"input-area\">\n        <textarea \n          value={inputValue}\n          onChange={(e) => setInputValue(e.target.value)}\n          onKeyDown={handleKeyPress}\n          placeholder={messageType === 'dialogue' ? 'Type your dialogue...' : \n                       messageType === 'action' ? 'Describe your action...' : 'Share your thoughts...'}\n          rows={3}\n        />\n        <button className=\"send-btn\" onClick={handleSendMessage}>\n          <Send size={20} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatInterface;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}